PLE;INIT;post_processing_method=EnsemblePostProcessing(ensemble_size=25,hillclimb_size=10000,max_models=200),search_method=AsyncEA(),keep_analysis_log=/scratch/Airlines_0/gama_large_1h8c_local_20200220T163610/1169_0.log,verbosity=30,n_jobs=8,max_eval_time=None,max_total_time=3600,random_state=3058228231,max_pipeline_length=None,regularize_length=True,scoring=roc_auc;2020-02-20 17:36:25,914764;END!
PLE;PS;preprocessing;default;2020-02-20 17:36:30,738179;END!
PLE;PE;preprocessing;default;2020-02-20 17:36:30,927027;END!
PLE;PS;search;AsyncEA;2020-02-20 17:36:30,927260;END!
PLE;EVAL;2020-02-20 17:36:31,459860;1.07843017578125;1.074620392;(-inf, -2);a95a0ec2-23b7-4f0d-80d7-d015fdbb0d90;LogisticRegression(StandardScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:36:38,958080;END!
PLE;EVAL_ERR;2020-02-20 17:36:31,460373;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', StandardScaler(copy=True, with_mean=True, with_std=True)),                ('0',                 LogisticRegression(C=15.0, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;Solver lbfgs supports only dual=False, got dual=True;2020-02-20 17:36:32,538125;END!
PLE;EVAL;2020-02-20 17:36:31,297053;5.7262492179870605;5.709428047;(0.5570391609377099, -2);3f442fc6-e0cd-4a50-86c7-d9a956733bb5;MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=True);2020-02-20 17:36:39,134803;END!
PLE;IND_MUT;dc7342c0-69ef-44ff-9c68-a9e9c9a8ac09;a95a0ec2-23b7-4f0d-80d7-d015fdbb0d90;mut_replace_terminal;2020-02-20 17:36:39,136956;END!
PLE;EVAL;2020-02-20 17:36:31,793520;5.709716558456421;5.695463252;(0.5245887465974972, -1);9c334f4f-e8c6-4250-ab58-f13922922420;BernoulliNB(data, alpha=0.1, fit_prior=True);2020-02-20 17:36:39,461226;END!
PLE;IND_CX;533cfef0-8c25-4483-9452-35f721acccc5;3f442fc6-e0cd-4a50-86c7-d9a956733bb5;9c334f4f-e8c6-4250-ab58-f13922922420;2020-02-20 17:36:39,463117;END!
PLE;EVAL;2020-02-20 17:36:32,135208;5.7495810985565186;5.734568768;(0.524587828942576, -1);b2a2ad69-e6a1-4225-ae45-d484e75434da;BernoulliNB(data, alpha=10.0, fit_prior=False);2020-02-20 17:36:39,810346;END!
PLE;IND_MUT;c63abe79-2a70-409d-ba3f-47d15a5ad0e9;a95a0ec2-23b7-4f0d-80d7-d015fdbb0d90;mut_replace_primitive;2020-02-20 17:36:39,812253;END!
PLE;EVAL;2020-02-20 17:36:32,492608;11.534900426864624;11.502302371;(0.5046012922192042, -2);14e1cff1-d2e1-44ff-87ec-eb53681b816f;GaussianNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001));2020-02-20 17:36:44,497486;END!
PLE;IND_MUT;a4773d16-11b0-4b1a-8065-26f97988ff3b;b2a2ad69-e6a1-4225-ae45-d484e75434da;mut_replace_primitive;2020-02-20 17:36:44,499230;END!
PLE;EVAL;2020-02-20 17:36:44,482612;1.707533836364746;1.7022440450000005;(-inf, -3);940a4303-6e8f-45a4-8ff5-27fde34c3de1;KNeighborsClassifier(FastICA(MinMaxScaler(data), FastICA.tol=0.6000000000000001), KNeighborsClassifier.n_neighbors=27, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance');2020-02-20 17:36:46,561393;END!
PLE;EVAL_ERR;2020-02-20 17:36:44,482966;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2', MinMaxScaler(copy=True, feature_range=(0, 1))),                ('1',                 FastICA(algorithm='parallel', fun='logcosh', fun_args=None,                         max_iter=200, n_components=None, random_state=None,                         tol=0.6000000000000001, w_init=None, whiten=True)),                ('0',                 KNeighborsClassifier(algorithm='auto', leaf_size=30,                                      metric='minkowski', metric_params=None,                                      n_jobs=None, n_neighbors=27, p=1,                                      weights='distance'))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 17:36:46,189969;END!
PLE;IND_MUT;4a3aa338-76b5-4dff-8e22-f341c0f6bb5a;9c334f4f-e8c6-4250-ab58-f13922922420;mut_replace_primitive;2020-02-20 17:36:46,562321;END!
PLE;EVAL;2020-02-20 17:36:46,580499;0.983802318572998;0.9805963900000005;(-inf, -3);09c92734-50ed-433e-a3eb-2cfd5b1b4f27;ExtraTreesClassifier(VarianceThreshold(Normalizer(data, Normalizer.norm='l2'), VarianceThreshold.threshold=0.45), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=19, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:36:47,895805;END!
PLE;EVAL_ERR;2020-02-20 17:36:46,583096;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2', Normalizer(cop...                 ExtraTreesClassifier(bootstrap=True, class_weight=None,                                      criterion='entropy', max_depth=None,                                      max_features=0.3, max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=2, min_samples_split=19,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);<class 'ValueError'>;No feature in X meets the variance threshold 0.45000;2020-02-20 17:36:47,564159;END!
PLE;IND_MUT;b9737eea-3da4-4e6c-8716-2eb4785f37e3;14e1cff1-d2e1-44ff-87ec-eb53681b816f;mut_replace_terminal;2020-02-20 17:36:47,896833;END!
PLE;EVAL;2020-02-20 17:36:32,311609;16.23674774169922;16.189276160000002;(0.6134526715906187, -2);e167ae3e-f946-4f47-a437-655d95e5beb3;DecisionTreeClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='precomputed', FeatureAgglomeration.linkage='complete'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=9);2020-02-20 17:36:49,005085;END!
PLE;IND_MUT;c187f715-be44-4e1a-8904-74e9ae089121;14e1cff1-d2e1-44ff-87ec-eb53681b816f;mut_replace_primitive;2020-02-20 17:36:49,007010;END!
PLE;EVAL;2020-02-20 17:36:31,626559;18.597694873809814;18.546098730999997;(0.679532390774389, -3);d75507a1-b3c9-4075-be71-81e0569c51d4;LogisticRegression(PCA(MaxAbsScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:36:50,673201;END!
PLE;IND_MUT;bbf8151f-e3a6-46fe-8650-26b2438579b0;9c334f4f-e8c6-4250-ab58-f13922922420;mut_replace_primitive;2020-02-20 17:36:50,675058;END!
PLE;EVAL;2020-02-20 17:36:48,938147;5.531259059906006;5.516821586999999;(0.5245887465974972, -1);ae2b8de1-34cb-4ee3-83ce-17d3862d1d02;BernoulliNB(data, alpha=1.0, fit_prior=True);2020-02-20 17:36:54,884523;END!
PLE;IND_MUT;d3462e13-1f44-4338-9c3d-c0cce0b4aefd;a95a0ec2-23b7-4f0d-80d7-d015fdbb0d90;mut_replace_terminal;2020-02-20 17:36:54,886314;END!
PLE;EVAL;2020-02-20 17:36:50,602558;10.952311277389526;10.924966593;(0.5971197776266788, -3);436691a0-2c32-4134-acef-a227380ddc77;DecisionTreeClassifier(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=47, SelectPercentile.score_func=f_classif), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20);2020-02-20 17:37:01,985876;END!
PLE;IND_MUT;1172e5d6-3596-4a2d-a27c-eab529d2c2e9;3f442fc6-e0cd-4a50-86c7-d9a956733bb5;mut_replace_primitive;2020-02-20 17:37:01,987450;END!
PLE;EVAL;2020-02-20 17:36:37,880539;24.90688133239746;24.839037457000003;(0.6492280120936806, -2);62e0c681-7662-4a51-8301-cceeda711816;KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 17:37:03,498080;END!
PLE;IND_CX;f2814b52-5478-43db-8b30-6e194adbcb76;436691a0-2c32-4134-acef-a227380ddc77;a95a0ec2-23b7-4f0d-80d7-d015fdbb0d90;2020-02-20 17:37:03,499874;END!
PLE;EVAL;2020-02-20 17:37:03,494762;0.958892822265625;0.955062096999999;(-inf, -1);1212593c-bb3a-4585-8cab-b1cc32da3619;LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:37:04,798058;END!
PLE;EVAL_ERR;2020-02-20 17:37:03,495025;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 LogisticRegression(C=0.0001, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;Solver lbfgs supports only dual=False, got dual=True;2020-02-20 17:37:04,453456;END!
PLE;IND_MUT;e6c683ae-e8c5-43d1-b3f3-38d48d30c839;e167ae3e-f946-4f47-a437-655d95e5beb3;mut_insert;2020-02-20 17:37:04,799159;END!
PLE;EVAL;2020-02-20 17:37:04,797808;5.758349657058716;5.743654432;(0.533965540639527, -2);8505e462-c935-4db2-ba4c-d1342d2ce695;BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=True);2020-02-20 17:37:10,946526;END!
PLE;IND_CX;ec42c5dc-8d52-4e9e-87b3-a45e222dc6c2;d75507a1-b3c9-4075-be71-81e0569c51d4;1212593c-bb3a-4585-8cab-b1cc32da3619;2020-02-20 17:37:10,948694;END!
PLE;EVAL;2020-02-20 17:37:10,912636;10.218874216079712;10.193582401;(0.673911567300447, -3);21b07a5d-4423-479f-a70a-c65520c43c97;LogisticRegression(PCA(SelectPercentile(data, SelectPercentile.percentile=27, SelectPercentile.score_func=f_classif), PCA.iterated_power=2, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:37:21,541041;END!
PLE;IND_MUT;ebd577f1-2c3b-484e-be67-c366eb347e67;d75507a1-b3c9-4075-be71-81e0569c51d4;mut_replace_primitive;2020-02-20 17:37:21,542890;END!
PLE;EVAL;2020-02-20 17:37:21,485532;1.2778739929199219;1.2710890930000005;(-inf, -3);cacf8fec-aa15-48e2-a505-6c33b775c4d0;MultinomialNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='polynomial', Nystroem.n_components=6), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.001, fit_prior=True);2020-02-20 17:37:23,052276;END!
PLE;EVAL_ERR;2020-02-20 17:37:21,485775;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2',                 Nystroem(coef0=None, degree=None, gamma=1.0,                          kernel='polynomial', kernel_params=None,                          n_components=6, random_state=None)),                ('1',                 PolynomialFeatures(degree=2, include_bias=False,                                    interaction_only=False, order='C')),                ('0',                 MultinomialNB(alpha=0.001, class_prior=None, fit_prior=True))],         verbose=False);<class 'ValueError'>;Input X must be non-negative;2020-02-20 17:37:22,763247;END!
PLE;IND_MUT;a2baa5cf-e534-4cfe-92e0-a4802f7ef78e;21b07a5d-4423-479f-a70a-c65520c43c97;mut_replace_terminal;2020-02-20 17:37:23,053367;END!
PLE;EVAL;2020-02-20 17:37:23,043378;1.6781787872314453;1.673374190000004;(-inf, -3);dad0fc11-a9c2-4e13-aab5-5419dc393f4a;KNeighborsClassifier(RobustScaler(FastICA(data, FastICA.tol=0.55)), KNeighborsClassifier.n_neighbors=3, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 17:37:25,054069;END!
PLE;EVAL_ERR;2020-02-20 17:37:23,043655;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2',                 FastICA(algori...n_args=None,                         max_iter=200, n_components=None, random_state=None,                         tol=0.55, w_init=None, whiten=True)),                ('1',                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),                              with_centering=True, with_scaling=True)),                ('0',                 KNeighborsClassifier(algorithm='auto', leaf_size=30,                                      metric='minkowski', metric_params=None,                                      n_jobs=None, n_neighbors=3, p=1,                                      weights='uniform'))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 17:37:24,721219;END!
PLE;IND_MUT;9cff1e45-c0ed-437a-9f11-906b86f0ac17;62e0c681-7662-4a51-8301-cceeda711816;mut_replace_terminal;2020-02-20 17:37:25,055157;END!
PLE;EVAL;2020-02-20 17:37:25,022866;10.872165441513062;10.844247435;(0.5819794499197066, -1);67e46f00-5021-41ac-a177-27b63f111f07;LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:37:36,232502;END!
PLE;IND_MUT;69b6a55e-20c9-40fa-bad6-ba4343040ae0;67e46f00-5021-41ac-a177-27b63f111f07;mut_replace_terminal;2020-02-20 17:37:36,234722;END!
PLE;EVAL;2020-02-20 17:37:36,193238;5.202571868896484;5.1896744829999975;(0.5245887465974972, -1);01a2be98-b367-4658-9e5f-68286c2954d1;BernoulliNB(data, alpha=0.1, fit_prior=True);2020-02-20 17:37:41,735956;END!
PLE;IND_MUT;12def682-0b0f-42b9-af7a-9f9086ffb807;8505e462-c935-4db2-ba4c-d1342d2ce695;mut_insert;2020-02-20 17:37:41,738040;END!
PLE;EVAL;2020-02-20 17:36:32,902437;79.26945877075195;79.063342001;(0.6441213996701265, -2);ace68339-e971-487b-8793-52b2489a4843;KNeighborsClassifier(SelectPercentile(data, SelectPercentile.percentile=12, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=36, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 17:37:53,122691;END!
PLE;IND_MUT;848f2d2d-062e-4f09-9f0e-60b96728a004;21b07a5d-4423-479f-a70a-c65520c43c97;mut_replace_primitive;2020-02-20 17:37:53,124569;END!
PLE;EVAL;2020-02-20 17:36:37,431588;84.50464177131653;84.28643507400001;(0.6746871548820836, -3);b5bc3c0a-7a74-4839-aa6f-4435804fcc4a;ExtraTreesClassifier(Normalizer(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:38:03,063892;END!
PLE;IND_MUT;eb68fcba-6848-4d27-9ae3-dd89744da983;e167ae3e-f946-4f47-a437-655d95e5beb3;mut_insert;2020-02-20 17:38:03,066063;END!
PLE;EVAL;2020-02-20 17:37:52,752192;9.505600929260254;9.480592919000003;(0.5389059900841002, -2);cc15564e-81e4-475d-ba5c-b0c9a8a91581;MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=10.0, fit_prior=False);2020-02-20 17:38:03,369942;END!
PLE;IND_MUT;0b225f98-b533-4fd2-8e6b-94c0328f8870;3f442fc6-e0cd-4a50-86c7-d9a956733bb5;mut_insert;2020-02-20 17:38:03,372151;END!
PLE;EVAL;2020-02-20 17:36:38,274587;92.65377020835876;92.418220922;(0.6925969529874071, -1);29099de2-dbf0-458e-b4e2-f29706ac390a;GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25);2020-02-20 17:38:11,387894;END!
PLE;IND_MUT;dc0cefab-2f1a-4da9-90bd-926c2ad5d96b;ace68339-e971-487b-8793-52b2489a4843;mut_replace_primitive;2020-02-20 17:38:11,389706;END!
PLE;EVAL;2020-02-20 17:38:11,270944;1.1109881401062012;1.1036926000000022;(-inf, -3);bcee625b-9b9a-400b-97a3-456546cf02a0;GradientBoostingClassifier(FeatureAgglomeration(StandardScaler(data), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001);2020-02-20 17:38:12,714305;END!
PLE;EVAL_ERR;2020-02-20 17:38:11,271225;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2', StandardScaler...                                            max_features=0.7000000000000001,                                            max_leaf_nodes=None,                                            min_impurity_decrease=0.0,                                            min_impurity_split=None,                                            min_samples_leaf=6,                                            min_samples_split=9,                                            min_weight_fraction_leaf=0.0,                                            n_estimators=100,                                            n_iter_no_change=None,                                            presort='auto', random_state=None,                                            subsample=0.6500000000000001,                                            tol=0.0001, validation_fraction=0.1,                                            verbose=0, warm_start=False))],         verbose=False);<class 'ValueError'>;The condensed distance matrix must contain only finite values.;2020-02-20 17:38:12,381750;END!
PLE;IND_MUT;76ffaa7c-ea52-4ace-9408-aa7f76657328;d75507a1-b3c9-4075-be71-81e0569c51d4;mut_replace_primitive;2020-02-20 17:38:12,715636;END!
PLE;EVAL;2020-02-20 17:38:12,702460;6.804822206497192;6.785825533000008;(0.5591787678162886, -2);fb336467-2f16-4b36-9495-c3484ebd335f;DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=18);2020-02-20 17:38:19,987210;END!
PLE;IND_MUT;8a4321ca-b65f-4531-84fb-3d9c4914d605;b5bc3c0a-7a74-4839-aa6f-4435804fcc4a;mut_replace_terminal;2020-02-20 17:38:19,989722;END!
PLE;EVAL;2020-02-20 17:38:19,859760;1.6107802391052246;1.6059711890000017;(-inf, -2);1073bee6-102c-480c-9469-f703e3970607;MultinomialNB(FastICA(data, FastICA.tol=0.75), alpha=10.0, fit_prior=True);2020-02-20 17:38:21,733421;END!
PLE;EVAL_ERR;2020-02-20 17:38:19,859979;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FastICA(algorithm='parallel', fun='logcosh', fun_args=None,                         max_iter=200, n_components=None, random_state=None,                         tol=0.75, w_init=None, whiten=True)),                ('0',                 MultinomialNB(alpha=10.0, class_prior=None, fit_prior=True))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 17:38:21,470381;END!
PLE;IND_MUT;e71735b7-2b84-46c8-88cb-a3bd6759fddd;ae2b8de1-34cb-4ee3-83ce-17d3862d1d02;mut_replace_terminal;2020-02-20 17:38:21,734737;END!
PLE;EVAL;2020-02-20 17:38:02,902780;28.13831901550293;28.067952598999995;(0.6190797741525869, -1);fdc8c0fe-40d7-4694-9ae6-67bf13a0337b;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance');2020-02-20 17:38:34,554853;END!
PLE;IND_MUT;d75138cd-6b0c-4db9-ba18-6b42756c1ddb;29099de2-dbf0-458e-b4e2-f29706ac390a;mut_insert;2020-02-20 17:38:34,557382;END!
PLE;EVAL;2020-02-20 17:38:32,942798;15.971508026123047;15.929235927000008;(0.6311794024264339, -2);14f81001-2413-4e14-9610-eb27bb341d05;KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), KNeighborsClassifier.n_neighbors=2, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 17:38:49,716638;END!
PLE;IND_MUT;5ff40483-c908-4fb1-9c8d-4b526e09c5cb;62e0c681-7662-4a51-8301-cceeda711816;mut_shrink;2020-02-20 17:38:49,718612;END!
PLE;EVAL;2020-02-20 17:38:49,447038;0.9314718246459961;0.9286617879999994;(-inf, -2);65f4729e-0f87-48d2-8355-4d1476386d71;LogisticRegression(MinMaxScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:38:50,686315;END!
PLE;EVAL_ERR;2020-02-20 17:38:49,447246;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', MinMaxScaler(copy=True, feature_range=(0, 1))),                ('0',                 LogisticRegression(C=0.1, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;Solver lbfgs supports only dual=False, got dual=True;2020-02-20 17:38:50,378342;END!
PLE;IND_MUT;e19f936d-eca6-4432-9e19-0eed0bbb9958;01a2be98-b367-4658-9e5f-68286c2954d1;mut_insert;2020-02-20 17:38:50,687807;END!
PLE;EVAL;2020-02-20 17:37:01,931326;265.9923152923584;265.31700008900003;(0.676838434422649, -2);c0bbbb23-d6c5-46cd-954d-429b186f6be3;GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002);2020-02-20 17:41:28,431493;END!
PLE;IND_MUT;6a52dacd-9989-4da3-9c6d-8a265ac72177;3f442fc6-e0cd-4a50-86c7-d9a956733bb5;mut_replace_terminal;2020-02-20 17:41:28,434196;END!
PLE;EVAL;2020-02-20 17:38:21,799824;189.57869219779968;189.08911241;(0.7062759476910707, -1);e64df28f-382e-496e-be67-72478a3b3527;RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100);2020-02-20 17:41:40,244912;END!
PLE;IND_MUT;c11a66a1-9c08-40dd-bb91-c3c82792efe9;65f4729e-0f87-48d2-8355-4d1476386d71;mut_replace_terminal;2020-02-20 17:41:40,247263;END!
PLE;EVAL;2020-02-20 17:36:31,963718;360.1241147518158;359.177909043;(-inf, -1);13da1b22-9b8c-4758-9766-3a43b0dc584b;RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100);2020-02-20 17:42:32,394825;END!
PLE;EVAL_TO;2020-02-20 17:36:31,964356;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 RandomForestClassifier(bootstrap=True, class_weight=None,                                        criterion='entropy', max_depth=None,                                        max_features=0.45, max_leaf_nodes=None,                                        min_impurity_decrease=0.0,                                        min_impurity_split=None,                                        min_samples_leaf=15,                                        min_samples_split=7,                                        min_weight_fraction_leaf=0.0,                                        n_estimators=100, n_jobs=None,                                        oob_score=False, random_state=None,                                        verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:42:32,083199;END!
PLE;IND_MUT;e687b70e-6c50-431c-987f-7a20e6549fef;d75507a1-b3c9-4075-be71-81e0569c51d4;mut_replace_terminal;2020-02-20 17:42:32,396569;END!
PLE;EVAL;2020-02-20 17:36:47,845463;360.2639706134796;359.33411721299996;(-inf, -3);42573449-5879-4842-9fcc-7fdbb791461d;GradientBoostingClassifier(PCA(MinMaxScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001);2020-02-20 17:42:48,421244;END!
PLE;EVAL_TO;2020-02-20 17:36:47,845765;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2', MinMaxScaler(c...                                            loss='deviance', max_depth=5,                                            max_features=0.4,                                            max_leaf_nodes=None,                                            min_impurity_decrease=0.0,                                            min_impurity_split=None,                                            min_samples_leaf=16,                                            min_samples_split=15,                                            min_weight_fraction_leaf=0.0,                                            n_estimators=100,                                            n_iter_no_change=None,                                            presort='auto', random_state=None,                                            subsample=0.6500000000000001,                                            tol=0.0001, validation_fraction=0.1,                                            verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:42:48,103915;END!
PLE;IND_MUT;a38f5c67-86cc-4868-a9b0-30a6b8e19450;01a2be98-b367-4658-9e5f-68286c2954d1;mut_insert;2020-02-20 17:42:48,423177;END!
PLE;EVAL;2020-02-20 17:42:48,391318;12.207404375076294;12.176255388000016;(0.6906970486405875, -2);0967b7f1-032b-48b0-afeb-a66d64a9e459;DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11);2020-02-20 17:43:00,883088;END!
PLE;IND_MUT;daca1289-14e8-409f-8578-07322a8552bf;fb336467-2f16-4b36-9495-c3484ebd335f;mut_insert;2020-02-20 17:43:00,885515;END!
PLE;EVAL;2020-02-20 17:43:00,964370;0.9417273998260498;0.9385330900000213;(-inf, -1);58ba6011-3c56-4f75-818f-032c74d6b193;LogisticRegression(data, LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:43:02,203774;END!
PLE;EVAL_ERR;2020-02-20 17:43:00,964613;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 LogisticRegression(C=15.0, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;Solver lbfgs supports only dual=False, got dual=True;2020-02-20 17:43:01,905937;END!
PLE;IND_CX;6037868f-dd97-41a1-b35c-bd6b6c04bef7;0967b7f1-032b-48b0-afeb-a66d64a9e459;1073bee6-102c-480c-9469-f703e3970607;2020-02-20 17:43:02,205762;END!
PLE;EVAL;2020-02-20 17:37:41,657849;360.3679156303406;359.46085917;(-inf, -1);58cf03b3-e802-4ad4-a0d0-09a73101ec35;RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100);2020-02-20 17:43:42,310336;END!
PLE;EVAL_TO;2020-02-20 17:37:41,658128;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 RandomForestCl...r(bootstrap=False, class_weight=None,                                        criterion='entropy', max_depth=None,                                        max_features=0.6500000000000001,                                        max_leaf_nodes=None,                                        min_impurity_decrease=0.0,                                        min_impurity_split=None,                                        min_samples_leaf=13,                                        min_samples_split=17,                                        min_weight_fraction_leaf=0.0,                                        n_estimators=100, n_jobs=None,                                        oob_score=False, random_state=None,                                        verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:43:42,020992;END!
PLE;IND_MUT;8a612021-4080-42f7-a5dc-02cd95a3e751;14f81001-2413-4e14-9610-eb27bb341d05;mut_replace_primitive;2020-02-20 17:43:42,312880;END!
PLE;EVAL;2020-02-20 17:43:42,238821;6.315054416656494;6.299072507000005;(0.6595050245998515, -3);8f1af80d-d90c-430d-8256-8ea19885e1e3;GaussianNB(RobustScaler(StandardScaler(data)));2020-02-20 17:43:48,882501;END!
PLE;IND_MUT;69474dd5-6033-43e2-82a7-5c1f5360a396;0967b7f1-032b-48b0-afeb-a66d64a9e459;mut_replace_primitive;2020-02-20 17:43:48,884870;END!
PLE;EVAL;2020-02-20 17:43:48,818936;1.5164141654968262;1.5122339100000204;(-inf, -2);567cfd1e-a643-4e20-bfeb-59e138beb14f;DecisionTreeClassifier(FastICA(data, FastICA.tol=0.2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=9, min_samples_split=7);2020-02-20 17:43:50,616235;END!
PLE;EVAL_ERR;2020-02-20 17:43:48,819164;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FastICA(algori...                         max_iter=200, n_components=None, random_state=None,                         tol=0.2, w_init=None, whiten=True)),                ('0',                 DecisionTreeClassifier(class_weight=None, criterion='gini',                                        max_depth=3, max_features=None,                                        max_leaf_nodes=None,                                        min_impurity_decrease=0.0,                                        min_impurity_split=None,                                        min_samples_leaf=9, min_samples_split=7,                                        min_weight_fraction_leaf=0.0,                                        presort=False, random_state=None,                                        splitter='best'))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 17:43:50,335169;END!
PLE;IND_MUT;b090fabd-9a61-4f4e-817f-7508a3a430ce;e167ae3e-f946-4f47-a437-655d95e5beb3;mut_insert;2020-02-20 17:43:50,618272;END!
PLE;EVAL;2020-02-20 17:38:02,686130;360.44595646858215;359.514464705;(-inf, -2);6b69a6f8-4e2f-4fd9-be32-ee48702c66df;ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=8, min_samples_split=14, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:44:03,433549;END!
PLE;EVAL_TO;2020-02-20 17:38:02,686371;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', MaxAbsScaler(c...                 ExtraTreesClassifier(bootstrap=False, class_weight=None,                                      criterion='gini', max_depth=None,                                      max_features=1.0, max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=8, min_samples_split=14,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:44:03,127288;END!
PLE;IND_MUT;f1b61a91-5288-48a5-b878-1adc713b21ca;fb336467-2f16-4b36-9495-c3484ebd335f;mut_insert;2020-02-20 17:44:03,436214;END!
PLE;EVAL;2020-02-20 17:44:03,374374;5.153960227966309;5.1408445029999825;(0.524587828942576, -1);48811b3e-0a50-4a5a-9e9b-1a91e8cff2d3;BernoulliNB(data, alpha=10.0, fit_prior=False);2020-02-20 17:44:08,849068;END!
PLE;IND_CX;ad983c0c-c557-40ce-8314-788d169a944e;6b69a6f8-4e2f-4fd9-be32-ee48702c66df;65f4729e-0f87-48d2-8355-4d1476386d71;2020-02-20 17:44:08,851749;END!
PLE;EVAL;2020-02-20 17:38:50,664861;361.25917387008667;360.32709861;(-inf, -2);79ebee31-576a-438c-ae74-5b4558605fcc;GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3);2020-02-20 17:44:52,221498;END!
PLE;EVAL_TO;2020-02-20 17:38:50,665097;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 PolynomialFeat...                                            learning_rate=0.01, loss='deviance',                                            max_depth=8, max_features=0.55,                                            max_leaf_nodes=None,                                            min_impurity_decrease=0.0,                                            min_impurity_split=None,                                            min_samples_leaf=5,                                            min_samples_split=8,                                            min_weight_fraction_leaf=0.0,                                            n_estimators=100,                                            n_iter_no_change=None,                                            presort='auto', random_state=None,                                            subsample=0.3, tol=0.0001,                                            validation_fraction=0.1, verbose=0,                                            warm_start=False))],         verbose=False);2020-02-20 17:44:51,918264;END!
PLE;IND_MUT;605ce055-4108-4d6a-8b6e-050e0efeca62;1212593c-bb3a-4585-8cab-b1cc32da3619;mut_replace_primitive;2020-02-20 17:44:52,224165;END!
PLE;EVAL;2020-02-20 17:42:32,357109;139.70412015914917;139.336769317;(0.708263623680854, -2);ad9fcc16-3a17-405e-a01d-9977b37019ed;ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=14, min_samples_split=6, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:44:54,777998;END!
PLE;IND_MUT;72e117a7-8f39-42f6-810a-7653e0cb7e9a;cc15564e-81e4-475d-ba5c-b0c9a8a91581;mut_shrink;2020-02-20 17:44:54,781259;END!
PLE;EVAL;2020-02-20 17:44:54,286571;4.869704008102417;4.856815722000022;(0.5551549159987466, -1);b806803e-ea1d-49ba-b29c-a4b0de3acc28;MultinomialNB(data, alpha=0.1, fit_prior=True);2020-02-20 17:44:59,392039;END!
PLE;IND_MUT;0bd5b044-9209-413b-adb3-f988747f099b;29099de2-dbf0-458e-b4e2-f29706ac390a;mut_replace_primitive;2020-02-20 17:44:59,395192;END!
PLE;EVAL;2020-02-20 17:44:59,330541;6.634434461593628;6.6173232969999844;(0.6795324214550773, -2);dc7342c0-69ef-44ff-9c68-a9e9c9a8ac09;LogisticRegression(StandardScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:45:06,207019;END!
PLE;IND_MUT;e81dff32-544e-46c9-a526-d7aa26b4b4e3;fb336467-2f16-4b36-9495-c3484ebd335f;mut_insert;2020-02-20 17:45:06,209809;END!
PLE;EVAL;2020-02-20 17:45:06,142414;5.102984666824341;5.089559172000008;(0.5570391929969678, -2);533cfef0-8c25-4483-9452-35f721acccc5;MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True);2020-02-20 17:45:11,482149;END!
PLE;IND_CX;2c9ce2e9-b688-4309-a9f7-0cd3aefc39ee;533cfef0-8c25-4483-9452-35f721acccc5;c0bbbb23-d6c5-46cd-954d-429b186f6be3;2020-02-20 17:45:11,485382;END!
PLE;EVAL;2020-02-20 17:44:52,164356;20.222077131271362;20.169768295999972;(0.6161835496341074, -3);ae9315d8-1683-440f-a85b-29918182fb79;DecisionTreeClassifier(PolynomialFeatures(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=8, min_samples_split=14);2020-02-20 17:45:12,622647;END!
PLE;IND_MUT;91239a5b-43d1-4d61-83d2-6ca99394cd42;65f4729e-0f87-48d2-8355-4d1476386d71;mut_shrink;2020-02-20 17:45:12,626027;END!
PLE;EVAL;2020-02-20 17:45:11,419435;1.5250821113586426;1.5204211010000108;(-inf, -2);c63abe79-2a70-409d-ba3f-47d15a5ad0e9;LogisticRegression(FastICA(data, FastICA.tol=0.0), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:45:13,207555;END!
PLE;EVAL_ERR;2020-02-20 17:45:11,419673;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FastICA(algori...args=None,                         max_iter=200, n_components=None, random_state=None,                         tol=0.0, w_init=None, whiten=True)),                ('0',                 LogisticRegression(C=15.0, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 17:45:12,944308;END!
PLE;IND_MUT;1e1a5eeb-d12f-48c4-aad1-4d48e632aa73;ad9fcc16-3a17-405e-a01d-9977b37019ed;mut_insert;2020-02-20 17:45:13,210078;END!
PLE;EVAL;2020-02-20 17:45:13,140009;4.960796356201172;4.947638703000052;(0.5551549160502819, -1);4a3aa338-76b5-4dff-8e22-f341c0f6bb5a;MultinomialNB(data, alpha=0.01, fit_prior=True);2020-02-20 17:45:18,368621;END!
PLE;IND_MUT;a294b9f5-410b-49b4-a840-bc3ddd5ac928;dc7342c0-69ef-44ff-9c68-a9e9c9a8ac09;mut_replace_primitive;2020-02-20 17:45:18,372006;END!
PLE;EVAL;2020-02-20 17:45:18,277198;10.60989785194397;10.582120915000019;(0.5070751231699522, -2);b9737eea-3da4-4e6c-8716-2eb4785f37e3;GaussianNB(RBFSampler(data, RBFSampler.gamma=0.25));2020-02-20 17:45:29,129012;END!
PLE;IND_MUT;dbcfd1e8-601c-453c-9274-bbfbafc0ef3b;c63abe79-2a70-409d-ba3f-47d15a5ad0e9;mut_insert;2020-02-20 17:45:29,137828;END!
PLE;EVAL;2020-02-20 17:41:28,314894;304.8053505420685;304.03963174899997;(0.6202983470255623, -3);72b9cd35-e77e-4f8a-9fcc-7d5a62f27516;GradientBoostingClassifier(PolynomialFeatures(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3);2020-02-20 17:46:33,480231;END!
PLE;IND_MUT;c6bbce20-ed32-4bff-84ac-21f360c170d0;01a2be98-b367-4658-9e5f-68286c2954d1;mut_replace_primitive;2020-02-20 17:46:33,483931;END!
PLE;EVAL;2020-02-20 17:44:08,785883;158.89238667488098;158.48231857499997;(0.6489311585858164, -3);0aff2149-78c0-4435-a8ef-f29017187d2a;GradientBoostingClassifier(VarianceThreshold(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), VarianceThreshold.threshold=0.4), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4);2020-02-20 17:46:48,069255;END!
PLE;RMV_IND;Individual 940a4303-6e8f-45a4-8ff5-27fde34c3de1
Pipeline: KNeighborsClassifier(FastICA(MinMaxScaler(data), FastICA.tol=0.6000000000000001), KNeighborsClassifier.n_neighbors=27, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 17, 36, 44, 482612), wallclock_time=1.707533836364746, process_time=1.7022440450000005);2020-02-20 17:46:48,071295;END!
PLE;IND_MUT;f7aaff53-f8a6-46cd-ba00-474fea6e33c8;ad9fcc16-3a17-405e-a01d-9977b37019ed;mut_replace_primitive;2020-02-20 17:46:48,073521;END!
PLE;EVAL;2020-02-20 17:46:47,962405;6.605832815170288;6.58838726099998;(0.6795324214550773, -2);d3462e13-1f44-4338-9c3d-c0cce0b4aefd;LogisticRegression(StandardScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:46:54,874284;END!
PLE;RMV_IND;Individual 09c92734-50ed-433e-a3eb-2cfd5b1b4f27
Pipeline: ExtraTreesClassifier(VarianceThreshold(Normalizer(data, Normalizer.norm='l2'), VarianceThreshold.threshold=0.45), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.3, min_samples_leaf=2, min_samples_split=19, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 17, 36, 46, 580499), wallclock_time=0.983802318572998, process_time=0.9805963900000005);2020-02-20 17:46:54,875819;END!
PLE;IND_MUT;829232c5-938f-4039-81b8-6e36a6d0333f;1212593c-bb3a-4585-8cab-b1cc32da3619;mut_replace_terminal;2020-02-20 17:46:54,877997;END!
PLE;EVAL;2020-02-20 17:46:54,819639;1.42832350730896;1.42440951399999;(-inf, -2);1172e5d6-3596-4a2d-a27c-eab529d2c2e9;MultinomialNB(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), alpha=100.0, fit_prior=True);2020-02-20 17:46:56,517297;END!
PLE;EVAL_ERR;2020-02-20 17:46:54,819842;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 RBFSampler(gamma=0.15000000000000002, n_components=100,                            random_state=None)),                ('0',                 MultinomialNB(alpha=100.0, class_prior=None, fit_prior=True))],         verbose=False);<class 'ValueError'>;Input X must be non-negative;2020-02-20 17:46:56,247824;END!
PLE;RMV_IND;Individual cacf8fec-aa15-48e2-a505-6c33b775c4d0
Pipeline: MultinomialNB(PolynomialFeatures(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='polynomial', Nystroem.n_components=6), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.001, fit_prior=True)
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 17, 37, 21, 485532), wallclock_time=1.2778739929199219, process_time=1.2710890930000005);2020-02-20 17:46:56,518244;END!
PLE;IND_MUT;d3df0ba7-96e9-451d-9c4a-0e53a67841ea;0967b7f1-032b-48b0-afeb-a66d64a9e459;mut_replace_primitive;2020-02-20 17:46:56,520351;END!
PLE;EVAL;2020-02-20 17:46:56,479604;5.954972505569458;5.939089500000023;(0.5980415055380628, -2);f2814b52-5478-43db-8b30-6e194adbcb76;DecisionTreeClassifier(StandardScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20);2020-02-20 17:47:02,770862;END!
PLE;RMV_IND;Individual dad0fc11-a9c2-4e13-aab5-5419dc393f4a
Pipeline: KNeighborsClassifier(RobustScaler(FastICA(data, FastICA.tol=0.55)), KNeighborsClassifier.n_neighbors=3, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 17, 37, 23, 43378), wallclock_time=1.6781787872314453, process_time=1.673374190000004);2020-02-20 17:47:02,772925;END!
PLE;IND_MUT;4a0fc50e-e371-4b95-819d-be0adf03a23d;fdc8c0fe-40d7-4694-9ae6-67bf13a0337b;mut_insert;2020-02-20 17:47:02,775084;END!
PLE;EVAL;2020-02-20 17:43:50,570181;201.8063771724701;201.30105057200007;(0.7122426307164416, -1);9d05f04e-1c82-4408-871f-5c68a08daf41;ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=9, min_samples_split=12, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:47:19,663958;END!
PLE;RMV_IND;Individual bcee625b-9b9a-400b-97a3-456546cf02a0
Pipeline: GradientBoostingClassifier(FeatureAgglomeration(StandardScaler(data), FeatureAgglomeration.affinity='cosine', FeatureAgglomeration.linkage='complete'), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=9, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 17, 38, 11, 270944), wallclock_time=1.1109881401062012, process_time=1.1036926000000022);2020-02-20 17:47:19,666004;END!
PLE;IND_MUT;9071d857-81ac-4d64-bf66-721a0358abb1;1172e5d6-3596-4a2d-a27c-eab529d2c2e9;mut_replace_primitive;2020-02-20 17:47:19,668259;END!
PLE;EVAL;2020-02-20 17:47:02,687861;16.811378002166748;16.765052534999995;(0.5558507782657318, -3);e6c683ae-e8c5-43d1-b3f3-38d48d30c839;DecisionTreeClassifier(Normalizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='precomputed', FeatureAgglomeration.linkage='complete'), Normalizer.norm='l1'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=9);2020-02-20 17:47:19,980970;END!
PLE;RMV_IND;Individual 42573449-5879-4842-9fcc-7fdbb791461d
Pipeline: GradientBoostingClassifier(PCA(MinMaxScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=5, GradientBoostingClassifier.max_features=0.4, GradientBoostingClassifier.min_samples_leaf=16, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.6500000000000001)
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 17, 36, 47, 845463), wallclock_time=360.2639706134796, process_time=359.33411721299996);2020-02-20 17:47:19,982723;END!
PLE;IND_MUT;c06ddc5d-7fe6-442d-b066-1f3e5a9ed8c0;fdc8c0fe-40d7-4694-9ae6-67bf13a0337b;mut_replace_terminal;2020-02-20 17:47:19,984950;END!
PLE;EVAL;2020-02-20 17:47:19,715863;9.222722291946411;9.198651823000091;(0.6795323638042432, -3);ebd577f1-2c3b-484e-be67-c366eb347e67;LogisticRegression(MinMaxScaler(MaxAbsScaler(data)), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:47:29,254392;END!
PLE;RMV_IND;Individual e6c683ae-e8c5-43d1-b3f3-38d48d30c839
Pipeline: DecisionTreeClassifier(Normalizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='precomputed', FeatureAgglomeration.linkage='complete'), Normalizer.norm='l1'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=9)
Fitness: Fitness(values=(0.5558507782657318, -3), start_time=datetime.datetime(2020, 2, 20, 17, 47, 2, 687861), wallclock_time=16.811378002166748, process_time=16.765052534999995);2020-02-20 17:47:29,255880;END!
PLE;IND_MUT;c4b7e51e-0b7d-49e5-9466-1c2df299506e;29099de2-dbf0-458e-b4e2-f29706ac390a;mut_insert;2020-02-20 17:47:29,258106;END!
PLE;EVAL;2020-02-20 17:47:16,309701;15.23839020729065;15.198789906999991;(0.6721446163937098, -3);ec42c5dc-8d52-4e9e-87b3-a45e222dc6c2;LogisticRegression(PCA(MaxAbsScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:47:31,826816;END!
PLE;RMV_IND;Individual 436691a0-2c32-4134-acef-a227380ddc77
Pipeline: DecisionTreeClassifier(PolynomialFeatures(SelectPercentile(data, SelectPercentile.percentile=47, SelectPercentile.score_func=f_classif), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20)
Fitness: Fitness(values=(0.5971197776266788, -3), start_time=datetime.datetime(2020, 2, 20, 17, 36, 50, 602558), wallclock_time=10.952311277389526, process_time=10.924966593);2020-02-20 17:47:31,828781;END!
PLE;IND_MUT;b7434476-e3be-45c4-8964-835f2045b081;cc15564e-81e4-475d-ba5c-b0c9a8a91581;mut_shrink;2020-02-20 17:47:31,831006;END!
PLE;EVAL;2020-02-20 17:41:35,964504;360.381276845932;359.441580162;(-inf, -2);04cabb7e-9a8b-4777-96a0-c64d051db4ec;ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=20, min_samples_split=2, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:47:36,616494;END!
PLE;EVAL_TO;2020-02-20 17:41:35,964780;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', MinMaxScaler(c...                 ExtraTreesClassifier(bootstrap=False, class_weight=None,                                      criterion='gini', max_depth=None,                                      max_features=0.7000000000000001,                                      max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=20, min_samples_split=2,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:47:36,340666;END!
PLE;RMV_IND;Individual ae9315d8-1683-440f-a85b-29918182fb79
Pipeline: DecisionTreeClassifier(PolynomialFeatures(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=8, min_samples_leaf=8, min_samples_split=14)
Fitness: Fitness(values=(0.6161835496341074, -3), start_time=datetime.datetime(2020, 2, 20, 17, 44, 52, 164356), wallclock_time=20.222077131271362, process_time=20.169768295999972);2020-02-20 17:47:36,618045;END!
PLE;IND_MUT;dca0ba59-53da-489a-b63c-eb3fe9b4936b;b806803e-ea1d-49ba-b29c-a4b0de3acc28;mut_replace_terminal;2020-02-20 17:47:36,620166;END!
PLE;EVAL;2020-02-20 17:47:36,551845;0.9010903835296631;0.8983909589999257;(-inf, -1);69b6a55e-20c9-40fa-bad6-ba4343040ae0;LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:47:37,687355;END!
PLE;EVAL_ERR;2020-02-20 17:47:36,552080;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 LogisticRegression(C=0.01, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;Solver lbfgs supports only dual=False, got dual=True;2020-02-20 17:47:37,452775;END!
PLE;RMV_IND;Individual 72b9cd35-e77e-4f8a-9fcc-7d5a62f27516
Pipeline: GradientBoostingClassifier(PolynomialFeatures(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l2', FeatureAgglomeration.linkage='complete'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=4, GradientBoostingClassifier.min_samples_split=20, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)
Fitness: Fitness(values=(0.6202983470255623, -3), start_time=datetime.datetime(2020, 2, 20, 17, 41, 28, 314894), wallclock_time=304.8053505420685, process_time=304.03963174899997);2020-02-20 17:47:37,688327;END!
PLE;IND_MUT;0acecd8f-b658-4506-9b9d-019382481cd3;533cfef0-8c25-4483-9452-35f721acccc5;mut_shrink;2020-02-20 17:47:37,690473;END!
PLE;EVAL;2020-02-20 17:47:29,189507;9.81659722328186;9.791076400000065;(0.6739383337788443, -3);a2baa5cf-e534-4cfe-92e0-a4802f7ef78e;LogisticRegression(PCA(SelectPercentile(data, SelectPercentile.percentile=27, SelectPercentile.score_func=f_classif), PCA.iterated_power=2, PCA.svd_solver='randomized'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:47:39,339268;END!
PLE;RMV_IND;Individual a95a0ec2-23b7-4f0d-80d7-d015fdbb0d90
Pipeline: LogisticRegression(StandardScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 36, 31, 459860), wallclock_time=1.07843017578125, process_time=1.074620392);2020-02-20 17:47:39,345394;END!
PLE;IND_MUT;11f7a7c9-a569-4e5f-840e-86304afd5c41;dc7342c0-69ef-44ff-9c68-a9e9c9a8ac09;mut_replace_terminal;2020-02-20 17:47:39,347551;END!
PLE;EVAL;2020-02-20 17:47:37,655492;5.632164716720581;5.617071917999965;(0.5336827047447688, -3);12def682-0b0f-42b9-af7a-9f9086ffb807;BernoulliNB(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.024, SelectFwe.score_func=f_classif), alpha=100.0, fit_prior=True);2020-02-20 17:47:43,568949;END!
PLE;RMV_IND;Individual 12def682-0b0f-42b9-af7a-9f9086ffb807
Pipeline: BernoulliNB(SelectFwe(MinMaxScaler(data), SelectFwe.alpha=0.024, SelectFwe.score_func=f_classif), alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(0.5336827047447688, -3), start_time=datetime.datetime(2020, 2, 20, 17, 47, 37, 655492), wallclock_time=5.632164716720581, process_time=5.617071917999965);2020-02-20 17:47:43,570911;END!
PLE;IND_MUT;6460eede-9f76-4ec3-91a2-f5ab90c9727a;1073bee6-102c-480c-9469-f703e3970607;mut_replace_terminal;2020-02-20 17:47:43,573149;END!
PLE;EVAL;2020-02-20 17:47:39,260205;9.097401857376099;9.074089008999977;(0.5951447310089796, -3);848f2d2d-062e-4f09-9f0e-60b96728a004;LogisticRegression(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.25), PCA.iterated_power=2, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:47:48,586929;END!
PLE;RMV_IND;Individual 1073bee6-102c-480c-9469-f703e3970607
Pipeline: MultinomialNB(FastICA(data, FastICA.tol=0.75), alpha=10.0, fit_prior=True)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 38, 19, 859760), wallclock_time=1.6107802391052246, process_time=1.6059711890000017);2020-02-20 17:47:48,588716;END!
PLE;IND_MUT;c785ad56-52e4-4aae-be53-e99875001d8e;6b69a6f8-4e2f-4fd9-be32-ee48702c66df;mut_replace_terminal;2020-02-20 17:47:48,590863;END!
PLE;EVAL;2020-02-20 17:47:48,620812;5.321859359741211;5.308383327999991;(0.6292935950914553, -3);0b225f98-b533-4fd2-8e6b-94c0328f8870;MultinomialNB(Binarizer(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.45), alpha=100.0, fit_prior=True);2020-02-20 17:47:54,239127;END!
PLE;RMV_IND;Individual 848f2d2d-062e-4f09-9f0e-60b96728a004
Pipeline: LogisticRegression(PCA(VarianceThreshold(data, VarianceThreshold.threshold=0.25), PCA.iterated_power=2, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.5951447310089796, -3), start_time=datetime.datetime(2020, 2, 20, 17, 47, 39, 260205), wallclock_time=9.097401857376099, process_time=9.074089008999977);2020-02-20 17:47:54,241163;END!
PLE;IND_CX;d12a8d06-1fa5-4127-ab75-c60cb3c76987;ae2b8de1-34cb-4ee3-83ce-17d3862d1d02;01a2be98-b367-4658-9e5f-68286c2954d1;2020-02-20 17:47:54,243412;END!
PLE;EVAL;2020-02-20 17:47:54,193940;0.8955566883087158;0.8924256999999898;(-inf, -2);dc0cefab-2f1a-4da9-90bd-926c2ad5d96b;KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='ward'), KNeighborsClassifier.n_neighbors=36, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 17:47:55,350054;END!
PLE;EVAL_ERR;2020-02-20 17:47:54,194178;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FeatureAgglomeration(affinity='l1', compute_full_tree='auto',                                      connectivity=None,                                      distance_threshold=None, linkage='ward',                                      memory=None, n_clusters=2,                                      pooling_func=<function mean at 0x2b53e3cd1840>)),                ('0',                 KNeighborsClassifier(algorithm='auto', leaf_size=30,                                      metric='minkowski', metric_params=None,                                      n_jobs=None, n_neighbors=36, p=1,                                      weights='uniform'))],         verbose=False);<class 'ValueError'>;l1 was provided as affinity. Ward can only work with euclidean distances.;2020-02-20 17:47:55,089356;END!
PLE;RMV_IND;Individual 65f4729e-0f87-48d2-8355-4d1476386d71
Pipeline: LogisticRegression(MinMaxScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 38, 49, 447038), wallclock_time=0.9314718246459961, process_time=0.9286617879999994);2020-02-20 17:47:55,351084;END!
PLE;IND_MUT;214e746f-2563-453b-b6d3-7021fc30e304;8505e462-c935-4db2-ba4c-d1342d2ce695;mut_shrink;2020-02-20 17:47:55,353200;END!
PLE;EVAL;2020-02-20 17:47:31,780521;23.940343618392944;23.876613907000092;(0.697665134748136, -2);9cff1e45-c0ed-437a-9f11-906b86f0ac17;KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance');2020-02-20 17:47:56,352670;END!
PLE;RMV_IND;Individual 0b225f98-b533-4fd2-8e6b-94c0328f8870
Pipeline: MultinomialNB(Binarizer(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), Binarizer.threshold=0.45), alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(0.6292935950914553, -3), start_time=datetime.datetime(2020, 2, 20, 17, 47, 48, 620812), wallclock_time=5.321859359741211, process_time=5.308383327999991);2020-02-20 17:47:56,354859;END!
PLE;IND_MUT;f79ca184-79bc-40c8-a6c2-3bc23e19f525;b2a2ad69-e6a1-4225-ae45-d484e75434da;mut_replace_terminal;2020-02-20 17:47:56,357061;END!
PLE;EVAL;2020-02-20 17:47:43,514839;19.557384967803955;19.506757084000014;(0.6130573870994407, -3);eb68fcba-6848-4d27-9ae3-dd89744da983;DecisionTreeClassifier(PolynomialFeatures(FeatureAgglomeration(data, FeatureAgglomeration.affinity='precomputed', FeatureAgglomeration.linkage='complete'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=9);2020-02-20 17:48:03,370119;END!
PLE;RMV_IND;Individual eb68fcba-6848-4d27-9ae3-dd89744da983
Pipeline: DecisionTreeClassifier(PolynomialFeatures(FeatureAgglomeration(data, FeatureAgglomeration.affinity='precomputed', FeatureAgglomeration.linkage='complete'), PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=9)
Fitness: Fitness(values=(0.6130573870994407, -3), start_time=datetime.datetime(2020, 2, 20, 17, 47, 43, 514839), wallclock_time=19.557384967803955, process_time=19.506757084000014);2020-02-20 17:48:03,371627;END!
PLE;IND_MUT;df0f4c36-2913-43ba-8825-ebb92949cffe;0967b7f1-032b-48b0-afeb-a66d64a9e459;mut_shrink;2020-02-20 17:48:03,373791;END!
PLE;EVAL;2020-02-20 17:47:55,326323;8.374255418777466;8.351002871999981;(0.5798548644504267, -3);76ffaa7c-ea52-4ace-9408-aa7f76657328;LogisticRegression(PCA(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='additive_chi2', Nystroem.n_components=3), PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:48:04,099436;END!
PLE;RMV_IND;Individual 567cfd1e-a643-4e20-bfeb-59e138beb14f
Pipeline: DecisionTreeClassifier(FastICA(data, FastICA.tol=0.2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=3, min_samples_leaf=9, min_samples_split=7)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 43, 48, 818936), wallclock_time=1.5164141654968262, process_time=1.5122339100000204);2020-02-20 17:48:04,101535;END!
PLE;IND_MUT;8bc89862-cb8a-46de-938b-25dbf1b60dc5;b2a2ad69-e6a1-4225-ae45-d484e75434da;mut_replace_primitive;2020-02-20 17:48:04,103757;END!
PLE;EVAL;2020-02-20 17:48:03,308034;5.1512627601623535;5.138219872000036;(0.5245887465974972, -1);e71735b7-2b84-46c8-88cb-a3bd6759fddd;BernoulliNB(data, alpha=1.0, fit_prior=False);2020-02-20 17:48:08,689089;END!
PLE;RMV_IND;Individual 76ffaa7c-ea52-4ace-9408-aa7f76657328
Pipeline: LogisticRegression(PCA(Nystroem(data, Nystroem.gamma=0.65, Nystroem.kernel='additive_chi2', Nystroem.n_components=3), PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.5798548644504267, -3), start_time=datetime.datetime(2020, 2, 20, 17, 47, 55, 326323), wallclock_time=8.374255418777466, process_time=8.351002871999981);2020-02-20 17:48:08,691091;END!
PLE;IND_CX;a64da21e-e58b-4f4f-86e1-cb3e9bc61e77;ad9fcc16-3a17-405e-a01d-9977b37019ed;9d05f04e-1c82-4408-871f-5c68a08daf41;2020-02-20 17:48:08,693350;END!
PLE;EVAL;2020-02-20 17:48:08,704468;40.031105756759644;39.92819652700007;(0.6579388300715137, -1);5ff40483-c908-4fb1-9c8d-4b526e09c5cb;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 17:48:51,916983;END!
PLE;RMV_IND;Individual 0aff2149-78c0-4435-a8ef-f29017187d2a
Pipeline: GradientBoostingClassifier(VarianceThreshold(PCA(data, PCA.iterated_power=1, PCA.svd_solver='randomized'), VarianceThreshold.threshold=0.4), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.35000000000000003, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)
Fitness: Fitness(values=(0.6489311585858164, -3), start_time=datetime.datetime(2020, 2, 20, 17, 44, 8, 785883), wallclock_time=158.89238667488098, process_time=158.48231857499997);2020-02-20 17:48:51,919161;END!
PLE;IND_MUT;e280ff7a-f1a1-43c9-9ed5-245165094850;f2814b52-5478-43db-8b30-6e194adbcb76;mut_replace_primitive;2020-02-20 17:48:51,921365;END!
PLE;EVAL;2020-02-20 17:48:50,425771;1.5289428234100342;1.5244073679999701;(-inf, -2);e19f936d-eca6-4432-9e19-0eed0bbb9958;BernoulliNB(FastICA(data, FastICA.tol=0.7000000000000001), alpha=0.1, fit_prior=True);2020-02-20 17:48:52,246665;END!
PLE;EVAL_ERR;2020-02-20 17:48:50,425964;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FastICA(algorithm='parallel', fun='logcosh', fun_args=None,                         max_iter=200, n_components=None, random_state=None,                         tol=0.7000000000000001, w_init=None, whiten=True)),                ('0',                 BernoulliNB(alpha=0.1, binarize=0.0, class_prior=None,                             fit_prior=True))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 17:48:51,954544;END!
PLE;RMV_IND;Individual 6b69a6f8-4e2f-4fd9-be32-ee48702c66df
Pipeline: ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=8, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 38, 2, 686130), wallclock_time=360.44595646858215, process_time=359.514464705);2020-02-20 17:48:52,247951;END!
PLE;IND_CX;7c2d221b-7152-4cae-af50-550db3ab98d3;e19f936d-eca6-4432-9e19-0eed0bbb9958;ae2b8de1-34cb-4ee3-83ce-17d3862d1d02;2020-02-20 17:48:52,250279;END!
PLE;EVAL;2020-02-20 17:48:52,161517;4.855279207229614;4.842623215999993;(0.4999994540349182, -2);6a52dacd-9989-4da3-9c6d-8a265ac72177;MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=1, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=True);2020-02-20 17:48:57,335046;END!
PLE;RMV_IND;Individual 79ebee31-576a-438c-ae74-5b4558605fcc
Pipeline: GradientBoostingClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=8, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.3)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 38, 50, 664861), wallclock_time=361.25917387008667, process_time=360.32709861);2020-02-20 17:48:57,336854;END!
PLE;IND_MUT;4cd2fd70-03fb-4837-81d8-0883307642c8;69b6a55e-20c9-40fa-bad6-ba4343040ae0;mut_insert;2020-02-20 17:48:57,339015;END!
PLE;EVAL;2020-02-20 17:48:57,256614;11.280869722366333;11.251565168999946;(0.6795253707288437, -2);c11a66a1-9c08-40dd-bb91-c3c82792efe9;LogisticRegression(MinMaxScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:49:08,844240;END!
PLE;RMV_IND;Individual c63abe79-2a70-409d-ba3f-47d15a5ad0e9
Pipeline: LogisticRegression(FastICA(data, FastICA.tol=0.0), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 45, 11, 419435), wallclock_time=1.5250821113586426, process_time=1.5204211010000108);2020-02-20 17:49:08,845864;END!
PLE;IND_MUT;f1acd41f-7d84-45f6-a40c-cfeae9bfb610;cc15564e-81e4-475d-ba5c-b0c9a8a91581;mut_replace_terminal;2020-02-20 17:49:08,848020;END!
PLE;EVAL;2020-02-20 17:49:08,755841;2.564789056777954;2.5452210590000277;(-inf, -3);e687b70e-6c50-431c-987f-7a20e6549fef;LogisticRegression(PCA(MaxAbsScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:49:11,562087;END!
PLE;EVAL_ERR;2020-02-20 17:49:08,756096;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2', MaxAbsScaler(c...                 PCA(copy=True, iterated_power=10, n_components=None,                     random_state=None, svd_solver='randomized', tol=0.0,                     whiten=False)),                ('0',                 LogisticRegression(C=15.0, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;Solver lbfgs supports only dual=False, got dual=True;2020-02-20 17:49:11,320462;END!
PLE;RMV_IND;Individual e687b70e-6c50-431c-987f-7a20e6549fef
Pipeline: LogisticRegression(PCA(MaxAbsScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 17, 49, 8, 755841), wallclock_time=2.564789056777954, process_time=2.5452210590000277);2020-02-20 17:49:11,563151;END!
PLE;IND_MUT;7fd81b21-89d4-4446-93ab-bac0cd9beffc;5ff40483-c908-4fb1-9c8d-4b526e09c5cb;mut_replace_terminal;2020-02-20 17:49:11,566366;END!
PLE;EVAL;2020-02-20 17:49:11,514807;6.022466659545898;6.005919916999915;(0.6523725451542948, -2);a38f5c67-86cc-4868-a9b0-30a6b8e19450;BernoulliNB(RobustScaler(data), alpha=0.1, fit_prior=True);2020-02-20 17:49:17,835944;END!
PLE;RMV_IND;Individual 1172e5d6-3596-4a2d-a27c-eab529d2c2e9
Pipeline: MultinomialNB(RBFSampler(data, RBFSampler.gamma=0.15000000000000002), alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 46, 54, 819639), wallclock_time=1.42832350730896, process_time=1.42440951399999);2020-02-20 17:49:17,838076;END!
PLE;IND_MUT;ba54b229-cc08-4795-8168-d6f70b7ce2ec;b806803e-ea1d-49ba-b29c-a4b0de3acc28;mut_replace_primitive;2020-02-20 17:49:17,840292;END!
PLE;EVAL;2020-02-20 17:49:17,768026;6.51481819152832;6.498098037999966;(0.5582232503403792, -3);daca1289-14e8-409f-8578-07322a8552bf;DecisionTreeClassifier(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=18);2020-02-20 17:49:24,677830;END!
PLE;RMV_IND;Individual 04cabb7e-9a8b-4777-96a0-c64d051db4ec
Pipeline: ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=20, min_samples_split=2, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 41, 35, 964504), wallclock_time=360.381276845932, process_time=359.441580162);2020-02-20 17:49:24,679833;END!
PLE;IND_MUT;6bc50e21-2862-45e7-97c1-9d42e5a7b362;dc7342c0-69ef-44ff-9c68-a9e9c9a8ac09;mut_replace_primitive;2020-02-20 17:49:24,682222;END!
PLE;EVAL;2020-02-20 17:49:24,538422;1.547703504562378;1.5430403950000482;(-inf, -2);6037868f-dd97-41a1-b35c-bd6b6c04bef7;DecisionTreeClassifier(FastICA(data, FastICA.tol=0.75), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11);2020-02-20 17:49:26,320989;END!
PLE;EVAL_ERR;2020-02-20 17:49:24,538627;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FastICA(algori...                         max_iter=200, n_components=None, random_state=None,                         tol=0.75, w_init=None, whiten=True)),                ('0',                 DecisionTreeClassifier(class_weight=None, criterion='entropy',                                        max_depth=8, max_features=None,                                        max_leaf_nodes=None,                                        min_impurity_decrease=0.0,                                        min_impurity_split=None,                                        min_samples_leaf=2,                                        min_samples_split=11,                                        min_weight_fraction_leaf=0.0,                                        presort=False, random_state=None,                                        splitter='best'))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 17:49:26,085943;END!
PLE;RMV_IND;Individual dc0cefab-2f1a-4da9-90bd-926c2ad5d96b
Pipeline: KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='ward'), KNeighborsClassifier.n_neighbors=36, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 47, 54, 193940), wallclock_time=0.8955566883087158, process_time=0.8924256999999898);2020-02-20 17:49:26,322143;END!
PLE;IND_MUT;70639eac-5c1f-49a9-b30a-04e00d4c52ce;b9737eea-3da4-4e6c-8716-2eb4785f37e3;mut_insert;2020-02-20 17:49:26,324261;END!
PLE;EVAL;2020-02-20 17:43:02,178268;461.5242998600006;460.721317851;(-inf, -2);e538f48d-70c5-4efc-9db1-36f435c72c19;KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=8), KNeighborsClassifier.n_neighbors=34, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance');2020-02-20 17:50:43,957147;END!
PLE;EVAL_TO;2020-02-20 17:43:02,178524;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 Nystroem(coef0=None, degree=None, gamma=0.5, kernel='rbf',                          kernel_params=None, n_components=8,                          random_state=None)),                ('0',                 KNeighborsClassifier(algorithm='auto', leaf_size=30,                                      metric='minkowski', metric_params=None,                                      n_jobs=None, n_neighbors=34, p=2,                                      weights='distance'))],         verbose=False);2020-02-20 17:50:43,697870;END!
PLE;RMV_IND;Individual e19f936d-eca6-4432-9e19-0eed0bbb9958
Pipeline: BernoulliNB(FastICA(data, FastICA.tol=0.7000000000000001), alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 48, 50, 425771), wallclock_time=1.5289428234100342, process_time=1.5244073679999701);2020-02-20 17:50:43,958633;END!
PLE;IND_MUT;11f11841-ebd8-42bc-bb76-23d9abc93634;6a52dacd-9989-4da3-9c6d-8a265ac72177;mut_replace_terminal;2020-02-20 17:50:43,960766;END!
PLE;EVAL;2020-02-20 17:50:43,925994;6.506276369094849;6.489569839999945;(0.6238281246742606, -2);69474dd5-6033-43e2-82a7-5c1f5360a396;DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11);2020-02-20 17:50:50,767349;END!
PLE;RMV_IND;Individual daca1289-14e8-409f-8578-07322a8552bf
Pipeline: DecisionTreeClassifier(MaxAbsScaler(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=18)
Fitness: Fitness(values=(0.5582232503403792, -3), start_time=datetime.datetime(2020, 2, 20, 17, 49, 17, 768026), wallclock_time=6.51481819152832, process_time=6.498098037999966);2020-02-20 17:50:50,769231;END!
PLE;IND_MUT;55a6f2bd-b943-474b-8c77-9a0d03882c1f;29099de2-dbf0-458e-b4e2-f29706ac390a;mut_insert;2020-02-20 17:50:50,771431;END!
PLE;EVAL;2020-02-20 17:49:26,281193;91.73429799079895;91.49690133999991;(0.7075157991932209, -2);8a612021-4080-42f7-a5dc-02cd95a3e751;ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:51:09,596471;END!
PLE;RMV_IND;Individual 6037868f-dd97-41a1-b35c-bd6b6c04bef7
Pipeline: DecisionTreeClassifier(FastICA(data, FastICA.tol=0.75), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 49, 24, 538422), wallclock_time=1.547703504562378, process_time=1.5430403950000482);2020-02-20 17:51:09,598105;END!
PLE;IND_CX;83e06266-92b7-448c-b624-022f6af11ea7;1212593c-bb3a-4585-8cab-b1cc32da3619;67e46f00-5021-41ac-a177-27b63f111f07;2020-02-20 17:51:09,600321;END!
PLE;EVAL;2020-02-20 17:51:04,001277;5.494826793670654;5.480535338999971;(0.5572828221371836, -3);f1b61a91-5288-48a5-b878-1adc713b21ca;DecisionTreeClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5), SelectPercentile.percentile=25, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=18);2020-02-20 17:51:09,937330;END!
PLE;RMV_IND;Individual f1b61a91-5288-48a5-b878-1adc713b21ca
Pipeline: DecisionTreeClassifier(SelectPercentile(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5), SelectPercentile.percentile=25, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=18)
Fitness: Fitness(values=(0.5572828221371836, -3), start_time=datetime.datetime(2020, 2, 20, 17, 51, 4, 1277), wallclock_time=5.494826793670654, process_time=5.480535338999971);2020-02-20 17:51:09,939119;END!
PLE;IND_CX;e241a8af-5567-4a44-9faf-b6d25b3dc3f0;62e0c681-7662-4a51-8301-cceeda711816;ace68339-e971-487b-8793-52b2489a4843;2020-02-20 17:51:09,941301;END!
PLE;EVAL;2020-02-20 17:50:50,753789;20.05756402015686;20.005143564000036;(0.5007825755035048, -3);b090fabd-9a61-4f4e-817f-7508a3a430ce;DecisionTreeClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=1.0), FeatureAgglomeration.affinity='precomputed', FeatureAgglomeration.linkage='complete'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=9);2020-02-20 17:51:11,080772;END!
PLE;RMV_IND;Individual e538f48d-70c5-4efc-9db1-36f435c72c19
Pipeline: KNeighborsClassifier(Nystroem(data, Nystroem.gamma=0.5, Nystroem.kernel='rbf', Nystroem.n_components=8), KNeighborsClassifier.n_neighbors=34, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 43, 2, 178268), wallclock_time=461.5242998600006, process_time=460.721317851);2020-02-20 17:51:11,082706;END!
PLE;IND_MUT;929b34c4-358f-488a-be72-c2703b8f2536;6a52dacd-9989-4da3-9c6d-8a265ac72177;mut_replace_primitive;2020-02-20 17:51:11,084945;END!
PLE;EVAL;2020-02-20 17:45:12,652017;360.7030608654022;359.769876176;(-inf, -1);a4773d16-11b0-4b1a-8065-26f97988ff3b;GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4);2020-02-20 17:51:13,613522;END!
PLE;EVAL_TO;2020-02-20 17:45:12,652221;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 GradientBoosti...                                            learning_rate=0.01, loss='deviance',                                            max_depth=7,                                            max_features=0.7000000000000001,                                            max_leaf_nodes=None,                                            min_impurity_decrease=0.0,                                            min_impurity_split=None,                                            min_samples_leaf=19,                                            min_samples_split=10,                                            min_weight_fraction_leaf=0.0,                                            n_estimators=100,                                            n_iter_no_change=None,                                            presort='auto', random_state=None,                                            subsample=0.4, tol=0.0001,                                            validation_fraction=0.1, verbose=0,                                            warm_start=False))],         verbose=False);2020-02-20 17:51:13,349977;END!
PLE;RMV_IND;Individual 6a52dacd-9989-4da3-9c6d-8a265ac72177
Pipeline: MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=1, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(0.4999994540349182, -2), start_time=datetime.datetime(2020, 2, 20, 17, 48, 52, 161517), wallclock_time=4.855279207229614, process_time=4.842623215999993);2020-02-20 17:51:13,614529;END!
PLE;IND_MUT;acb0f565-f686-4ca1-ae2a-4c059f6dabb7;e64df28f-382e-496e-be67-72478a3b3527;mut_replace_primitive;2020-02-20 17:51:13,616732;END!
PLE;EVAL;2020-02-20 17:51:11,144624;5.09210467338562;5.079123740999989;(0.5551450415240001, -1);605ce055-4108-4d6a-8b6e-050e0efeca62;MultinomialNB(data, alpha=0.01, fit_prior=False);2020-02-20 17:51:16,510642;END!
PLE;RMV_IND;Individual b090fabd-9a61-4f4e-817f-7508a3a430ce
Pipeline: DecisionTreeClassifier(FeatureAgglomeration(RBFSampler(data, RBFSampler.gamma=1.0), FeatureAgglomeration.affinity='precomputed', FeatureAgglomeration.linkage='complete'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=9)
Fitness: Fitness(values=(0.5007825755035048, -3), start_time=datetime.datetime(2020, 2, 20, 17, 50, 50, 753789), wallclock_time=20.05756402015686, process_time=20.005143564000036);2020-02-20 17:51:16,512586;END!
PLE;IND_MUT;3aa7ba5e-432b-4858-99fb-b98e1618e63a;8a612021-4080-42f7-a5dc-02cd95a3e751;mut_replace_terminal;2020-02-20 17:51:16,514852;END!
PLE;EVAL;2020-02-20 17:51:13,612860;4.7218403816223145;4.709794391999935;(0.5551450190374263, -1);72e117a7-8f39-42f6-810a-7653e0cb7e9a;MultinomialNB(data, alpha=10.0, fit_prior=False);2020-02-20 17:51:18,619753;END!
PLE;RMV_IND;Individual 1212593c-bb3a-4585-8cab-b1cc32da3619
Pipeline: LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -1), start_time=datetime.datetime(2020, 2, 20, 17, 37, 3, 494762), wallclock_time=0.958892822265625, process_time=0.955062096999999);2020-02-20 17:51:18,621667;END!
PLE;IND_MUT;45ef8f28-9852-4c0d-96dd-cc775d5160bd;b9737eea-3da4-4e6c-8716-2eb4785f37e3;mut_shrink;2020-02-20 17:51:18,623811;END!
PLE;EVAL;2020-02-20 17:51:16,577770;5.128674507141113;5.115596224000001;(0.5551549160502819, -1);0bd5b044-9209-413b-adb3-f988747f099b;MultinomialNB(data, alpha=0.01, fit_prior=True);2020-02-20 17:51:22,051118;END!
PLE;RMV_IND;Individual 14e1cff1-d2e1-44ff-87ec-eb53681b816f
Pipeline: GaussianNB(RBFSampler(data, RBFSampler.gamma=0.6000000000000001))
Fitness: Fitness(values=(0.5046012922192042, -2), start_time=datetime.datetime(2020, 2, 20, 17, 36, 32, 492608), wallclock_time=11.534900426864624, process_time=11.502302371);2020-02-20 17:51:22,052971;END!
PLE;IND_MUT;099705c9-c859-42a2-b7f0-7e50f875ca32;9cff1e45-c0ed-437a-9f11-906b86f0ac17;mut_insert;2020-02-20 17:51:22,055103;END!
PLE;EVAL;2020-02-20 17:51:22,020255;1.0673449039459229;1.0642737239999178;(-inf, -2);2c9ce2e9-b688-4309-a9f7-0cd3aefc39ee;MultinomialNB(StandardScaler(data), alpha=0.1, fit_prior=True);2020-02-20 17:51:23,341948;END!
PLE;EVAL_ERR;2020-02-20 17:51:22,020476;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', StandardScaler(copy=True, with_mean=True, with_std=True)),                ('0',                 MultinomialNB(alpha=0.1, class_prior=None, fit_prior=True))],         verbose=False);<class 'ValueError'>;Input X must be non-negative;2020-02-20 17:51:23,087452;END!
PLE;RMV_IND;Individual 8f1af80d-d90c-430d-8256-8ea19885e1e3
Pipeline: GaussianNB(RobustScaler(StandardScaler(data)))
Fitness: Fitness(values=(0.6595050245998515, -3), start_time=datetime.datetime(2020, 2, 20, 17, 43, 42, 238821), wallclock_time=6.315054416656494, process_time=6.299072507000005);2020-02-20 17:51:23,342901;END!
PLE;IND_MUT;07aa7447-c48e-4f78-beea-9730c0656913;533cfef0-8c25-4483-9452-35f721acccc5;mut_replace_terminal;2020-02-20 17:51:23,344979;END!
PLE;EVAL;2020-02-20 17:51:23,367239;0.8759438991546631;0.8728397830000176;(-inf, -1);91239a5b-43d1-4d61-83d2-6ca99394cd42;LogisticRegression(data, LogisticRegression.C=0.1, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:51:24,550099;END!
PLE;EVAL_ERR;2020-02-20 17:51:23,367459;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 LogisticRegression(C=0.1, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;Solver lbfgs supports only dual=False, got dual=True;2020-02-20 17:51:24,243055;END!
PLE;RMV_IND;Individual ec42c5dc-8d52-4e9e-87b3-a45e222dc6c2
Pipeline: LogisticRegression(PCA(MaxAbsScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.6721446163937098, -3), start_time=datetime.datetime(2020, 2, 20, 17, 47, 16, 309701), wallclock_time=15.23839020729065, process_time=15.198789906999991);2020-02-20 17:51:24,551166;END!
PLE;IND_MUT;977d4844-aa6e-4025-88e5-6ecab1936951;69b6a55e-20c9-40fa-bad6-ba4343040ae0;mut_replace_terminal;2020-02-20 17:51:24,553226;END!
PLE;EVAL;2020-02-20 17:51:18,574875;10.127511978149414;10.099730762000036;(0.5011859017792983, -3);e81dff32-544e-46c9-a526-d7aa26b4b4e3;DecisionTreeClassifier(Nystroem(RBFSampler(data, RBFSampler.gamma=0.75), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=18);2020-02-20 17:51:29,134240;END!
PLE;RMV_IND;Individual e81dff32-544e-46c9-a526-d7aa26b4b4e3
Pipeline: DecisionTreeClassifier(Nystroem(RBFSampler(data, RBFSampler.gamma=0.75), Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=18)
Fitness: Fitness(values=(0.5011859017792983, -3), start_time=datetime.datetime(2020, 2, 20, 17, 51, 18, 574875), wallclock_time=10.127511978149414, process_time=10.099730762000036);2020-02-20 17:51:29,136373;END!
PLE;IND_MUT;0b724031-e30d-4666-b48d-db820aed1366;b2a2ad69-e6a1-4225-ae45-d484e75434da;mut_replace_primitive;2020-02-20 17:51:29,138573;END!
PLE;EVAL;2020-02-20 17:51:29,012646;9.832300186157227;9.806808262999994;(0.5213193272668513, -2);a294b9f5-410b-49b4-a840-bc3ddd5ac928;LogisticRegression(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='chi2', Nystroem.n_components=7), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:51:39,293199;END!
PLE;RMV_IND;Individual 2c9ce2e9-b688-4309-a9f7-0cd3aefc39ee
Pipeline: MultinomialNB(StandardScaler(data), alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 51, 22, 20255), wallclock_time=1.0673449039459229, process_time=1.0642737239999178);2020-02-20 17:51:39,294785;END!
PLE;IND_MUT;28c13d29-e266-4fd4-a690-c4960c1e5fc6;a4773d16-11b0-4b1a-8065-26f97988ff3b;mut_replace_primitive;2020-02-20 17:51:39,296924;END!
PLE;EVAL;2020-02-20 17:51:39,171768;1.4116108417510986;1.4072843469999725;(-inf, -3);dbcfd1e8-601c-453c-9274-bbfbafc0ef3b;LogisticRegression(FastICA(Binarizer(data, Binarizer.threshold=0.5), FastICA.tol=0.0), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:51:40,852304;END!
PLE;EVAL_ERR;2020-02-20 17:51:39,172003;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2', Binarizer(copy...                 FastICA(algorithm='parallel', fun='logcosh', fun_args=None,                         max_iter=200, n_components=None, random_state=None,                         tol=0.0, w_init=None, whiten=True)),                ('0',                 LogisticRegression(C=15.0, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 17:51:40,583204;END!
PLE;RMV_IND;Individual dbcfd1e8-601c-453c-9274-bbfbafc0ef3b
Pipeline: LogisticRegression(FastICA(Binarizer(data, Binarizer.threshold=0.5), FastICA.tol=0.0), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 17, 51, 39, 171768), wallclock_time=1.4116108417510986, process_time=1.4072843469999725);2020-02-20 17:51:40,853386;END!
PLE;IND_MUT;8d6a812a-705a-4563-ad80-c33cb0135c90;29099de2-dbf0-458e-b4e2-f29706ac390a;mut_replace_primitive;2020-02-20 17:51:40,855634;END!
PLE;EVAL;2020-02-20 17:45:29,066697;398.1597626209259;397.13329730400005;(-inf, -2);c187f715-be44-4e1a-8904-74e9ae089121;RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100);2020-02-20 17:52:07,410797;END!
PLE;EVAL_TO;2020-02-20 17:45:29,066950;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 RBFSampler(gam...                 RandomForestClassifier(bootstrap=True, class_weight=None,                                        criterion='entropy', max_depth=None,                                        max_features=0.45, max_leaf_nodes=None,                                        min_impurity_decrease=0.0,                                        min_impurity_split=None,                                        min_samples_leaf=11,                                        min_samples_split=8,                                        min_weight_fraction_leaf=0.0,                                        n_estimators=100, n_jobs=None,                                        oob_score=False, random_state=None,                                        verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:52:07,221196;END!
PLE;RMV_IND;Individual c187f715-be44-4e1a-8904-74e9ae089121
Pipeline: RandomForestClassifier(RBFSampler(data, RBFSampler.gamma=0.6000000000000001), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=11, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 45, 29, 66697), wallclock_time=398.1597626209259, process_time=397.13329730400005);2020-02-20 17:52:07,412384;END!
PLE;IND_MUT;b320ad7e-8271-409b-abc1-575b7639d112;f2814b52-5478-43db-8b30-6e194adbcb76;mut_replace_primitive;2020-02-20 17:52:07,414695;END!
PLE;EVAL;2020-02-20 17:46:33,511001;360.67094349861145;359.760007706;(-inf, -1);bbf8151f-e3a6-46fe-8650-26b2438579b0;RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100);2020-02-20 17:52:34,467049;END!
PLE;EVAL_TO;2020-02-20 17:46:33,511275;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 RandomForestClassifier(bootstrap=False, class_weight=None,                                        criterion='entropy', max_depth=None,                                        max_features=0.8, max_leaf_nodes=None,                                        min_impurity_decrease=0.0,                                        min_impurity_split=None,                                        min_samples_leaf=14,                                        min_samples_split=19,                                        min_weight_fraction_leaf=0.0,                                        n_estimators=100, n_jobs=None,                                        oob_score=False, random_state=None,                                        verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:52:34,177376;END!
PLE;RMV_IND;Individual 21b07a5d-4423-479f-a70a-c65520c43c97
Pipeline: LogisticRegression(PCA(SelectPercentile(data, SelectPercentile.percentile=27, SelectPercentile.score_func=f_classif), PCA.iterated_power=2, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.673911567300447, -3), start_time=datetime.datetime(2020, 2, 20, 17, 37, 10, 912636), wallclock_time=10.218874216079712, process_time=10.193582401);2020-02-20 17:52:34,468172;END!
PLE;IND_MUT;d1c9ccf2-b9d6-48d4-905c-7c823f82d915;cc15564e-81e4-475d-ba5c-b0c9a8a91581;mut_replace_primitive;2020-02-20 17:52:34,470331;END!
PLE;EVAL;2020-02-20 17:52:34,453761;8.63874363899231;8.617291402999967;(0.5655802071893128, -1);829232c5-938f-4039-81b8-6e36a6d0333f;LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:52:43,441096;END!
PLE;RMV_IND;Individual b9737eea-3da4-4e6c-8716-2eb4785f37e3
Pipeline: GaussianNB(RBFSampler(data, RBFSampler.gamma=0.25))
Fitness: Fitness(values=(0.5070751231699522, -2), start_time=datetime.datetime(2020, 2, 20, 17, 45, 18, 277198), wallclock_time=10.60989785194397, process_time=10.582120915000019);2020-02-20 17:52:43,442718;END!
PLE;IND_MUT;94f2eaab-5571-422c-9df2-8ed6ead5ceba;58ba6011-3c56-4f75-818f-032c74d6b193;mut_replace_primitive;2020-02-20 17:52:43,444878;END!
PLE;EVAL;2020-02-20 17:52:43,373059;5.992561101913452;5.977882323000017;(0.6595050247201006, -2);d3df0ba7-96e9-451d-9c4a-0e53a67841ea;GaussianNB(RobustScaler(data));2020-02-20 17:52:49,697789;END!
PLE;RMV_IND;Individual a294b9f5-410b-49b4-a840-bc3ddd5ac928
Pipeline: LogisticRegression(Nystroem(data, Nystroem.gamma=0.2, Nystroem.kernel='chi2', Nystroem.n_components=7), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.5213193272668513, -2), start_time=datetime.datetime(2020, 2, 20, 17, 51, 29, 12646), wallclock_time=9.832300186157227, process_time=9.806808262999994);2020-02-20 17:52:49,699310;END!
PLE;IND_MUT;646653b3-3941-46e2-83bb-3b3899e74404;69474dd5-6033-43e2-82a7-5c1f5360a396;mut_shrink;2020-02-20 17:52:49,701493;END!
PLE;EVAL;2020-02-20 17:52:49,671055;0.9136438369750977;0.9109400759999744;(-inf, -2);4a0fc50e-e371-4b95-819d-be0adf03a23d;KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='ward'), KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance');2020-02-20 17:52:50,846578;END!
PLE;EVAL_ERR;2020-02-20 17:52:49,671308;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FeatureAgglomeration(affinity='l1', compute_full_tree='auto',                                      connectivity=None,                                      distance_threshold=None, linkage='ward',                                      memory=None, n_clusters=2,                                      pooling_func=<function mean at 0x2b53e3cd1840>)),                ('0',                 KNeighborsClassifier(algorithm='auto', leaf_size=30,                                      metric='minkowski', metric_params=None,                                      n_jobs=None, n_neighbors=29, p=2,                                      weights='distance'))],         verbose=False);<class 'ValueError'>;l1 was provided as affinity. Ward can only work with euclidean distances.;2020-02-20 17:52:50,584537;END!
PLE;RMV_IND;Individual a2baa5cf-e534-4cfe-92e0-a4802f7ef78e
Pipeline: LogisticRegression(PCA(SelectPercentile(data, SelectPercentile.percentile=27, SelectPercentile.score_func=f_classif), PCA.iterated_power=2, PCA.svd_solver='randomized'), LogisticRegression.C=5.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.6739383337788443, -3), start_time=datetime.datetime(2020, 2, 20, 17, 47, 29, 189507), wallclock_time=9.81659722328186, process_time=9.791076400000065);2020-02-20 17:52:50,847532;END!
PLE;IND_MUT;9081f2a4-7a7c-47f8-8367-45380bdccae1;f2814b52-5478-43db-8b30-6e194adbcb76;mut_replace_primitive;2020-02-20 17:52:50,849559;END!
PLE;EVAL;2020-02-20 17:52:50,848602;0.9849417209625244;0.9801439139999957;(-inf, -2);9071d857-81ac-4d64-bf66-721a0358abb1;MultinomialNB(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='linear', Nystroem.n_components=6), alpha=100.0, fit_prior=True);2020-02-20 17:52:52,099747;END!
PLE;EVAL_ERR;2020-02-20 17:52:50,848815;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 Nystroem(coef0=None, degree=None, gamma=0.1, kernel='linear',                          kernel_params=None, n_components=6,                          random_state=None)),                ('0',                 MultinomialNB(alpha=100.0, class_prior=None, fit_prior=True))],         verbose=False);<class 'ValueError'>;Input X must be non-negative;2020-02-20 17:52:51,833376;END!
PLE;RMV_IND;Individual b5bc3c0a-7a74-4839-aa6f-4435804fcc4a
Pipeline: ExtraTreesClassifier(Normalizer(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.15000000000000002, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(0.6746871548820836, -3), start_time=datetime.datetime(2020, 2, 20, 17, 36, 37, 431588), wallclock_time=84.50464177131653, process_time=84.28643507400001);2020-02-20 17:52:52,100723;END!
PLE;IND_MUT;084c86b5-9d98-49e9-9e94-ea3c735c8a29;fb336467-2f16-4b36-9495-c3484ebd335f;mut_replace_terminal;2020-02-20 17:52:52,102752;END!
PLE;EVAL;2020-02-20 17:52:52,100417;27.209068059921265;27.140293413999984;(0.6687450377859311, -1);c06ddc5d-7fe6-442d-b066-1f3e5a9ed8c0;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform');2020-02-20 17:53:22,505134;END!
PLE;RMV_IND;Individual ebd577f1-2c3b-484e-be67-c366eb347e67
Pipeline: LogisticRegression(MinMaxScaler(MaxAbsScaler(data)), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.6795323638042432, -3), start_time=datetime.datetime(2020, 2, 20, 17, 47, 19, 715863), wallclock_time=9.222722291946411, process_time=9.198651823000091);2020-02-20 17:53:22,507223;END!
PLE;IND_MUT;16b3e094-2bc3-4e3c-8a04-7fe3716f4e67;c06ddc5d-7fe6-442d-b066-1f3e5a9ed8c0;mut_replace_primitive;2020-02-20 17:53:22,509332;END!
PLE;EVAL;2020-02-20 17:47:56,102082;360.535769701004;359.59330937699997;(-inf, -3);8a4321ca-b65f-4531-84fb-3d9c4914d605;ExtraTreesClassifier(Normalizer(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:53:56,879275;END!
PLE;EVAL_TO;2020-02-20 17:47:56,102327;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2',                 PCA(copy=True,...                 ExtraTreesClassifier(bootstrap=False, class_weight=None,                                      criterion='gini', max_depth=None,                                      max_features=0.7000000000000001,                                      max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=13, min_samples_split=12,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:53:56,632018;END!
PLE;RMV_IND;Individual 8a4321ca-b65f-4531-84fb-3d9c4914d605
Pipeline: ExtraTreesClassifier(Normalizer(PCA(data, PCA.iterated_power=5, PCA.svd_solver='randomized'), Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.7000000000000001, min_samples_leaf=13, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 17, 47, 56, 102082), wallclock_time=360.535769701004, process_time=359.59330937699997);2020-02-20 17:53:56,880398;END!
PLE;IND_MUT;ffa946bb-722c-4af5-bfc8-66b5113a7fe2;14f81001-2413-4e14-9610-eb27bb341d05;mut_shrink;2020-02-20 17:53:56,882491;END!
PLE;EVAL;2020-02-20 17:53:56,846249;4.75495457649231;4.742760462999968;(0.5551450190374263, -1);b7434476-e3be-45c4-8964-835f2045b081;MultinomialNB(data, alpha=10.0, fit_prior=False);2020-02-20 17:54:01,894529;END!
PLE;RMV_IND;Individual 4a0fc50e-e371-4b95-819d-be0adf03a23d
Pipeline: KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='l1', FeatureAgglomeration.linkage='ward'), KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 52, 49, 671055), wallclock_time=0.9136438369750977, process_time=0.9109400759999744);2020-02-20 17:54:01,896375;END!
PLE;IND_CX;7676774f-c212-4615-aee1-faa3271eabc3;ace68339-e971-487b-8793-52b2489a4843;d3df0ba7-96e9-451d-9c4a-0e53a67841ea;2020-02-20 17:54:01,898542;END!
PLE;EVAL;2020-02-20 17:48:03,975987;361.79552006721497;360.8498698750001;(-inf, -2);d75138cd-6b0c-4db9-ba18-6b42756c1ddb;GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25);2020-02-20 17:54:06,052353;END!
PLE;EVAL_TO;2020-02-20 17:48:03,976210;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 RBFSampler(gam...                                            max_depth=2,                                            max_features=0.9000000000000001,                                            max_leaf_nodes=None,                                            min_impurity_decrease=0.0,                                            min_impurity_split=None,                                            min_samples_leaf=18,                                            min_samples_split=12,                                            min_weight_fraction_leaf=0.0,                                            n_estimators=100,                                            n_iter_no_change=None,                                            presort='auto', random_state=None,                                            subsample=0.25, tol=0.0001,                                            validation_fraction=0.1, verbose=0,                                            warm_start=False))],         verbose=False);2020-02-20 17:54:05,766032;END!
PLE;RMV_IND;Individual d75507a1-b3c9-4075-be71-81e0569c51d4
Pipeline: LogisticRegression(PCA(MaxAbsScaler(data), PCA.iterated_power=10, PCA.svd_solver='randomized'), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.679532390774389, -3), start_time=datetime.datetime(2020, 2, 20, 17, 36, 31, 626559), wallclock_time=18.597694873809814, process_time=18.546098730999997);2020-02-20 17:54:06,053606;END!
PLE;IND_MUT;03bab2b0-aa73-4312-a195-929033d36853;69474dd5-6033-43e2-82a7-5c1f5360a396;mut_insert;2020-02-20 17:54:06,055675;END!
PLE;EVAL;2020-02-20 17:54:01,824151;4.792962312698364;4.78017636300001;(0.5551450415068218, -1);dca0ba59-53da-489a-b63c-eb3fe9b4936b;MultinomialNB(data, alpha=0.1, fit_prior=False);2020-02-20 17:54:06,907493;END!
PLE;RMV_IND;Individual 9071d857-81ac-4d64-bf66-721a0358abb1
Pipeline: MultinomialNB(Nystroem(data, Nystroem.gamma=0.1, Nystroem.kernel='linear', Nystroem.n_components=6), alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 52, 50, 848602), wallclock_time=0.9849417209625244, process_time=0.9801439139999957);2020-02-20 17:54:06,913959;END!
PLE;IND_MUT;375b4e99-7679-40bc-b4d7-8e6b15418b00;829232c5-938f-4039-81b8-6e36a6d0333f;mut_replace_terminal;2020-02-20 17:54:06,916097;END!
PLE;EVAL;2020-02-20 17:54:06,835529;0.9523921012878418;0.9495390060001228;(-inf, -2);11f7a7c9-a569-4e5f-840e-86304afd5c41;LogisticRegression(StandardScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:54:08,054614;END!
PLE;EVAL_ERR;2020-02-20 17:54:06,835733;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', StandardScaler(copy=True, with_mean=True, with_std=True)),                ('0',                 LogisticRegression(C=15.0, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;Solver lbfgs supports only dual=False, got dual=True;2020-02-20 17:54:07,787784;END!
PLE;RMV_IND;Individual d75138cd-6b0c-4db9-ba18-6b42756c1ddb
Pipeline: GradientBoostingClassifier(RBFSampler(data, RBFSampler.gamma=1.0), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 48, 3, 975987), wallclock_time=361.79552006721497, process_time=360.8498698750001);2020-02-20 17:54:08,055621;END!
PLE;IND_MUT;4745b975-8719-4ee8-b3e4-bcef0392e7c1;f2814b52-5478-43db-8b30-6e194adbcb76;mut_insert;2020-02-20 17:54:08,057773;END!
PLE;EVAL;2020-02-20 17:54:07,989786;1.505924940109253;1.5008720420000827;(-inf, -2);6460eede-9f76-4ec3-91a2-f5ab90c9727a;MultinomialNB(FastICA(data, FastICA.tol=0.75), alpha=0.01, fit_prior=True);2020-02-20 17:54:09,728660;END!
PLE;EVAL_ERR;2020-02-20 17:54:07,989971;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FastICA(algorithm='parallel', fun='logcosh', fun_args=None,                         max_iter=200, n_components=None, random_state=None,                         tol=0.75, w_init=None, whiten=True)),                ('0',                 MultinomialNB(alpha=0.01, class_prior=None, fit_prior=True))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 17:54:09,495568;END!
PLE;RMV_IND;Individual 11f7a7c9-a569-4e5f-840e-86304afd5c41
Pipeline: LogisticRegression(StandardScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 54, 6, 835529), wallclock_time=0.9523921012878418, process_time=0.9495390060001228);2020-02-20 17:54:09,729626;END!
PLE;IND_MUT;84e7cc03-ac77-4d75-b14a-b7d8de51365e;605ce055-4108-4d6a-8b6e-050e0efeca62;mut_replace_primitive;2020-02-20 17:54:09,731734;END!
PLE;EVAL;2020-02-20 17:54:06,003023;4.825822353363037;4.813239479999993;(0.5551549159987466, -1);0acecd8f-b658-4506-9b9d-019382481cd3;MultinomialNB(data, alpha=0.1, fit_prior=True);2020-02-20 17:54:11,137859;END!
PLE;RMV_IND;Individual 6460eede-9f76-4ec3-91a2-f5ab90c9727a
Pipeline: MultinomialNB(FastICA(data, FastICA.tol=0.75), alpha=0.01, fit_prior=True)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 54, 7, 989786), wallclock_time=1.505924940109253, process_time=1.5008720420000827);2020-02-20 17:54:11,147203;END!
PLE;IND_CX;82cfea6c-496f-415f-b862-792b174fe6d6;8505e462-c935-4db2-ba4c-d1342d2ce695;dc7342c0-69ef-44ff-9c68-a9e9c9a8ac09;2020-02-20 17:54:11,149558;END!
PLE;EVAL;2020-02-20 17:51:24,520866;166.9745831489563;166.55629865800006;(0.7011080450955033, -3);1e1a5eeb-d12f-48c4-aad1-4d48e632aa73;ExtraTreesClassifier(MinMaxScaler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized')), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=14, min_samples_split=6, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:54:15,959412;END!
PLE;RMV_IND;Individual 8505e462-c935-4db2-ba4c-d1342d2ce695
Pipeline: BernoulliNB(MinMaxScaler(data), alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(0.533965540639527, -2), start_time=datetime.datetime(2020, 2, 20, 17, 37, 4, 797808), wallclock_time=5.758349657058716, process_time=5.743654432);2020-02-20 17:54:15,961279;END!
PLE;IND_MUT;ccda2944-472f-4c72-b0ca-55d97c7fa7bc;dc7342c0-69ef-44ff-9c68-a9e9c9a8ac09;mut_replace_primitive;2020-02-20 17:54:15,963383;END!
PLE;EVAL;2020-02-20 17:53:21,036074;54.56998062133789;54.42904053299992;(0.6215582225039802, -2);c4b7e51e-0b7d-49e5-9466-1c2df299506e;GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25);2020-02-20 17:54:16,247413;END!
PLE;RMV_IND;Individual cc15564e-81e4-475d-ba5c-b0c9a8a91581
Pipeline: MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=10.0, fit_prior=False)
Fitness: Fitness(values=(0.5389059900841002, -2), start_time=datetime.datetime(2020, 2, 20, 17, 37, 52, 752192), wallclock_time=9.505600929260254, process_time=9.480592919000003);2020-02-20 17:54:16,249332;END!
PLE;IND_MUT;4ed6548e-fa7e-440d-a701-6bb31771eedf;69474dd5-6033-43e2-82a7-5c1f5360a396;mut_insert;2020-02-20 17:54:16,251667;END!
PLE;EVAL;2020-02-20 17:54:11,073805;5.0520360469818115;5.03853171500009;(0.5245887465974972, -1);d12a8d06-1fa5-4127-ab75-c60cb3c76987;BernoulliNB(data, alpha=0.1, fit_prior=True);2020-02-20 17:54:16,484935;END!
PLE;RMV_IND;Individual 1e1a5eeb-d12f-48c4-aad1-4d48e632aa73
Pipeline: ExtraTreesClassifier(MinMaxScaler(PCA(data, PCA.iterated_power=6, PCA.svd_solver='randomized')), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=14, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(0.7011080450955033, -3), start_time=datetime.datetime(2020, 2, 20, 17, 51, 24, 520866), wallclock_time=166.9745831489563, process_time=166.55629865800006);2020-02-20 17:54:16,486769;END!
PLE;IND_MUT;7ec1c0fc-d502-4745-9722-8595a9d73062;69474dd5-6033-43e2-82a7-5c1f5360a396;mut_replace_primitive;2020-02-20 17:54:16,489008;END!
PLE;EVAL;2020-02-20 17:54:15,052917;5.102531433105469;5.089971818000095;(0.524587828942576, -1);214e746f-2563-453b-b6d3-7021fc30e304;BernoulliNB(data, alpha=100.0, fit_prior=True);2020-02-20 17:54:20,343156;END!
PLE;RMV_IND;Individual 13da1b22-9b8c-4758-9766-3a43b0dc584b
Pipeline: RandomForestClassifier(data, RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=15, RandomForestClassifier.min_samples_split=7, RandomForestClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -1), start_time=datetime.datetime(2020, 2, 20, 17, 36, 31, 963718), wallclock_time=360.1241147518158, process_time=359.177909043);2020-02-20 17:54:20,344923;END!
PLE;IND_MUT;0f86f37e-be87-4d10-abfc-e2a176535ac9;c06ddc5d-7fe6-442d-b066-1f3e5a9ed8c0;mut_replace_primitive;2020-02-20 17:54:20,347010;END!
PLE;EVAL;2020-02-20 17:54:15,902298;5.285461187362671;5.272042321000072;(0.524587828942576, -1);f79ca184-79bc-40c8-a6c2-3bc23e19f525;BernoulliNB(data, alpha=10.0, fit_prior=True);2020-02-20 17:54:21,538390;END!
PLE;RMV_IND;Individual 3f442fc6-e0cd-4a50-86c7-d9a956733bb5
Pipeline: MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(0.5570391609377099, -2), start_time=datetime.datetime(2020, 2, 20, 17, 36, 31, 297053), wallclock_time=5.7262492179870605, process_time=5.709428047);2020-02-20 17:54:21,540325;END!
PLE;IND_MUT;0e772a37-4c26-47c3-ba21-9b40c176ffc7;9d05f04e-1c82-4408-871f-5c68a08daf41;mut_insert;2020-02-20 17:54:21,542538;END!
PLE;EVAL;2020-02-20 17:54:20,344497;5.137072324752808;5.123939807999932;(0.5551450190374263, -1);8bc89862-cb8a-46de-938b-25dbf1b60dc5;MultinomialNB(data, alpha=10.0, fit_prior=False);2020-02-20 17:54:25,762372;END!
PLE;RMV_IND;Individual 58ba6011-3c56-4f75-818f-032c74d6b193
Pipeline: LogisticRegression(data, LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -1), start_time=datetime.datetime(2020, 2, 20, 17, 43, 0, 964370), wallclock_time=0.9417273998260498, process_time=0.9385330900000213);2020-02-20 17:54:25,764309;END!
PLE;IND_CX;fbc10ceb-fd68-4c45-b930-54a25254f736;14f81001-2413-4e14-9610-eb27bb341d05;533cfef0-8c25-4483-9452-35f721acccc5;2020-02-20 17:54:25,766518;END!
PLE;EVAL;2020-02-20 17:54:16,348147;11.0318443775177;11.002587511000002;(0.6906975570364278, -1);df0f4c36-2913-43ba-8825-ebb92949cffe;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11);2020-02-20 17:54:27,628243;END!
PLE;RMV_IND;Individual 58cf03b3-e802-4ad4-a0d0-09a73101ec35
Pipeline: RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.6500000000000001, RandomForestClassifier.min_samples_leaf=13, RandomForestClassifier.min_samples_split=17, RandomForestClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -1), start_time=datetime.datetime(2020, 2, 20, 17, 37, 41, 657849), wallclock_time=360.3679156303406, process_time=359.46085917);2020-02-20 17:54:27,630278;END!
PLE;IND_MUT;777ade34-55b3-4272-806d-e79a2a3686f6;605ce055-4108-4d6a-8b6e-050e0efeca62;mut_replace_primitive;2020-02-20 17:54:27,632477;END!
PLE;EVAL;2020-02-20 17:54:27,645035;1.4995245933532715;1.495364435000056;(-inf, -2);7c2d221b-7152-4cae-af50-550db3ab98d3;BernoulliNB(FastICA(data, FastICA.tol=0.7000000000000001), alpha=1.0, fit_prior=True);2020-02-20 17:54:29,434358;END!
PLE;EVAL_ERR;2020-02-20 17:54:27,645265;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FastICA(algorithm='parallel', fun='logcosh', fun_args=None,                         max_iter=200, n_components=None, random_state=None,                         tol=0.7000000000000001, w_init=None, whiten=True)),                ('0',                 BernoulliNB(alpha=1.0, binarize=0.0, class_prior=None,                             fit_prior=True))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 17:54:29,144372;END!
PLE;RMV_IND;Individual 7c2d221b-7152-4cae-af50-550db3ab98d3
Pipeline: BernoulliNB(FastICA(data, FastICA.tol=0.7000000000000001), alpha=1.0, fit_prior=True)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 54, 27, 645035), wallclock_time=1.4995245933532715, process_time=1.495364435000056);2020-02-20 17:54:29,435387;END!
PLE;IND_MUT;0fa66478-eefc-4e4c-9d0a-aa00398966c2;c0bbbb23-d6c5-46cd-954d-429b186f6be3;mut_insert;2020-02-20 17:54:29,437677;END!
PLE;EVAL;2020-02-20 17:54:29,383269;0.9386007785797119;0.9347482680000212;(-inf, -2);4cd2fd70-03fb-4837-81d8-0883307642c8;LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_classif), LogisticRegression.C=0.01, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:54:30,580728;END!
PLE;EVAL_ERR;2020-02-20 17:54:29,383457;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 SelectFwe(alpha=0.005,                           score_func=<function f_classif at 0x2b53ffee7d90>)),                ('0',                 LogisticRegression(C=0.01, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;Solver lbfgs supports only dual=False, got dual=True;2020-02-20 17:54:30,321698;END!
PLE;RMV_IND;Individual 4cd2fd70-03fb-4837-81d8-0883307642c8
Pipeline: LogisticRegression(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_classif), LogisticRegression.C=0.01, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 54, 29, 383269), wallclock_time=0.9386007785797119, process_time=0.9347482680000212);2020-02-20 17:54:30,581720;END!
PLE;IND_MUT;4845fc45-0bf6-4f32-b9ce-050d7bb61e6f;0bd5b044-9209-413b-adb3-f988747f099b;mut_replace_terminal;2020-02-20 17:54:30,583793;END!
PLE;EVAL;2020-02-20 17:54:30,556137;9.206125497817993;9.180767418999949;(0.5389059900841002, -2);f1acd41f-7d84-45f6-a40c-cfeae9bfb610;MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=10.0, fit_prior=True);2020-02-20 17:54:40,089317;END!
PLE;RMV_IND;Individual 69b6a55e-20c9-40fa-bad6-ba4343040ae0
Pipeline: LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -1), start_time=datetime.datetime(2020, 2, 20, 17, 47, 36, 551845), wallclock_time=0.9010903835296631, process_time=0.8983909589999257);2020-02-20 17:54:40,091198;END!
PLE;IND_MUT;44327d37-f159-4092-924b-6da3e2b97986;829232c5-938f-4039-81b8-6e36a6d0333f;mut_replace_primitive;2020-02-20 17:54:40,093308;END!
PLE;EVAL;2020-02-20 17:54:40,009153;33.664952993392944;33.57542933700006;(0.6561801129785491, -1);7fd81b21-89d4-4446-93ab-bac0cd9beffc;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform');2020-02-20 17:55:16,762906;END!
PLE;RMV_IND;Individual f1acd41f-7d84-45f6-a40c-cfeae9bfb610
Pipeline: MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=10.0, fit_prior=True)
Fitness: Fitness(values=(0.5389059900841002, -2), start_time=datetime.datetime(2020, 2, 20, 17, 54, 30, 556137), wallclock_time=9.206125497817993, process_time=9.180767418999949);2020-02-20 17:55:16,764609;END!
PLE;IND_MUT;ae38221b-5031-4ebf-9226-181ddbc89fc8;dca0ba59-53da-489a-b63c-eb3fe9b4936b;mut_replace_primitive;2020-02-20 17:55:16,766691;END!
PLE;EVAL;2020-02-20 17:55:15,280347;5.0324928760528564;5.0190124939999805;(0.662709306943867, -1);ba54b229-cc08-4795-8168-d6f70b7ce2ec;GaussianNB(data);2020-02-20 17:55:20,619652;END!
PLE;RMV_IND;Individual 533cfef0-8c25-4483-9452-35f721acccc5
Pipeline: MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(0.5570391929969678, -2), start_time=datetime.datetime(2020, 2, 20, 17, 45, 6, 142414), wallclock_time=5.102984666824341, process_time=5.089559172000008);2020-02-20 17:55:20,621445;END!
PLE;IND_MUT;62e49cca-96e1-4a11-a931-a00acd5d57e8;fb336467-2f16-4b36-9495-c3484ebd335f;mut_shrink;2020-02-20 17:55:20,623543;END!
PLE;EVAL;2020-02-20 17:54:21,469204;135.00730276107788;134.66521811200005;(0.7105883879293597, -2);a64da21e-e58b-4f4f-86e1-cb3e9bc61e77;ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=9, min_samples_split=6, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:56:40,644148;END!
PLE;RMV_IND;Individual fb336467-2f16-4b36-9495-c3484ebd335f
Pipeline: DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=18)
Fitness: Fitness(values=(0.5591787678162886, -2), start_time=datetime.datetime(2020, 2, 20, 17, 38, 12, 702460), wallclock_time=6.804822206497192, process_time=6.785825533000008);2020-02-20 17:56:40,646381;END!
PLE;IND_MUT;66815b2a-455d-4c36-b2b7-4203f16f1b62;b806803e-ea1d-49ba-b29c-a4b0de3acc28;mut_insert;2020-02-20 17:56:40,648558;END!
PLE;EVAL;2020-02-20 17:56:39,810997;11.841091632843018;11.811245982999935;(0.5084941790780388, -3);70639eac-5c1f-49a9-b30a-04e00d4c52ce;GaussianNB(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.25)));2020-02-20 17:56:51,910380;END!
PLE;RMV_IND;Individual a4773d16-11b0-4b1a-8065-26f97988ff3b
Pipeline: GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.01, GradientBoostingClassifier.max_depth=7, GradientBoostingClassifier.max_features=0.7000000000000001, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=10, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4)
Fitness: Fitness(values=(-inf, -1), start_time=datetime.datetime(2020, 2, 20, 17, 45, 12, 652017), wallclock_time=360.7030608654022, process_time=359.769876176);2020-02-20 17:56:51,911904;END!
PLE;IND_MUT;96ee4703-19fd-4a97-b681-2ac8067b8527;9cff1e45-c0ed-437a-9f11-906b86f0ac17;mut_shrink;2020-02-20 17:56:51,914047;END!
PLE;EVAL;2020-02-20 17:56:51,859118;4.974602222442627;4.961922596000022;(0.5551416175179558, -2);11f11841-ebd8-42bc-bb76-23d9abc93634;MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=True);2020-02-20 17:56:57,044355;END!
PLE;RMV_IND;Individual 70639eac-5c1f-49a9-b30a-04e00d4c52ce
Pipeline: GaussianNB(MaxAbsScaler(RBFSampler(data, RBFSampler.gamma=0.25)))
Fitness: Fitness(values=(0.5084941790780388, -3), start_time=datetime.datetime(2020, 2, 20, 17, 56, 39, 810997), wallclock_time=11.841091632843018, process_time=11.811245982999935);2020-02-20 17:56:57,046225;END!
PLE;IND_MUT;ec366938-2c33-46f0-be64-54b3705cb668;e167ae3e-f946-4f47-a437-655d95e5beb3;mut_shrink;2020-02-20 17:56:57,048372;END!
PLE;EVAL;2020-02-20 17:51:09,746599;360.44088649749756;359.51188618799995;(-inf, -2);ad983c0c-c557-40ce-8314-788d169a944e;ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=8, min_samples_split=14, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:57:10,432614;END!
PLE;EVAL_TO;2020-02-20 17:51:09,746809;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', MinMaxScaler(c...                 ExtraTreesClassifier(bootstrap=False, class_weight=None,                                      criterion='gini', max_depth=None,                                      max_features=1.0, max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=8, min_samples_split=14,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:57:10,182514;END!
PLE;RMV_IND;Individual ad983c0c-c557-40ce-8314-788d169a944e
Pipeline: ExtraTreesClassifier(MinMaxScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=8, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 51, 9, 746599), wallclock_time=360.44088649749756, process_time=359.51188618799995);2020-02-20 17:57:10,433646;END!
PLE;IND_MUT;0ba8cf99-8fd9-434e-b92a-e725e82a290e;f2814b52-5478-43db-8b30-6e194adbcb76;mut_replace_terminal;2020-02-20 17:57:10,435717;END!
PLE;EVAL;2020-02-20 17:57:10,402900;8.262201070785522;8.240487795000035;(0.5655802071893128, -1);83e06266-92b7-448c-b624-022f6af11ea7;LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:57:18,954234;END!
PLE;RMV_IND;Individual 11f11841-ebd8-42bc-bb76-23d9abc93634
Pipeline: MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=44, SelectPercentile.score_func=f_classif), alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(0.5551416175179558, -2), start_time=datetime.datetime(2020, 2, 20, 17, 56, 51, 859118), wallclock_time=4.974602222442627, process_time=4.961922596000022);2020-02-20 17:57:18,961200;END!
PLE;IND_MUT;94be7e14-cbd3-4ba9-ada5-35f8bde2aef1;e71735b7-2b84-46c8-88cb-a3bd6759fddd;mut_replace_primitive;2020-02-20 17:57:18,963347;END!
PLE;EVAL;2020-02-20 17:51:40,852690;360.47580575942993;359.544910751;(-inf, -1);c6bbce20-ed32-4bff-84ac-21f360c170d0;RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100);2020-02-20 17:57:41,518656;END!
PLE;EVAL_TO;2020-02-20 17:51:40,852957;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 RandomForestClassifier(bootstrap=False, class_weight=None,                                        criterion='entropy', max_depth=None,                                        max_features=0.45, max_leaf_nodes=None,                                        min_impurity_decrease=0.0,                                        min_impurity_split=None,                                        min_samples_leaf=9, min_samples_split=8,                                        min_weight_fraction_leaf=0.0,                                        n_estimators=100, n_jobs=None,                                        oob_score=False, random_state=None,                                        verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:57:41,323972;END!
PLE;RMV_IND;Individual f2814b52-5478-43db-8b30-6e194adbcb76
Pipeline: DecisionTreeClassifier(StandardScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20)
Fitness: Fitness(values=(0.5980415055380628, -2), start_time=datetime.datetime(2020, 2, 20, 17, 46, 56, 479604), wallclock_time=5.954972505569458, process_time=5.939089500000023);2020-02-20 17:57:41,519739;END!
PLE;IND_MUT;badeb606-9c2e-48c9-8ed7-9beb1fa68810;e64df28f-382e-496e-be67-72478a3b3527;mut_insert;2020-02-20 17:57:41,521893;END!
PLE;EVAL;2020-02-20 17:57:41,533905;0.9783382415771484;0.9754767760000504;(-inf, -2);929b34c4-358f-488a-be72-c2703b8f2536;MultinomialNB(StandardScaler(data), alpha=100.0, fit_prior=True);2020-02-20 17:57:42,763444;END!
PLE;EVAL_ERR;2020-02-20 17:57:41,534091;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', StandardScaler(copy=True, with_mean=True, with_std=True)),                ('0',                 MultinomialNB(alpha=100.0, class_prior=None, fit_prior=True))],         verbose=False);<class 'ValueError'>;Input X must be non-negative;2020-02-20 17:57:42,512083;END!
PLE;RMV_IND;Individual 929b34c4-358f-488a-be72-c2703b8f2536
Pipeline: MultinomialNB(StandardScaler(data), alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 57, 41, 533905), wallclock_time=0.9783382415771484, process_time=0.9754767760000504);2020-02-20 17:57:42,764557;END!
PLE;IND_MUT;8d79dd9e-0c32-4de8-93c1-d1da403c2a33;e167ae3e-f946-4f47-a437-655d95e5beb3;mut_shrink;2020-02-20 17:57:42,766643;END!
PLE;EVAL;2020-02-20 17:52:07,386384;360.5222840309143;359.59400180299997;(-inf, -2);f7aaff53-f8a6-46cd-ba00-474fea6e33c8;ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=14, min_samples_split=6, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:58:08,126447;END!
PLE;EVAL_TO;2020-02-20 17:52:07,386597;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 PolynomialFeat...                 ExtraTreesClassifier(bootstrap=True, class_weight=None,                                      criterion='gini', max_depth=None,                                      max_features=0.35000000000000003,                                      max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=14, min_samples_split=6,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);2020-02-20 17:58:07,903280;END!
PLE;RMV_IND;Individual f7aaff53-f8a6-46cd-ba00-474fea6e33c8
Pipeline: ExtraTreesClassifier(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=14, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 52, 7, 386384), wallclock_time=360.5222840309143, process_time=359.59400180299997);2020-02-20 17:58:08,128020;END!
PLE;IND_MUT;3ef84cab-1868-45fd-ba98-b5b3f0f97914;c0bbbb23-d6c5-46cd-954d-429b186f6be3;mut_shrink;2020-02-20 17:58:08,130155;END!
PLE;EVAL;2020-02-20 17:57:18,883355;74.2298173904419;74.03885949599999;(0.6461937621157294, -2);e241a8af-5567-4a44-9faf-b6d25b3dc3f0;KNeighborsClassifier(SelectPercentile(data, SelectPercentile.percentile=12, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 17:58:33,856778;END!
PLE;RMV_IND;Individual 91239a5b-43d1-4d61-83d2-6ca99394cd42
Pipeline: LogisticRegression(data, LogisticRegression.C=0.1, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -1), start_time=datetime.datetime(2020, 2, 20, 17, 51, 23, 367239), wallclock_time=0.8759438991546631, process_time=0.8728397830000176);2020-02-20 17:58:33,858465;END!
PLE;IND_MUT;a80288c2-c8e4-4663-8731-406643901821;d3462e13-1f44-4338-9c3d-c0cce0b4aefd;mut_insert;2020-02-20 17:58:33,860609;END!
PLE;EVAL;2020-02-20 17:57:42,713112;54.966132164001465;54.823934364000024;(0.6559777356170756, -1);acb0f565-f686-4ca1-ae2a-4c059f6dabb7;GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001);2020-02-20 17:58:38,005010;END!
PLE;RMV_IND;Individual e167ae3e-f946-4f47-a437-655d95e5beb3
Pipeline: DecisionTreeClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='precomputed', FeatureAgglomeration.linkage='complete'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=9)
Fitness: Fitness(values=(0.6134526715906187, -2), start_time=datetime.datetime(2020, 2, 20, 17, 36, 32, 311609), wallclock_time=16.23674774169922, process_time=16.189276160000002);2020-02-20 17:58:38,007001;END!
PLE;IND_MUT;12ff5747-5af6-4a48-9aec-78dcd6440c49;69474dd5-6033-43e2-82a7-5c1f5360a396;mut_insert;2020-02-20 17:58:38,009224;END!
PLE;EVAL;2020-02-20 17:58:33,524982;5.079530954360962;5.06614189600009;(0.662709306943867, -1);45ef8f28-9852-4c0d-96dd-cc775d5160bd;GaussianNB(data);2020-02-20 17:58:38,883557;END!
PLE;RMV_IND;Individual c4b7e51e-0b7d-49e5-9466-1c2df299506e
Pipeline: GradientBoostingClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.8500000000000001), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)
Fitness: Fitness(values=(0.6215582225039802, -2), start_time=datetime.datetime(2020, 2, 20, 17, 53, 21, 36074), wallclock_time=54.56998062133789, process_time=54.42904053299992);2020-02-20 17:58:38,885491;END!
PLE;IND_MUT;c7965b2e-4e70-4fc7-ba6c-4a600b151e12;b806803e-ea1d-49ba-b29c-a4b0de3acc28;mut_insert;2020-02-20 17:58:38,887621;END!
PLE;EVAL;2020-02-20 17:58:38,827146;5.018857002258301;5.006110097999908;(0.5551513132210038, -2);07aa7447-c48e-4f78-beea-9730c0656913;MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=47, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True);2020-02-20 17:58:44,121879;END!
PLE;RMV_IND;Individual 07aa7447-c48e-4f78-beea-9730c0656913
Pipeline: MultinomialNB(SelectPercentile(data, SelectPercentile.percentile=47, SelectPercentile.score_func=f_classif), alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(0.5551513132210038, -2), start_time=datetime.datetime(2020, 2, 20, 17, 58, 38, 827146), wallclock_time=5.018857002258301, process_time=5.006110097999908);2020-02-20 17:58:44,123754;END!
PLE;IND_MUT;9abc873b-0abc-43a8-bc14-b2623132db02;acb0f565-f686-4ca1-ae2a-4c059f6dabb7;mut_replace_terminal;2020-02-20 17:58:44,125925;END!
PLE;EVAL;2020-02-20 17:58:44,065395;10.22040843963623;10.194027179999921;(0.5819794499197066, -1);977d4844-aa6e-4025-88e5-6ecab1936951;LogisticRegression(data, LogisticRegression.C=0.01, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:58:54,498124;END!
PLE;RMV_IND;Individual bbf8151f-e3a6-46fe-8650-26b2438579b0
Pipeline: RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.8, RandomForestClassifier.min_samples_leaf=14, RandomForestClassifier.min_samples_split=19, RandomForestClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -1), start_time=datetime.datetime(2020, 2, 20, 17, 46, 33, 511001), wallclock_time=360.67094349861145, process_time=359.760007706);2020-02-20 17:58:54,500005;END!
PLE;IND_MUT;7eb0035d-ab88-4689-abf4-a501ed34936e;8a612021-4080-42f7-a5dc-02cd95a3e751;mut_replace_primitive;2020-02-20 17:58:54,502243;END!
PLE;EVAL;2020-02-20 17:58:37,951232;20.651451587677002;20.59825230299998;(0.6957823934248715, -3);099705c9-c859-42a2-b7f0-7e50f875ca32;KNeighborsClassifier(Normalizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), Normalizer.norm='l2'), KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance');2020-02-20 17:58:59,294769;END!
PLE;RMV_IND;Individual c6bbce20-ed32-4bff-84ac-21f360c170d0
Pipeline: RandomForestClassifier(data, RandomForestClassifier.bootstrap=False, RandomForestClassifier.criterion='entropy', RandomForestClassifier.max_features=0.45, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=8, RandomForestClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -1), start_time=datetime.datetime(2020, 2, 20, 17, 51, 40, 852690), wallclock_time=360.47580575942993, process_time=359.544910751);2020-02-20 17:58:59,296559;END!
PLE;IND_MUT;18effe4e-01b2-4793-9b65-175f02eb706e;69474dd5-6033-43e2-82a7-5c1f5360a396;mut_replace_primitive;2020-02-20 17:58:59,298685;END!
PLE;EVAL;2020-02-20 17:58:59,056344;4.910948276519775;4.898000721000017;(0.5245887465974972, -1);28c13d29-e266-4fd4-a690-c4960c1e5fc6;BernoulliNB(data, alpha=1.0, fit_prior=True);2020-02-20 17:59:04,245481;END!
PLE;RMV_IND;Individual 099705c9-c859-42a2-b7f0-7e50f875ca32
Pipeline: KNeighborsClassifier(Normalizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), Normalizer.norm='l2'), KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')
Fitness: Fitness(values=(0.6957823934248715, -3), start_time=datetime.datetime(2020, 2, 20, 17, 58, 37, 951232), wallclock_time=20.651451587677002, process_time=20.59825230299998);2020-02-20 17:59:04,247297;END!
PLE;IND_MUT;40d59a24-dd0e-48dd-8655-a650f9194be2;14f81001-2413-4e14-9610-eb27bb341d05;mut_shrink;2020-02-20 17:59:04,249576;END!
PLE;EVAL;2020-02-20 17:58:08,071257;65.49883246421814;65.32360343699997;(0.6533597296012981, -2);3aa7ba5e-432b-4858-99fb-b98e1618e63a;ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=19, min_samples_split=12, ExtraTreesClassifier.n_estimators=100);2020-02-20 17:59:14,939949;END!
PLE;RMV_IND;Individual 69474dd5-6033-43e2-82a7-5c1f5360a396
Pipeline: DecisionTreeClassifier(Binarizer(data, Binarizer.threshold=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11)
Fitness: Fitness(values=(0.6238281246742606, -2), start_time=datetime.datetime(2020, 2, 20, 17, 50, 43, 925994), wallclock_time=6.506276369094849, process_time=6.489569839999945);2020-02-20 17:59:14,941908;END!
PLE;IND_MUT;61b1e53f-0ee3-4509-9467-0ceb36a9ce69;c0bbbb23-d6c5-46cd-954d-429b186f6be3;mut_shrink;2020-02-20 17:59:14,944047;END!
PLE;EVAL;2020-02-20 17:59:04,175337;16.830830097198486;16.78755548999993;(0.621232001474757, -1);8d6a812a-705a-4563-ad80-c33cb0135c90;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=7, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance');2020-02-20 17:59:24,163953;END!
PLE;RMV_IND;Individual 14f81001-2413-4e14-9610-eb27bb341d05
Pipeline: KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), KNeighborsClassifier.n_neighbors=2, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')
Fitness: Fitness(values=(0.6311794024264339, -2), start_time=datetime.datetime(2020, 2, 20, 17, 38, 32, 942798), wallclock_time=15.971508026123047, process_time=15.929235927000008);2020-02-20 17:59:24,165526;END!
PLE;IND_MUT;b94ce806-8cce-47ba-92ce-1eb05a0eb109;8d6a812a-705a-4563-ad80-c33cb0135c90;mut_replace_terminal;2020-02-20 17:59:24,167529;END!
PLE;EVAL;2020-02-20 17:59:22,767577;5.014425039291382;5.001256099999864;(0.5551455162372203, -2);d1c9ccf2-b9d6-48d4-905c-7c823f82d915;MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.007, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=False);2020-02-20 17:59:28,075966;END!
PLE;RMV_IND;Individual d1c9ccf2-b9d6-48d4-905c-7c823f82d915
Pipeline: MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.007, SelectFwe.score_func=f_classif), alpha=10.0, fit_prior=False)
Fitness: Fitness(values=(0.5551455162372203, -2), start_time=datetime.datetime(2020, 2, 20, 17, 59, 22, 767577), wallclock_time=5.014425039291382, process_time=5.001256099999864);2020-02-20 17:59:28,077856;END!
PLE;IND_MUT;a55d780c-f265-4a70-8034-ce4a29769c24;45ef8f28-9852-4c0d-96dd-cc775d5160bd;mut_insert;2020-02-20 17:59:28,079980;END!
PLE;EVAL;2020-02-20 17:59:28,005921;4.686721086502075;4.674756503999788;(0.5551549141220024, -1);94f2eaab-5571-422c-9df2-8ed6ead5ceba;MultinomialNB(data, alpha=1.0, fit_prior=True);2020-02-20 17:59:32,981489;END!
PLE;RMV_IND;Individual ace68339-e971-487b-8793-52b2489a4843
Pipeline: KNeighborsClassifier(SelectPercentile(data, SelectPercentile.percentile=12, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=36, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')
Fitness: Fitness(values=(0.6441213996701265, -2), start_time=datetime.datetime(2020, 2, 20, 17, 36, 32, 902437), wallclock_time=79.26945877075195, process_time=79.063342001);2020-02-20 17:59:32,983300;END!
PLE;IND_MUT;e5d2f4e4-0a0c-4f0f-8d81-cb36a80f02b1;72e117a7-8f39-42f6-810a-7653e0cb7e9a;mut_replace_terminal;2020-02-20 17:59:32,985382;END!
PLE;EVAL;2020-02-20 17:56:57,056605;162.9938566684723;162.57423859100004;(0.6912649347821564, -2);55a6f2bd-b943-474b-8c77-9a0d03882c1f;GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25);2020-02-20 17:59:40,405966;END!
PLE;RMV_IND;Individual e241a8af-5567-4a44-9faf-b6d25b3dc3f0
Pipeline: KNeighborsClassifier(SelectPercentile(data, SelectPercentile.percentile=12, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')
Fitness: Fitness(values=(0.6461937621157294, -2), start_time=datetime.datetime(2020, 2, 20, 17, 57, 18, 883355), wallclock_time=74.2298173904419, process_time=74.03885949599999);2020-02-20 17:59:40,407948;END!
PLE;IND_MUT;f9c0ffe6-c7dc-4f9d-bebd-854a62b5e3ac;72e117a7-8f39-42f6-810a-7653e0cb7e9a;mut_replace_terminal;2020-02-20 17:59:40,410119;END!
PLE;EVAL;2020-02-20 17:59:32,914088;10.738542318344116;10.710543160000043;(0.6906970486405875, -1);646653b3-3941-46e2-83bb-3b3899e74404;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11);2020-02-20 17:59:43,977197;END!
PLE;RMV_IND;Individual b2a2ad69-e6a1-4225-ae45-d484e75434da
Pipeline: BernoulliNB(data, alpha=10.0, fit_prior=False)
Fitness: Fitness(values=(0.524587828942576, -1), start_time=datetime.datetime(2020, 2, 20, 17, 36, 32, 135208), wallclock_time=5.7495810985565186, process_time=5.734568768);2020-02-20 17:59:43,978881;END!
PLE;IND_MUT;55b701fd-b76a-4c6d-83fb-ed231ac36f79;8a612021-4080-42f7-a5dc-02cd95a3e751;mut_shrink;2020-02-20 17:59:43,980989;END!
PLE;EVAL;2020-02-20 17:59:40,358019;6.168254375457764;6.153544580000016;(0.5408274659137927, -2);9081f2a4-7a7c-47f8-8367-45380bdccae1;DecisionTreeClassifier(Normalizer(data, Normalizer.norm='max'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20);2020-02-20 17:59:46,837324;END!
PLE;RMV_IND;Individual 48811b3e-0a50-4a5a-9e9b-1a91e8cff2d3
Pipeline: BernoulliNB(data, alpha=10.0, fit_prior=False)
Fitness: Fitness(values=(0.524587828942576, -1), start_time=datetime.datetime(2020, 2, 20, 17, 44, 3, 374374), wallclock_time=5.153960227966309, process_time=5.1408445029999825);2020-02-20 17:59:46,839051;END!
PLE;IND_MUT;cb165edb-f583-43a4-abc6-255a7be4456e;fdc8c0fe-40d7-4694-9ae6-67bf13a0337b;mut_replace_terminal;2020-02-20 17:59:46,841172;END!
PLE;EVAL;2020-02-20 17:59:43,944079;6.129803657531738;6.113938284999904;(0.570014578813228, -2);084c86b5-9d98-49e9-9e94-ea3c735c8a29;DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=1, min_samples_split=18);2020-02-20 17:59:50,487588;END!
PLE;RMV_IND;Individual 9081f2a4-7a7c-47f8-8367-45380bdccae1
Pipeline: DecisionTreeClassifier(Normalizer(data, Normalizer.norm='max'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20)
Fitness: Fitness(values=(0.5408274659137927, -2), start_time=datetime.datetime(2020, 2, 20, 17, 59, 40, 358019), wallclock_time=6.168254375457764, process_time=6.153544580000016);2020-02-20 17:59:50,489344;END!
PLE;IND_MUT;deab9f35-c164-4531-aff1-1673f03a98d7;c06ddc5d-7fe6-442d-b066-1f3e5a9ed8c0;mut_replace_terminal;2020-02-20 17:59:50,491485;END!
PLE;EVAL;2020-02-20 17:58:54,523894;58.583685874938965;58.43255266599999;(0.6572248410406005, -1);0b724031-e30d-4666-b48d-db820aed1366;GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.45, GradientBoostingClassifier.min_samples_leaf=19, GradientBoostingClassifier.min_samples_split=13, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.45);2020-02-20 17:59:53,437247;END!
PLE;RMV_IND;Individual 214e746f-2563-453b-b6d3-7021fc30e304
Pipeline: BernoulliNB(data, alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(0.524587828942576, -1), start_time=datetime.datetime(2020, 2, 20, 17, 54, 15, 52917), wallclock_time=5.102531433105469, process_time=5.089971818000095);2020-02-20 17:59:53,439001;END!
PLE;IND_CX;a83383c4-6997-4937-9b08-c3f9eeb220b0;d3df0ba7-96e9-451d-9c4a-0e53a67841ea;084c86b5-9d98-49e9-9e94-ea3c735c8a29;2020-02-20 17:59:53,441161;END!
PLE;EVAL;2020-02-20 17:59:14,686796;38.916502237319946;38.81441956399999;(0.5029093893596203, -2);b320ad7e-8271-409b-abc1-575b7639d112;DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20);2020-02-20 17:59:53,838497;END!
PLE;RMV_IND;Individual b320ad7e-8271-409b-abc1-575b7639d112
Pipeline: DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.2), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20)
Fitness: Fitness(values=(0.5029093893596203, -2), start_time=datetime.datetime(2020, 2, 20, 17, 59, 14, 686796), wallclock_time=38.916502237319946, process_time=38.81441956399999);2020-02-20 17:59:53,840406;END!
PLE;IND_MUT;f9b59f79-13fd-419b-a8ca-de5f71bc98df;3aa7ba5e-432b-4858-99fb-b98e1618e63a;mut_replace_primitive;2020-02-20 17:59:53,842628;END!
PLE;EVAL;2020-02-20 17:59:46,783898;10.144597053527832;10.119956983000066;(0.5820077093760552, -1);16b3e094-2bc3-4e3c-8a04-7fe3716f4e67;LogisticRegression(data, LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 17:59:57,250999;END!
PLE;RMV_IND;Individual f79ca184-79bc-40c8-a6c2-3bc23e19f525
Pipeline: BernoulliNB(data, alpha=10.0, fit_prior=True)
Fitness: Fitness(values=(0.524587828942576, -1), start_time=datetime.datetime(2020, 2, 20, 17, 54, 15, 902298), wallclock_time=5.285461187362671, process_time=5.272042321000072);2020-02-20 17:59:57,252825;END!
PLE;IND_MUT;2a9f8168-4956-4bde-b94d-c5fb3d83aadc;084c86b5-9d98-49e9-9e94-ea3c735c8a29;mut_insert;2020-02-20 17:59:57,255056;END!
PLE;EVAL;2020-02-20 17:59:53,776396;4.68540358543396;4.673501335000083;(0.5000012963621521, -3);03bab2b0-aa73-4312-a195-929033d36853;DecisionTreeClassifier(Binarizer(VarianceThreshold(data, VarianceThreshold.threshold=0.4), Binarizer.threshold=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11);2020-02-20 17:59:58,693161;END!
PLE;RMV_IND;Individual 03bab2b0-aa73-4312-a195-929033d36853
Pipeline: DecisionTreeClassifier(Binarizer(VarianceThreshold(data, VarianceThreshold.threshold=0.4), Binarizer.threshold=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11)
Fitness: Fitness(values=(0.5000012963621521, -3), start_time=datetime.datetime(2020, 2, 20, 17, 59, 53, 776396), wallclock_time=4.68540358543396, process_time=4.673501335000083);2020-02-20 17:59:58,694826;END!
PLE;IND_MUT;4bd1f51b-c236-47b2-b6eb-113ab2a7d5fc;55a6f2bd-b943-474b-8c77-9a0d03882c1f;mut_insert;2020-02-20 17:59:58,697047;END!
PLE;EVAL;2020-02-20 17:59:50,366015;14.879121780395508;14.84073171;(0.6301333083093119, -1);ffa946bb-722c-4af5-bfc8-66b5113a7fe2;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=2, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 18:00:08,501263;END!
PLE;RMV_IND;Individual 084c86b5-9d98-49e9-9e94-ea3c735c8a29
Pipeline: DecisionTreeClassifier(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=1, min_samples_split=18)
Fitness: Fitness(values=(0.570014578813228, -2), start_time=datetime.datetime(2020, 2, 20, 17, 59, 43, 944079), wallclock_time=6.129803657531738, process_time=6.113938284999904);2020-02-20 18:00:08,502794;END!
PLE;IND_MUT;350dca43-50df-4345-8e6e-377279707f0d;16b3e094-2bc3-4e3c-8a04-7fe3716f4e67;mut_insert;2020-02-20 18:00:08,504844;END!
PLE;EVAL;2020-02-20 17:59:57,223766;9.260913372039795;9.237568617999841;(0.5797531543182375, -1);375b4e99-7679-40bc-b4d7-8e6b15418b00;LogisticRegression(data, LogisticRegression.C=0.001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 18:00:08,760221;END!
PLE;RMV_IND;Individual 9c334f4f-e8c6-4250-ab58-f13922922420
Pipeline: BernoulliNB(data, alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(0.5245887465974972, -1), start_time=datetime.datetime(2020, 2, 20, 17, 36, 31, 793520), wallclock_time=5.709716558456421, process_time=5.695463252);2020-02-20 18:00:08,761927;END!
PLE;IND_MUT;d0ed3439-5c2e-4810-8bc3-12495b8e6130;28c13d29-e266-4fd4-a690-c4960c1e5fc6;mut_replace_terminal;2020-02-20 18:00:08,763981;END!
PLE;EVAL;2020-02-20 17:54:09,709597;360.4650011062622;359.5259327030001;(-inf, -2);c785ad56-52e4-4aae-be53-e99875001d8e;ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=8, min_samples_split=14, ExtraTreesClassifier.n_estimators=100);2020-02-20 18:00:10,437189;END!
PLE;EVAL_TO;2020-02-20 17:54:09,709800;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', MaxAbsScaler(c...                 ExtraTreesClassifier(bootstrap=False, class_weight=None,                                      criterion='entropy', max_depth=None,                                      max_features=1.0, max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=8, min_samples_split=14,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);2020-02-20 18:00:10,170013;END!
PLE;RMV_IND;Individual c785ad56-52e4-4aae-be53-e99875001d8e
Pipeline: ExtraTreesClassifier(MaxAbsScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=1.0, min_samples_leaf=8, min_samples_split=14, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 54, 9, 709597), wallclock_time=360.4650011062622, process_time=359.5259327030001);2020-02-20 18:00:10,438257;END!
PLE;IND_MUT;14d1de10-a4f3-4f04-b2a1-5b65e2cadd28;16b3e094-2bc3-4e3c-8a04-7fe3716f4e67;mut_insert;2020-02-20 18:00:10,440317;END!
PLE;EVAL;2020-02-20 17:59:58,590955;13.016848087310791;12.982641650000005;(0.6034181176473212, -3);4745b975-8719-4ee8-b3e4-bcef0392e7c1;DecisionTreeClassifier(FeatureAgglomeration(StandardScaler(data), FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20);2020-02-20 18:00:11,798456;END!
PLE;RMV_IND;Individual 4745b975-8719-4ee8-b3e4-bcef0392e7c1
Pipeline: DecisionTreeClassifier(FeatureAgglomeration(StandardScaler(data), FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=19, min_samples_split=20)
Fitness: Fitness(values=(0.6034181176473212, -3), start_time=datetime.datetime(2020, 2, 20, 17, 59, 58, 590955), wallclock_time=13.016848087310791, process_time=12.982641650000005);2020-02-20 18:00:11,805276;END!
PLE;IND_MUT;eca522bd-bc53-4b67-972b-04f78b004822;a64da21e-e58b-4f4f-86e1-cb3e9bc61e77;mut_replace_primitive;2020-02-20 18:00:11,807498;END!
PLE;EVAL;2020-02-20 18:00:07,831846;5.938094139099121;5.923878996999974;(0.6530070116620043, -2);82cfea6c-496f-415f-b862-792b174fe6d6;BernoulliNB(StandardScaler(data), alpha=100.0, fit_prior=True);2020-02-20 18:00:14,076848;END!
PLE;RMV_IND;Individual ae2b8de1-34cb-4ee3-83ce-17d3862d1d02
Pipeline: BernoulliNB(data, alpha=1.0, fit_prior=True)
Fitness: Fitness(values=(0.5245887465974972, -1), start_time=datetime.datetime(2020, 2, 20, 17, 36, 48, 938147), wallclock_time=5.531259059906006, process_time=5.516821586999999);2020-02-20 18:00:14,078615;END!
PLE;IND_MUT;d6dcb058-93b0-4cc6-9f6f-5166c8b9d515;4a3aa338-76b5-4dff-8e22-f341c0f6bb5a;mut_insert;2020-02-20 18:00:14,080750;END!
PLE;EVAL;2020-02-20 18:00:07,120970;10.187215805053711;10.160797203999891;(0.6871624743772002, -1);84e7cc03-ac77-4d75-b14a-b7d8de51365e;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=15, min_samples_split=16);2020-02-20 18:00:17,601994;END!
PLE;RMV_IND;Individual 62e0c681-7662-4a51-8301-cceeda711816
Pipeline: KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')
Fitness: Fitness(values=(0.6492280120936806, -2), start_time=datetime.datetime(2020, 2, 20, 17, 36, 37, 880539), wallclock_time=24.90688133239746, process_time=24.839037457000003);2020-02-20 18:00:17,603894;END!
PLE;IND_MUT;5458d2b9-46ee-49a5-98dc-1272e1f8583c;dc7342c0-69ef-44ff-9c68-a9e9c9a8ac09;mut_shrink;2020-02-20 18:00:17,605992;END!
PLE;EVAL;2020-02-20 18:00:11,794774;6.433784484863281;6.41765313399992;(0.6238281246742606, -3);4ed6548e-fa7e-440d-a701-6bb31771eedf;DecisionTreeClassifier(SelectPercentile(Binarizer(data, Binarizer.threshold=0.5), SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11);2020-02-20 18:00:18,464028;END!
PLE;RMV_IND;Individual 4ed6548e-fa7e-440d-a701-6bb31771eedf
Pipeline: DecisionTreeClassifier(SelectPercentile(Binarizer(data, Binarizer.threshold=0.5), SelectPercentile.percentile=88, SelectPercentile.score_func=f_classif), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11)
Fitness: Fitness(values=(0.6238281246742606, -3), start_time=datetime.datetime(2020, 2, 20, 18, 0, 11, 794774), wallclock_time=6.433784484863281, process_time=6.41765313399992);2020-02-20 18:00:18,466040;END!
PLE;IND_MUT;e6a6e9e9-650a-4aac-8cac-95659d5a9ac4;fdc8c0fe-40d7-4694-9ae6-67bf13a0337b;mut_insert;2020-02-20 18:00:18,468209;END!
PLE;EVAL;2020-02-20 18:00:10,377936;9.527661085128784;9.503223270000035;(0.6795335934625245, -2);ccda2944-472f-4c72-b0ca-55d97c7fa7bc;LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 18:00:20,185899;END!
PLE;RMV_IND;Individual 01a2be98-b367-4658-9e5f-68286c2954d1
Pipeline: BernoulliNB(data, alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(0.5245887465974972, -1), start_time=datetime.datetime(2020, 2, 20, 17, 37, 36, 193238), wallclock_time=5.202571868896484, process_time=5.1896744829999975);2020-02-20 18:00:20,187750;END!
PLE;IND_MUT;be82ecb3-fe7a-46aa-bffa-6cc6a6f6564e;829232c5-938f-4039-81b8-6e36a6d0333f;mut_replace_primitive;2020-02-20 18:00:20,189895;END!
PLE;EVAL;2020-02-20 18:00:17,531362;5.0276665687561035;5.014906691000078;(0.662709306943867, -1);0f86f37e-be87-4d10-abfc-e2a176535ac9;GaussianNB(data);2020-02-20 18:00:22,775769;END!
PLE;RMV_IND;Individual e71735b7-2b84-46c8-88cb-a3bd6759fddd
Pipeline: BernoulliNB(data, alpha=1.0, fit_prior=False)
Fitness: Fitness(values=(0.5245887465974972, -1), start_time=datetime.datetime(2020, 2, 20, 17, 48, 3, 308034), wallclock_time=5.1512627601623535, process_time=5.138219872000036);2020-02-20 18:00:22,777678;END!
PLE;IND_MUT;25a12511-0ab8-48b4-ad49-317604cf3a1b;16b3e094-2bc3-4e3c-8a04-7fe3716f4e67;mut_replace_primitive;2020-02-20 18:00:22,779898;END!
PLE;EVAL;2020-02-20 17:54:25,690862;360.77218794822693;359.86282382299987;(-inf, -2);e280ff7a-f1a1-43c9-9ed5-245165094850;ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100);2020-02-20 18:00:26,711803;END!
PLE;EVAL_TO;2020-02-20 17:54:25,691093;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', StandardScaler...                 ExtraTreesClassifier(bootstrap=False, class_weight=None,                                      criterion='gini', max_depth=None,                                      max_features=0.8500000000000001,                                      max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=4, min_samples_split=9,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);2020-02-20 18:00:26,458256;END!
PLE;RMV_IND;Individual e280ff7a-f1a1-43c9-9ed5-245165094850
Pipeline: ExtraTreesClassifier(StandardScaler(data), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=4, min_samples_split=9, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 54, 25, 690862), wallclock_time=360.77218794822693, process_time=359.86282382299987);2020-02-20 18:00:26,713375;END!
PLE;IND_MUT;006a7861-a995-4640-b5d2-e4e478ec22e2;c0bbbb23-d6c5-46cd-954d-429b186f6be3;mut_insert;2020-02-20 18:00:26,715485;END!
PLE;EVAL;2020-02-20 18:00:20,130932;10.148545503616333;10.122176683999896;(0.6293231892350488, -2);fbc10ceb-fd68-4c45-b930-54a25254f736;KNeighborsClassifier(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=2, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 18:00:31,591076;END!
PLE;RMV_IND;Individual fbc10ceb-fd68-4c45-b930-54a25254f736
Pipeline: KNeighborsClassifier(SelectPercentile(data, SelectPercentile.percentile=31, SelectPercentile.score_func=f_classif), KNeighborsClassifier.n_neighbors=2, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')
Fitness: Fitness(values=(0.6293231892350488, -2), start_time=datetime.datetime(2020, 2, 20, 18, 0, 20, 130932), wallclock_time=10.148545503616333, process_time=10.122176683999896);2020-02-20 18:00:31,593666;END!
PLE;IND_MUT;54f1461a-e374-437a-a951-675dea0fe32d;9cff1e45-c0ed-437a-9f11-906b86f0ac17;mut_insert;2020-02-20 18:00:31,595840;END!
PLE;EVAL;2020-02-20 18:00:22,799848;10.166670560836792;10.140395191000152;(0.6871521370724175, -1);777ade34-55b3-4272-806d-e79a2a3686f6;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=8);2020-02-20 18:00:33,290252;END!
PLE;RMV_IND;Individual a38f5c67-86cc-4868-a9b0-30a6b8e19450
Pipeline: BernoulliNB(RobustScaler(data), alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(0.6523725451542948, -2), start_time=datetime.datetime(2020, 2, 20, 17, 49, 11, 514807), wallclock_time=6.022466659545898, process_time=6.005919916999915);2020-02-20 18:00:33,292100;END!
PLE;IND_MUT;deb8893e-fb47-4a79-8eca-08f42b43cb86;605ce055-4108-4d6a-8b6e-050e0efeca62;mut_replace_primitive;2020-02-20 18:00:33,294228;END!
PLE;EVAL;2020-02-20 18:00:31,040415;4.701835870742798;4.689877864999971;(0.5551450415240001, -1);4845fc45-0bf6-4f32-b9ce-050d7bb61e6f;MultinomialNB(data, alpha=0.01, fit_prior=False);2020-02-20 18:00:36,041494;END!
PLE;RMV_IND;Individual 82cfea6c-496f-415f-b862-792b174fe6d6
Pipeline: BernoulliNB(StandardScaler(data), alpha=100.0, fit_prior=True)
Fitness: Fitness(values=(0.6530070116620043, -2), start_time=datetime.datetime(2020, 2, 20, 18, 0, 7, 831846), wallclock_time=5.938094139099121, process_time=5.923878996999974);2020-02-20 18:00:36,043359;END!
PLE;IND_MUT;d5709c1a-423e-4e31-904a-22f3ef259766;e64df28f-382e-496e-be67-72478a3b3527;mut_replace_primitive;2020-02-20 18:00:36,045564;END!
PLE;EVAL;2020-02-20 18:00:33,215639;4.755681753158569;4.743131291000054;(0.5551450389386454, -1);44327d37-f159-4092-924b-6da3e2b97986;MultinomialNB(data, alpha=1.0, fit_prior=False);2020-02-20 18:00:38,290503;END!
PLE;RMV_IND;Individual d12a8d06-1fa5-4127-ab75-c60cb3c76987
Pipeline: BernoulliNB(data, alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(0.5245887465974972, -1), start_time=datetime.datetime(2020, 2, 20, 17, 54, 11, 73805), wallclock_time=5.0520360469818115, process_time=5.03853171500009);2020-02-20 18:00:38,292302;END!
PLE;IND_MUT;8d45140c-0b69-49bc-b396-62857597f2a9;0967b7f1-032b-48b0-afeb-a66d64a9e459;mut_shrink;2020-02-20 18:00:38,294552;END!
PLE;EVAL;2020-02-20 18:00:38,200148;5.326851844787598;5.3129212060000555;(0.5980415055380628, -1);62e49cca-96e1-4a11-a931-a00acd5d57e8;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=8, min_samples_split=18);2020-02-20 18:00:43,824064;END!
PLE;RMV_IND;Individual 28c13d29-e266-4fd4-a690-c4960c1e5fc6
Pipeline: BernoulliNB(data, alpha=1.0, fit_prior=True)
Fitness: Fitness(values=(0.5245887465974972, -1), start_time=datetime.datetime(2020, 2, 20, 17, 58, 59, 56344), wallclock_time=4.910948276519775, process_time=4.898000721000017);2020-02-20 18:00:43,826015;END!
PLE;IND_MUT;8a628e46-b571-4cab-ad51-756ab6524bb5;3aa7ba5e-432b-4858-99fb-b98e1618e63a;mut_replace_primitive;2020-02-20 18:00:43,828201;END!
PLE;EVAL;2020-02-20 18:00:35,978100;10.944701910018921;10.91563331999987;(0.6906981688979934, -1);ae38221b-5031-4ebf-9226-181ddbc89fc8;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=7);2020-02-20 18:00:47,215673;END!
PLE;RMV_IND;Individual 3aa7ba5e-432b-4858-99fb-b98e1618e63a
Pipeline: ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=19, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(0.6533597296012981, -2), start_time=datetime.datetime(2020, 2, 20, 17, 58, 8, 71257), wallclock_time=65.49883246421814, process_time=65.32360343699997);2020-02-20 18:00:47,217439;END!
PLE;IND_MUT;5c863c59-8d5a-4e32-9701-cb124475e51b;72e117a7-8f39-42f6-810a-7653e0cb7e9a;mut_replace_terminal;2020-02-20 18:00:47,219537;END!
PLE;EVAL;2020-02-20 18:00:43,753673;5.070577621459961;5.057706338000116;(0.5551617434181843, -2);66815b2a-455d-4c36-b2b7-4203f16f1b62;MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True);2020-02-20 18:00:49,051771;END!
PLE;RMV_IND;Individual 72e117a7-8f39-42f6-810a-7653e0cb7e9a
Pipeline: MultinomialNB(data, alpha=10.0, fit_prior=False)
Fitness: Fitness(values=(0.5551450190374263, -1), start_time=datetime.datetime(2020, 2, 20, 17, 51, 13, 612860), wallclock_time=4.7218403816223145, process_time=4.709794391999935);2020-02-20 18:00:49,053760;END!
PLE;IND_MUT;32702e6a-35ae-4482-8724-94fe15eca6b8;8d6a812a-705a-4563-ad80-c33cb0135c90;mut_replace_primitive;2020-02-20 18:00:49,055902;END!
PLE;EVAL;2020-02-20 18:00:49,067944;10.122120380401611;10.095949960000098;(0.6873891117285201, -1);ec366938-2c33-46f0-be64-54b3705cb668;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=9);2020-02-20 18:00:59,407380;END!
PLE;RMV_IND;Individual 66815b2a-455d-4c36-b2b7-4203f16f1b62
Pipeline: MultinomialNB(SelectFwe(data, SelectFwe.alpha=0.005, SelectFwe.score_func=f_classif), alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(0.5551617434181843, -2), start_time=datetime.datetime(2020, 2, 20, 18, 0, 43, 753673), wallclock_time=5.070577621459961, process_time=5.057706338000116);2020-02-20 18:00:59,409823;END!
PLE;IND_MUT;25fd3e00-98d2-44b2-8658-d44ef89d90a7;84e7cc03-ac77-4d75-b14a-b7d8de51365e;mut_insert;2020-02-20 18:00:59,411999;END!
PLE;EVAL;2020-02-20 18:00:59,435623;5.729526996612549;5.71464805200003;(0.5980415055380628, -2);0ba8cf99-8fd9-434e-b92a-e725e82a290e;DecisionTreeClassifier(StandardScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=14, min_samples_split=20);2020-02-20 18:01:05,459033;END!
PLE;RMV_IND;Individual b7434476-e3be-45c4-8964-835f2045b081
Pipeline: MultinomialNB(data, alpha=10.0, fit_prior=False)
Fitness: Fitness(values=(0.5551450190374263, -1), start_time=datetime.datetime(2020, 2, 20, 17, 53, 56, 846249), wallclock_time=4.75495457649231, process_time=4.742760462999968);2020-02-20 18:01:05,460539;END!
PLE;IND_MUT;313f768e-52b0-4948-baa9-764681ce3214;0f86f37e-be87-4d10-abfc-e2a176535ac9;mut_replace_primitive;2020-02-20 18:01:05,462643;END!
PLE;EVAL;2020-02-20 18:01:05,385918;4.979883432388306;4.952624357000104;(0.662709306943867, -1);94be7e14-cbd3-4ba9-ada5-35f8bde2aef1;GaussianNB(data);2020-02-20 18:01:10,597594;END!
PLE;RMV_IND;Individual 8bc89862-cb8a-46de-938b-25dbf1b60dc5
Pipeline: MultinomialNB(data, alpha=10.0, fit_prior=False)
Fitness: Fitness(values=(0.5551450190374263, -1), start_time=datetime.datetime(2020, 2, 20, 17, 54, 20, 344497), wallclock_time=5.137072324752808, process_time=5.123939807999932);2020-02-20 18:01:10,599458;END!
PLE;IND_MUT;ff7d7702-c5ac-493e-9a52-6b8d9af3cf7c;375b4e99-7679-40bc-b4d7-8e6b15418b00;mut_replace_primitive;2020-02-20 18:01:10,601580;END!
PLE;EVAL;2020-02-20 18:00:47,155158;37.264002561569214;37.16794400499998;(0.6191081322561094, -1);96ee4703-19fd-4a97-b681-2ac8067b8527;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance');2020-02-20 18:01:27,430434;END!
PLE;RMV_IND;Individual 44327d37-f159-4092-924b-6da3e2b97986
Pipeline: MultinomialNB(data, alpha=1.0, fit_prior=False)
Fitness: Fitness(values=(0.5551450389386454, -1), start_time=datetime.datetime(2020, 2, 20, 18, 0, 33, 215639), wallclock_time=4.755681753158569, process_time=4.743131291000054);2020-02-20 18:01:27,432078;END!
PLE;IND_MUT;d6a20251-d85a-436d-8223-0c29c48d7972;c0bbbb23-d6c5-46cd-954d-429b186f6be3;mut_replace_primitive;2020-02-20 18:01:27,434290;END!
PLE;EVAL;2020-02-20 18:01:26,007427;10.05164647102356;10.025949737000019;(0.6873891117285201, -1);8d79dd9e-0c32-4de8-93c1-d1da403c2a33;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=13, min_samples_split=9);2020-02-20 18:01:36,345709;END!
PLE;RMV_IND;Individual 0ba8cf99-8fd9-434e-b92a-e725e82a290e
Pipeline: DecisionTreeClassifier(StandardScaler(data), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=14, min_samples_split=20)
Fitness: Fitness(values=(0.5980415055380628, -2), start_time=datetime.datetime(2020, 2, 20, 18, 0, 59, 435623), wallclock_time=5.729526996612549, process_time=5.71464805200003);2020-02-20 18:01:36,347344;END!
PLE;IND_MUT;f5220ec2-569e-417e-87f6-f88eb0505515;d3df0ba7-96e9-451d-9c4a-0e53a67841ea;mut_replace_primitive;2020-02-20 18:01:36,349733;END!
PLE;EVAL;2020-02-20 18:00:18,401636;77.95542979240417;77.75448926900003;(0.6997962353028082, -2);0e772a37-4c26-47c3-ba21-9b40c176ffc7;ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=9, min_samples_split=12, ExtraTreesClassifier.n_estimators=100);2020-02-20 18:01:41,777739;END!
PLE;RMV_IND;Individual d3df0ba7-96e9-451d-9c4a-0e53a67841ea
Pipeline: GaussianNB(RobustScaler(data))
Fitness: Fitness(values=(0.6595050247201006, -2), start_time=datetime.datetime(2020, 2, 20, 17, 52, 43, 373059), wallclock_time=5.992561101913452, process_time=5.977882323000017);2020-02-20 18:01:41,779734;END!
PLE;IND_CX;c187f66d-e23f-4b70-bca6-071caf6b97d0;ffa946bb-722c-4af5-bfc8-66b5113a7fe2;c06ddc5d-7fe6-442d-b066-1f3e5a9ed8c0;2020-02-20 18:01:41,781887;END!
PLE;EVAL;2020-02-20 18:01:40,410211;6.145893096923828;6.130821379000054;(0.6778718484655304, -3);a80288c2-c8e4-4663-8731-406643901821;LogisticRegression(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif)), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 18:01:46,793158;END!
PLE;RMV_IND;Individual a80288c2-c8e4-4663-8731-406643901821
Pipeline: LogisticRegression(StandardScaler(SelectPercentile(data, SelectPercentile.percentile=43, SelectPercentile.score_func=f_classif)), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.6778718484655304, -3), start_time=datetime.datetime(2020, 2, 20, 18, 1, 40, 410211), wallclock_time=6.145893096923828, process_time=6.130821379000054);2020-02-20 18:01:46,795077;END!
PLE;IND_MUT;0b1bc041-5096-445d-8b57-b0c005dfee0d;fdc8c0fe-40d7-4694-9ae6-67bf13a0337b;mut_replace_primitive;2020-02-20 18:01:46,797318;END!
PLE;EVAL;2020-02-20 18:01:46,740254;1.4941303730010986;1.4896378099999765;(-inf, -3);12ff5747-5af6-4a48-9aec-78dcd6440c49;DecisionTreeClassifier(Binarizer(FastICA(data, FastICA.tol=0.30000000000000004), Binarizer.threshold=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11);2020-02-20 18:01:48,425199;END!
PLE;EVAL_ERR;2020-02-20 18:01:46,740484;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2',                 FastICA(algori...                         tol=0.30000000000000004, w_init=None, whiten=True)),                ('1', Binarizer(copy=True, threshold=0.5)),                ('0',                 DecisionTreeClassifier(class_weight=None, criterion='entropy',                                        max_depth=8, max_features=None,                                        max_leaf_nodes=None,                                        min_impurity_decrease=0.0,                                        min_impurity_split=None,                                        min_samples_leaf=2,                                        min_samples_split=11,                                        min_weight_fraction_leaf=0.0,                                        presort=False, random_state=None,                                        splitter='best'))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 18:01:48,234220;END!
PLE;RMV_IND;Individual 12ff5747-5af6-4a48-9aec-78dcd6440c49
Pipeline: DecisionTreeClassifier(Binarizer(FastICA(data, FastICA.tol=0.30000000000000004), Binarizer.threshold=0.5), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11)
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 18, 1, 46, 740254), wallclock_time=1.4941303730010986, process_time=1.4896378099999765);2020-02-20 18:01:48,426256;END!
PLE;IND_MUT;d4766b48-cd0c-4aea-ac62-da7c29cca437;777ade34-55b3-4272-806d-e79a2a3686f6;mut_replace_terminal;2020-02-20 18:01:48,428341;END!
PLE;EVAL;2020-02-20 18:01:48,401017;1.494128942489624;1.4895581729999776;(-inf, -2);c7965b2e-4e70-4fc7-ba6c-4a600b151e12;MultinomialNB(FastICA(data, FastICA.tol=0.25), alpha=0.1, fit_prior=True);2020-02-20 18:01:50,104081;END!
PLE;EVAL_ERR;2020-02-20 18:01:48,401194;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FastICA(algorithm='parallel', fun='logcosh', fun_args=None,                         max_iter=200, n_components=None, random_state=None,                         tol=0.25, w_init=None, whiten=True)),                ('0',                 MultinomialNB(alpha=0.1, class_prior=None, fit_prior=True))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 18:01:49,895019;END!
PLE;RMV_IND;Individual c7965b2e-4e70-4fc7-ba6c-4a600b151e12
Pipeline: MultinomialNB(FastICA(data, FastICA.tol=0.25), alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 18, 1, 48, 401017), wallclock_time=1.494128942489624, process_time=1.4895581729999776);2020-02-20 18:01:50,105124;END!
PLE;IND_MUT;d8e5e322-e6e0-439d-8865-e239651919fc;fdc8c0fe-40d7-4694-9ae6-67bf13a0337b;mut_insert;2020-02-20 18:01:50,107183;END!
PLE;EVAL;2020-02-20 18:00:14,004081;106.25688219070435;105.99597172200015;(0.6237903386065129, -2);7ec1c0fc-d502-4745-9722-8595a9d73062;ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=20, min_samples_split=10, ExtraTreesClassifier.n_estimators=100);2020-02-20 18:02:00,607069;END!
PLE;RMV_IND;Individual 7ec1c0fc-d502-4745-9722-8595a9d73062
Pipeline: ExtraTreesClassifier(Binarizer(data, Binarizer.threshold=0.5), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.6500000000000001, min_samples_leaf=20, min_samples_split=10, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(0.6237903386065129, -2), start_time=datetime.datetime(2020, 2, 20, 18, 0, 14, 4081), wallclock_time=106.25688219070435, process_time=105.99597172200015);2020-02-20 18:02:00,609138;END!
PLE;IND_MUT;27ec99e9-e05a-4bbf-b2dd-0c56584b6643;0bd5b044-9209-413b-adb3-f988747f099b;mut_insert;2020-02-20 18:02:00,611325;END!
PLE;EVAL;2020-02-20 18:01:50,053642;55.99645686149597;55.86091381799997;(0.6550803304655466, -1);9abc873b-0abc-43a8-bc14-b2623132db02;GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=1, GradientBoostingClassifier.max_features=0.55, GradientBoostingClassifier.min_samples_leaf=1, GradientBoostingClassifier.min_samples_split=6, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.9000000000000001);2020-02-20 18:02:46,341412;END!
PLE;RMV_IND;Individual c0bbbb23-d6c5-46cd-954d-429b186f6be3
Pipeline: GradientBoostingClassifier(StandardScaler(data), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)
Fitness: Fitness(values=(0.676838434422649, -2), start_time=datetime.datetime(2020, 2, 20, 17, 37, 1, 931326), wallclock_time=265.9923152923584, process_time=265.31700008900003);2020-02-20 18:02:46,343025;END!
PLE;IND_MUT;e000a757-26b8-4a79-98bf-3f94a74296e6;375b4e99-7679-40bc-b4d7-8e6b15418b00;mut_replace_primitive;2020-02-20 18:02:46,345056;END!
PLE;EVAL;2020-02-20 17:55:20,560204;446.3972029685974;445.21546282500003;(-inf, -2);6bc50e21-2862-45e7-97c1-9d42e5a7b362;KNeighborsClassifier(StandardScaler(data), KNeighborsClassifier.n_neighbors=32, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance');2020-02-20 18:02:47,244502;END!
PLE;EVAL_TO;2020-02-20 17:55:20,560408;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', StandardScaler(copy=True, with_mean=True, with_std=True)),                ('0',                 KNeighborsClassifier(algorithm='auto', leaf_size=30,                                      metric='minkowski', metric_params=None,                                      n_jobs=None, n_neighbors=32, p=1,                                      weights='distance'))],         verbose=False);2020-02-20 18:02:46,953326;END!
PLE;RMV_IND;Individual 6bc50e21-2862-45e7-97c1-9d42e5a7b362
Pipeline: KNeighborsClassifier(StandardScaler(data), KNeighborsClassifier.n_neighbors=32, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 55, 20, 560204), wallclock_time=446.3972029685974, process_time=445.21546282500003);2020-02-20 18:02:47,245661;END!
PLE;IND_MUT;38ac8510-79f2-4964-ac72-52aac5abebe4;777ade34-55b3-4272-806d-e79a2a3686f6;mut_replace_terminal;2020-02-20 18:02:47,247739;END!
PLE;EVAL;2020-02-20 18:02:46,248225;5.117872953414917;5.105002373000161;(0.6207528517815875, -2);18effe4e-01b2-4793-9b65-175f02eb706e;MultinomialNB(Binarizer(data, Binarizer.threshold=0.5), alpha=0.01, fit_prior=False);2020-02-20 18:02:51,601995;END!
PLE;RMV_IND;Individual 18effe4e-01b2-4793-9b65-175f02eb706e
Pipeline: MultinomialNB(Binarizer(data, Binarizer.threshold=0.5), alpha=0.01, fit_prior=False)
Fitness: Fitness(values=(0.6207528517815875, -2), start_time=datetime.datetime(2020, 2, 20, 18, 2, 46, 248225), wallclock_time=5.117872953414917, process_time=5.105002373000161);2020-02-20 18:02:51,603840;END!
PLE;IND_MUT;e5333489-54c9-41f0-8e58-48d2c12f1d55;777ade34-55b3-4272-806d-e79a2a3686f6;mut_replace_primitive;2020-02-20 18:02:51,606073;END!
PLE;EVAL;2020-02-20 18:02:47,191098;15.585930585861206;15.546079013000053;(0.6301333083093119, -1);40d59a24-dd0e-48dd-8655-a650f9194be2;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=2, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 18:03:05,855105;END!
PLE;RMV_IND;Individual dca0ba59-53da-489a-b63c-eb3fe9b4936b
Pipeline: MultinomialNB(data, alpha=0.1, fit_prior=False)
Fitness: Fitness(values=(0.5551450415068218, -1), start_time=datetime.datetime(2020, 2, 20, 17, 54, 1, 824151), wallclock_time=4.792962312698364, process_time=4.78017636300001);2020-02-20 18:03:05,857016;END!
PLE;IND_MUT;abf6feea-bbea-4b4f-8fee-4f7f05324908;ccda2944-472f-4c72-b0ca-55d97c7fa7bc;mut_replace_terminal;2020-02-20 18:03:05,859155;END!
PLE;EVAL;2020-02-20 18:03:04,435518;16.590906381607056;16.55016733299999;(0.6212172521289525, -1);b94ce806-8cce-47ba-92ce-1eb05a0eb109;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=7, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance');2020-02-20 18:03:24,095249;END!
PLE;RMV_IND;Individual 605ce055-4108-4d6a-8b6e-050e0efeca62
Pipeline: MultinomialNB(data, alpha=0.01, fit_prior=False)
Fitness: Fitness(values=(0.5551450415240001, -1), start_time=datetime.datetime(2020, 2, 20, 17, 51, 11, 144624), wallclock_time=5.09210467338562, process_time=5.079123740999989);2020-02-20 18:03:24,096864;END!
PLE;IND_MUT;05981a76-a2e1-420b-890a-2841bf21c9fc;4845fc45-0bf6-4f32-b9ce-050d7bb61e6f;mut_insert;2020-02-20 18:03:24,098894;END!
PLE;EVAL;2020-02-20 18:03:22,672652;5.295696973800659;5.283102178000036;(0.6626833446911722, -2);a55d780c-f265-4a70-8034-ce4a29769c24;GaussianNB(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif));2020-02-20 18:03:28,196234;END!
PLE;RMV_IND;Individual a55d780c-f265-4a70-8034-ce4a29769c24
Pipeline: GaussianNB(SelectFwe(data, SelectFwe.alpha=0.008, SelectFwe.score_func=f_classif))
Fitness: Fitness(values=(0.6626833446911722, -2), start_time=datetime.datetime(2020, 2, 20, 18, 3, 22, 672652), wallclock_time=5.295696973800659, process_time=5.283102178000036);2020-02-20 18:03:28,198085;END!
PLE;IND_MUT;bd5d3f40-dbb5-481c-a2eb-231e6d080eec;0b724031-e30d-4666-b48d-db820aed1366;mut_replace_terminal;2020-02-20 18:03:28,200262;END!
PLE;EVAL;2020-02-20 18:03:28,235281;4.852999210357666;4.841447817000017;(0.5551444511268913, -1);e5d2f4e4-0a0c-4f0f-8d81-cb36a80f02b1;MultinomialNB(data, alpha=100.0, fit_prior=False);2020-02-20 18:03:33,395273;END!
PLE;RMV_IND;Individual e5d2f4e4-0a0c-4f0f-8d81-cb36a80f02b1
Pipeline: MultinomialNB(data, alpha=100.0, fit_prior=False)
Fitness: Fitness(values=(0.5551444511268913, -1), start_time=datetime.datetime(2020, 2, 20, 18, 3, 28, 235281), wallclock_time=4.852999210357666, process_time=4.841447817000017);2020-02-20 18:03:33,397329;END!
PLE;IND_MUT;5033722f-e5d3-4b69-817c-e8eae627aa23;ad9fcc16-3a17-405e-a01d-9977b37019ed;mut_replace_terminal;2020-02-20 18:03:33,399540;END!
PLE;EVAL;2020-02-20 18:03:33,351400;4.946869373321533;4.9334301960000175;(0.5551450415068218, -1);f9c0ffe6-c7dc-4f9d-bebd-854a62b5e3ac;MultinomialNB(data, alpha=0.1, fit_prior=False);2020-02-20 18:03:38,526740;END!
PLE;RMV_IND;Individual f9c0ffe6-c7dc-4f9d-bebd-854a62b5e3ac
Pipeline: MultinomialNB(data, alpha=0.1, fit_prior=False)
Fitness: Fitness(values=(0.5551450415068218, -1), start_time=datetime.datetime(2020, 2, 20, 18, 3, 33, 351400), wallclock_time=4.946869373321533, process_time=4.9334301960000175);2020-02-20 18:03:38,528537;END!
PLE;IND_MUT;1c8d95a2-fcfb-481f-be59-94805ee0ccfd;c11a66a1-9c08-40dd-bb91-c3c82792efe9;mut_replace_terminal;2020-02-20 18:03:38,530694;END!
PLE;EVAL;2020-02-20 18:01:10,611419;181.76482725143433;181.29582638300008;(0.708422244471405, -2);badeb606-9c2e-48c9-8ed7-9beb1fa68810;RandomForestClassifier(SelectPercentile(data, SelectPercentile.percentile=86, SelectPercentile.score_func=f_classif), RandomForestClassifier.bootstrap=True, RandomForestClassifier.criterion='gini', RandomForestClassifier.max_features=0.05, RandomForestClassifier.min_samples_leaf=9, RandomForestClassifier.min_samples_split=9, RandomForestClassifier.n_estimators=100);2020-02-20 18:04:20,842884;END!
PLE;RMV_IND;Individual 4845fc45-0bf6-4f32-b9ce-050d7bb61e6f
Pipeline: MultinomialNB(data, alpha=0.01, fit_prior=False)
Fitness: Fitness(values=(0.5551450415240001, -1), start_time=datetime.datetime(2020, 2, 20, 18, 0, 31, 40415), wallclock_time=4.701835870742798, process_time=4.689877864999971);2020-02-20 18:04:20,845068;END!
PLE;IND_MUT;0bdecb48-4942-46ce-a67e-3089c3879498;e64df28f-382e-496e-be67-72478a3b3527;mut_replace_primitive;2020-02-20 18:04:20,847275;END!
PLE;EVAL;2020-02-20 18:04:16,908224;28.439691066741943;28.366806074999886;(0.6687450377859311, -1);cb165edb-f583-43a4-abc6-255a7be4456e;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform');2020-02-20 18:04:48,451695;END!
PLE;RMV_IND;Individual 94f2eaab-5571-422c-9df2-8ed6ead5ceba
Pipeline: MultinomialNB(data, alpha=1.0, fit_prior=True)
Fitness: Fitness(values=(0.5551549141220024, -1), start_time=datetime.datetime(2020, 2, 20, 17, 59, 28, 5921), wallclock_time=4.686721086502075, process_time=4.674756503999788);2020-02-20 18:04:48,453320;END!
PLE;IND_MUT;bb5d14a9-34c4-4675-b7d5-7c7c90f92c80;8a612021-4080-42f7-a5dc-02cd95a3e751;mut_replace_primitive;2020-02-20 18:04:48,455400;END!
PLE;EVAL;2020-02-20 18:04:47,003987;35.29240703582764;35.20181658299998;(0.6526426533304177, -1);deab9f35-c164-4531-aff1-1673f03a98d7;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=48, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='uniform');2020-02-20 18:05:25,356924;END!
PLE;RMV_IND;Individual c11a66a1-9c08-40dd-bb91-c3c82792efe9
Pipeline: LogisticRegression(MinMaxScaler(data), LogisticRegression.C=0.1, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.6795253707288437, -2), start_time=datetime.datetime(2020, 2, 20, 17, 48, 57, 256614), wallclock_time=11.280869722366333, process_time=11.251565168999946);2020-02-20 18:05:25,358531;END!
PLE;IND_MUT;f4e348a1-b132-4fbe-b56b-e217873255dd;dc7342c0-69ef-44ff-9c68-a9e9c9a8ac09;mut_replace_primitive;2020-02-20 18:05:25,360586;END!
PLE;EVAL;2020-02-20 18:05:24,647172;5.279339551925659;5.2658992130000115;(0.5418134518169582, -2);a83383c4-6997-4937-9b08-c3f9eeb220b0;GaussianNB(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5));2020-02-20 18:05:30,347703;END!
PLE;RMV_IND;Individual a83383c4-6997-4937-9b08-c3f9eeb220b0
Pipeline: GaussianNB(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5))
Fitness: Fitness(values=(0.5418134518169582, -2), start_time=datetime.datetime(2020, 2, 20, 18, 5, 24, 647172), wallclock_time=5.279339551925659, process_time=5.2658992130000115);2020-02-20 18:05:30,349485;END!
PLE;IND_MUT;c6a1f9b3-0cf0-4e5b-9ae5-976eadeafbbf;16b3e094-2bc3-4e3c-8a04-7fe3716f4e67;mut_replace_terminal;2020-02-20 18:05:30,351634;END!
PLE;EVAL;2020-02-20 18:01:36,274037;256.8538155555725;256.1948237180002;(0.6761181305210255, -1);3ef84cab-1868-45fd-ba98-b5b3f0f97914;GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002);2020-02-20 18:05:53,513146;END!
PLE;RMV_IND;Individual dc7342c0-69ef-44ff-9c68-a9e9c9a8ac09
Pipeline: LogisticRegression(StandardScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.6795324214550773, -2), start_time=datetime.datetime(2020, 2, 20, 17, 44, 59, 330541), wallclock_time=6.634434461593628, process_time=6.6173232969999844);2020-02-20 18:05:53,515700;END!
PLE;IND_MUT;bba2bfff-f5be-4d47-8561-ecd14229fbee;badeb606-9c2e-48c9-8ed7-9beb1fa68810;mut_insert;2020-02-20 18:05:53,517849;END!
PLE;EVAL;2020-02-20 18:05:53,400200;6.236969232559204;6.220938783000065;(0.5690521653544446, -3);2a9f8168-4956-4bde-b94d-c5fb3d83aadc;DecisionTreeClassifier(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=1, min_samples_split=18);2020-02-20 18:06:00,026721;END!
PLE;RMV_IND;Individual 2a9f8168-4956-4bde-b94d-c5fb3d83aadc
Pipeline: DecisionTreeClassifier(MinMaxScaler(Nystroem(data, Nystroem.gamma=0.15000000000000002, Nystroem.kernel='polynomial', Nystroem.n_components=5)), DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=1, min_samples_leaf=1, min_samples_split=18)
Fitness: Fitness(values=(0.5690521653544446, -3), start_time=datetime.datetime(2020, 2, 20, 18, 5, 53, 400200), wallclock_time=6.236969232559204, process_time=6.220938783000065);2020-02-20 18:06:00,028586;END!
PLE;IND_MUT;1e7daea6-5eda-4e44-b175-4c6b405e1c8c;0e772a37-4c26-47c3-ba21-9b40c176ffc7;mut_insert;2020-02-20 18:06:00,030751;END!
PLE;EVAL;2020-02-20 18:00:26,793273;364.0913166999817;363.165468574;(-inf, -3);0fa66478-eefc-4e4c-9d0a-aa00398966c2;GradientBoostingClassifier(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002);2020-02-20 18:06:31,179486;END!
PLE;EVAL_TO;2020-02-20 18:00:26,793491;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2', StandardScaler...                                            learning_rate=0.5, loss='deviance',                                            max_depth=8, max_features=0.3,                                            max_leaf_nodes=None,                                            min_impurity_decrease=0.0,                                            min_impurity_split=None,                                            min_samples_leaf=6,                                            min_samples_split=15,                                            min_weight_fraction_leaf=0.0,                                            n_estimators=100,                                            n_iter_no_change=None,                                            presort='auto', random_state=None,                                            subsample=0.15000000000000002,                                            tol=0.0001, validation_fraction=0.1,                                            verbose=0, warm_start=False))],         verbose=False);2020-02-20 18:06:30,878705;END!
PLE;RMV_IND;Individual 0fa66478-eefc-4e4c-9d0a-aa00398966c2
Pipeline: GradientBoostingClassifier(RBFSampler(StandardScaler(data), RBFSampler.gamma=0.6000000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 18, 0, 26, 793273), wallclock_time=364.0913166999817, process_time=363.165468574);2020-02-20 18:06:31,180492;END!
PLE;IND_MUT;4b33ae16-dbe8-45d2-81c1-3b7a225e73c8;d3462e13-1f44-4338-9c3d-c0cce0b4aefd;mut_shrink;2020-02-20 18:06:31,182664;END!
PLE;EVAL;2020-02-20 18:06:31,168885;8.953075885772705;8.93092366499991;(0.5660287982254864, -2);350dca43-50df-4345-8e6e-377279707f0d;LogisticRegression(Normalizer(data, Normalizer.norm='max'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 18:06:40,406107;END!
PLE;RMV_IND;Individual 350dca43-50df-4345-8e6e-377279707f0d
Pipeline: LogisticRegression(Normalizer(data, Normalizer.norm='max'), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.5660287982254864, -2), start_time=datetime.datetime(2020, 2, 20, 18, 6, 31, 168885), wallclock_time=8.953075885772705, process_time=8.93092366499991);2020-02-20 18:06:40,407532;END!
PLE;IND_MUT;6d6cc47b-7a37-4bb1-9ff3-b42a2557af83;62e49cca-96e1-4a11-a931-a00acd5d57e8;mut_replace_primitive;2020-02-20 18:06:40,409714;END!
PLE;EVAL;2020-02-20 17:59:53,436915;409.7916624546051;408.74232777;(-inf, -2);7676774f-c212-4615-aee1-faa3271eabc3;KNeighborsClassifier(RobustScaler(data), KNeighborsClassifier.n_neighbors=36, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 18:06:43,462791;END!
PLE;EVAL_TO;2020-02-20 17:59:53,437126;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 RobustScaler(copy=True, quantile_range=(25.0, 75.0),                              with_centering=True, with_scaling=True)),                ('0',                 KNeighborsClassifier(algorithm='auto', leaf_size=30,                                      metric='minkowski', metric_params=None,                                      n_jobs=None, n_neighbors=36, p=1,                                      weights='uniform'))],         verbose=False);2020-02-20 18:06:43,223982;END!
PLE;RMV_IND;Individual 7676774f-c212-4615-aee1-faa3271eabc3
Pipeline: KNeighborsClassifier(RobustScaler(data), KNeighborsClassifier.n_neighbors=36, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 17, 59, 53, 436915), wallclock_time=409.7916624546051, process_time=408.74232777);2020-02-20 18:06:43,463864;END!
PLE;IND_MUT;0ebc9cca-701c-4038-9e95-984c6670ec15;62e49cca-96e1-4a11-a931-a00acd5d57e8;mut_replace_terminal;2020-02-20 18:06:43,465952;END!
PLE;EVAL;2020-02-20 18:06:40,460382;5.30082893371582;5.287354590999939;(0.524587828942576, -1);d0ed3439-5c2e-4810-8bc3-12495b8e6130;BernoulliNB(data, alpha=10.0, fit_prior=True);2020-02-20 18:06:46,045579;END!
PLE;RMV_IND;Individual d3462e13-1f44-4338-9c3d-c0cce0b4aefd
Pipeline: LogisticRegression(StandardScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.6795324214550773, -2), start_time=datetime.datetime(2020, 2, 20, 17, 46, 47, 962405), wallclock_time=6.605832815170288, process_time=6.58838726099998);2020-02-20 18:06:46,047428;END!
PLE;IND_MUT;9070510f-d34e-4047-9714-0369487acfeb;9d05f04e-1c82-4408-871f-5c68a08daf41;mut_replace_primitive;2020-02-20 18:06:46,049590;END!
PLE;EVAL;2020-02-20 18:06:46,093196;1.5971078872680664;1.5918724220000513;(-inf, -2);eca522bd-bc53-4b67-972b-04f78b004822;ExtraTreesClassifier(FastICA(data, FastICA.tol=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=9, min_samples_split=6, ExtraTreesClassifier.n_estimators=100);2020-02-20 18:06:47,976841;END!
PLE;EVAL_ERR;2020-02-20 18:06:46,093440;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 FastICA(algori...                 ExtraTreesClassifier(bootstrap=True, class_weight=None,                                      criterion='gini', max_depth=None,                                      max_features=0.35000000000000003,                                      max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=9, min_samples_split=6,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);<class 'ValueError'>;array must not contain infs or NaNs;2020-02-20 18:06:47,690140;END!
PLE;RMV_IND;Individual eca522bd-bc53-4b67-972b-04f78b004822
Pipeline: ExtraTreesClassifier(FastICA(data, FastICA.tol=1.0), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=9, min_samples_split=6, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 18, 6, 46, 93196), wallclock_time=1.5971078872680664, process_time=1.5918724220000513);2020-02-20 18:06:47,977917;END!
PLE;IND_MUT;b33b0259-e60e-493f-af16-f380e170ee73;375b4e99-7679-40bc-b4d7-8e6b15418b00;mut_replace_terminal;2020-02-20 18:06:47,979987;END!
PLE;EVAL;2020-02-20 18:06:43,430652;7.854160308837891;7.833861077999927;(0.6795324353180758, -2);14d1de10-a4f3-4f04-b2a1-5b65e2cadd28;LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 18:06:51,586781;END!
PLE;RMV_IND;Individual 14d1de10-a4f3-4f04-b2a1-5b65e2cadd28
Pipeline: LogisticRegression(RobustScaler(data), LogisticRegression.C=1.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.6795324353180758, -2), start_time=datetime.datetime(2020, 2, 20, 18, 6, 43, 430652), wallclock_time=7.854160308837891, process_time=7.833861077999927);2020-02-20 18:06:51,588756;END!
PLE;IND_MUT;feeced6b-fa98-4158-80c4-4a1852d679fb;ad9fcc16-3a17-405e-a01d-9977b37019ed;mut_insert;2020-02-20 18:06:51,590914;END!
PLE;EVAL;2020-02-20 18:06:47,989753;9.631083488464355;9.60561792999988;(0.5389059900841002, -2);d6dcb058-93b0-4cc6-9f6f-5166c8b9d515;MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=True);2020-02-20 18:06:57,945573;END!
PLE;RMV_IND;Individual d6dcb058-93b0-4cc6-9f6f-5166c8b9d515
Pipeline: MultinomialNB(PolynomialFeatures(data, PolynomialFeatures.degree=2, PolynomialFeatures.include_bias=False, PolynomialFeatures.interaction_only=False), alpha=0.01, fit_prior=True)
Fitness: Fitness(values=(0.5389059900841002, -2), start_time=datetime.datetime(2020, 2, 20, 18, 6, 47, 989753), wallclock_time=9.631083488464355, process_time=9.60561792999988);2020-02-20 18:06:57,951262;END!
PLE;IND_CX;149fa03c-14e4-4ce2-bb7e-501263346e50;29099de2-dbf0-458e-b4e2-f29706ac390a;9abc873b-0abc-43a8-bc14-b2623132db02;2020-02-20 18:06:57,953674;END!
PLE;EVAL;2020-02-20 18:06:51,509639;10.214322805404663;10.189198117999922;(0.5820079558050273, -1);5458d2b9-46ee-49a5-98dc-1272e1f8583c;LogisticRegression(data, LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 18:07:02,002497;END!
PLE;RMV_IND;Individual ccda2944-472f-4c72-b0ca-55d97c7fa7bc
Pipeline: LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.6795335934625245, -2), start_time=datetime.datetime(2020, 2, 20, 18, 0, 10, 377936), wallclock_time=9.527661085128784, process_time=9.503223270000035);2020-02-20 18:07:02,004329;END!
PLE;IND_MUT;23383c52-f534-4308-b480-a74a4253bd50;62e49cca-96e1-4a11-a931-a00acd5d57e8;mut_insert;2020-02-20 18:07:02,006515;END!
PLE;EVAL;2020-02-20 18:02:51,538149;265.235068321228;264.5551795439999;(0.677008112526398, -1);61b1e53f-0ee3-4509-9467-0ceb36a9ce69;GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002);2020-02-20 18:07:17,089785;END!
PLE;RMV_IND;Individual 0967b7f1-032b-48b0-afeb-a66d64a9e459
Pipeline: DecisionTreeClassifier(RobustScaler(data), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11)
Fitness: Fitness(values=(0.6906970486405875, -2), start_time=datetime.datetime(2020, 2, 20, 17, 42, 48, 391318), wallclock_time=12.207404375076294, process_time=12.176255388000016);2020-02-20 18:07:17,091431;END!
PLE;IND_MUT;3eca5fc8-22fe-454e-8fda-99a496c7533b;ffa946bb-722c-4af5-bfc8-66b5113a7fe2;mut_replace_terminal;2020-02-20 18:07:17,093497;END!
PLE;EVAL;2020-02-20 18:02:00,637111;360.568576335907;359.69603529000005;(-inf, -2);7eb0035d-ab88-4689-abf4-a501ed34936e;ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100);2020-02-20 18:08:01,522663;END!
PLE;EVAL_TO;2020-02-20 18:02:00,637384;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', Normalizer(cop...                 ExtraTreesClassifier(bootstrap=True, class_weight=None,                                      criterion='entropy', max_depth=None,                                      max_features=0.9000000000000001,                                      max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=2, min_samples_split=12,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);2020-02-20 18:08:01,200637;END!
PLE;RMV_IND;Individual 7eb0035d-ab88-4689-abf4-a501ed34936e
Pipeline: ExtraTreesClassifier(Normalizer(data, Normalizer.norm='l1'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 18, 2, 0, 637111), wallclock_time=360.568576335907, process_time=359.69603529000005);2020-02-20 18:08:01,524045;END!
PLE;IND_MUT;82a8d72e-926f-48c4-9b9d-2eb9dab9bcc9;0e772a37-4c26-47c3-ba21-9b40c176ffc7;mut_insert;2020-02-20 18:08:01,526149;END!
PLE;EVAL;2020-02-20 18:05:59,893590;172.8957715034485;172.4415900949998;(0.6883857782432355, -3);4bd1f51b-c236-47b2-b6eb-113ab2a7d5fc;GradientBoostingClassifier(PCA(StandardScaler(data), PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25);2020-02-20 18:08:53,133379;END!
PLE;RMV_IND;Individual 4bd1f51b-c236-47b2-b6eb-113ab2a7d5fc
Pipeline: GradientBoostingClassifier(PCA(StandardScaler(data), PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)
Fitness: Fitness(values=(0.6883857782432355, -3), start_time=datetime.datetime(2020, 2, 20, 18, 5, 59, 893590), wallclock_time=172.8957715034485, process_time=172.4415900949998);2020-02-20 18:08:53,135199;END!
PLE;IND_MUT;94637195-ba1b-45be-8946-c6b22ae1ed54;3ef84cab-1868-45fd-ba98-b5b3f0f97914;mut_replace_terminal;2020-02-20 18:08:53,137516;END!
PLE;EVAL;2020-02-20 18:05:30,220256;294.19195652008057;293.43236409299993;(0.7176676121419118, -2);f9b59f79-13fd-419b-a8ca-de5f71bc98df;ExtraTreesClassifier(RobustScaler(data), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=19, min_samples_split=12, ExtraTreesClassifier.n_estimators=100);2020-02-20 18:10:27,956709;END!
PLE;RMV_IND;Individual 55a6f2bd-b943-474b-8c77-9a0d03882c1f
Pipeline: GradientBoostingClassifier(PCA(data, PCA.iterated_power=8, PCA.svd_solver='randomized'), GradientBoostingClassifier.learning_rate=0.1, GradientBoostingClassifier.max_depth=2, GradientBoostingClassifier.max_features=0.9000000000000001, GradientBoostingClassifier.min_samples_leaf=18, GradientBoostingClassifier.min_samples_split=12, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.25)
Fitness: Fitness(values=(0.6912649347821564, -2), start_time=datetime.datetime(2020, 2, 20, 17, 56, 57, 56605), wallclock_time=162.9938566684723, process_time=162.57423859100004);2020-02-20 18:10:27,958326;END!
PLE;IND_MUT;363c83e9-5cca-4c75-b172-fd9d69249e5d;0bd5b044-9209-413b-adb3-f988747f099b;mut_replace_primitive;2020-02-20 18:10:27,960302;END!
PLE;EVAL;2020-02-20 18:10:27,234371;7.745327949523926;7.725672134999968;(0.6718021737450417, -1);deb8893e-fb47-4a79-8eca-08f42b43cb86;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=4, min_samples_leaf=7, min_samples_split=4);2020-02-20 18:10:35,212825;END!
PLE;RMV_IND;Individual d0ed3439-5c2e-4810-8bc3-12495b8e6130
Pipeline: BernoulliNB(data, alpha=10.0, fit_prior=True)
Fitness: Fitness(values=(0.524587828942576, -1), start_time=datetime.datetime(2020, 2, 20, 18, 6, 40, 460382), wallclock_time=5.30082893371582, process_time=5.287354590999939);2020-02-20 18:10:35,214389;END!
PLE;IND_MUT;9ed6547b-7b3a-48b6-8640-bdabe71adbb0;0f86f37e-be87-4d10-abfc-e2a176535ac9;mut_insert;2020-02-20 18:10:35,216547;END!
PLE;EVAL;2020-02-20 18:08:01,509200;224.07108545303345;223.50087849800002;(0.6770578426410786, -3);006a7861-a995-4640-b5d2-e4e478ec22e2;GradientBoostingClassifier(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.05), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002);2020-02-20 18:11:46,040864;END!
PLE;RMV_IND;Individual b806803e-ea1d-49ba-b29c-a4b0de3acc28
Pipeline: MultinomialNB(data, alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(0.5551549159987466, -1), start_time=datetime.datetime(2020, 2, 20, 17, 44, 54, 286571), wallclock_time=4.869704008102417, process_time=4.856815722000022);2020-02-20 18:11:46,042972;END!
PLE;IND_MUT;51243230-b4d6-4b08-92c0-a608f7bad761;0b724031-e30d-4666-b48d-db820aed1366;mut_replace_terminal;2020-02-20 18:11:46,044946;END!
PLE;EVAL;2020-02-20 18:11:45,927870;10.776648998260498;10.749348528000155;(0.6906948454802864, -1);8d45140c-0b69-49bc-b396-62857597f2a9;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=8, min_samples_leaf=2, min_samples_split=11);2020-02-20 18:11:57,026453;END!
PLE;RMV_IND;Individual 0acecd8f-b658-4506-9b9d-019382481cd3
Pipeline: MultinomialNB(data, alpha=0.1, fit_prior=True)
Fitness: Fitness(values=(0.5551549159987466, -1), start_time=datetime.datetime(2020, 2, 20, 17, 54, 6, 3023), wallclock_time=4.825822353363037, process_time=4.813239479999993);2020-02-20 18:11:57,028120;END!
PLE;IND_MUT;147a6b14-7ff9-4941-9a6a-e3f424296e45;8a612021-4080-42f7-a5dc-02cd95a3e751;mut_shrink;2020-02-20 18:11:57,030213;END!
PLE;EVAL;2020-02-20 18:11:56,991760;12.212797164916992;12.181695708000007;(0.4999994540349182, -2);8a628e46-b571-4cab-ad51-756ab6524bb5;BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=1.0, fit_prior=True);2020-02-20 18:12:09,467444;END!
PLE;RMV_IND;Individual 8a628e46-b571-4cab-ad51-756ab6524bb5
Pipeline: BernoulliNB(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), alpha=1.0, fit_prior=True)
Fitness: Fitness(values=(0.4999994540349182, -2), start_time=datetime.datetime(2020, 2, 20, 18, 11, 56, 991760), wallclock_time=12.212797164916992, process_time=12.181695708000007);2020-02-20 18:12:09,469085;END!
PLE;IND_MUT;dba8c2e4-e57f-45a6-bf26-b1cd5d1a94aa;83e06266-92b7-448c-b624-022f6af11ea7;mut_replace_terminal;2020-02-20 18:12:09,471170;END!
PLE;EVAL;2020-02-20 18:12:09,515361;4.86602258682251;4.853671252999902;(0.5551444511268913, -1);5c863c59-8d5a-4e32-9701-cb124475e51b;MultinomialNB(data, alpha=100.0, fit_prior=False);2020-02-20 18:12:14,704718;END!
PLE;RMV_IND;Individual 5c863c59-8d5a-4e32-9701-cb124475e51b
Pipeline: MultinomialNB(data, alpha=100.0, fit_prior=False)
Fitness: Fitness(values=(0.5551444511268913, -1), start_time=datetime.datetime(2020, 2, 20, 18, 12, 9, 515361), wallclock_time=4.86602258682251, process_time=4.853671252999902);2020-02-20 18:12:14,706611;END!
PLE;IND_MUT;86b878e0-579f-4236-a652-ae454cddf4c4;62e49cca-96e1-4a11-a931-a00acd5d57e8;mut_replace_primitive;2020-02-20 18:12:14,708777;END!
PLE;EVAL;2020-02-20 18:07:01,946456;360.60006046295166;359.7123034919998;(-inf, -1);be82ecb3-fe7a-46aa-bffa-6cc6a6f6564e;ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=20, ExtraTreesClassifier.n_estimators=100);2020-02-20 18:13:02,828826;END!
PLE;EVAL_TO;2020-02-20 18:07:01,946697;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 ExtraTreesClassifier(bootstrap=False, class_weight=None,                                      criterion='gini', max_depth=None,                                      max_features=0.8500000000000001,                                      max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=8, min_samples_split=20,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);2020-02-20 18:13:02,541889;END!
PLE;RMV_IND;Individual 006a7861-a995-4640-b5d2-e4e478ec22e2
Pipeline: GradientBoostingClassifier(VarianceThreshold(StandardScaler(data), VarianceThreshold.threshold=0.05), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)
Fitness: Fitness(values=(0.6770578426410786, -3), start_time=datetime.datetime(2020, 2, 20, 18, 8, 1, 509200), wallclock_time=224.07108545303345, process_time=223.50087849800002);2020-02-20 18:13:02,830220;END!
PLE;IND_MUT;4405fcb0-c295-4ae8-ab9a-b519f4fc9f8d;0b724031-e30d-4666-b48d-db820aed1366;mut_replace_terminal;2020-02-20 18:13:02,832523;END!
PLE;EVAL;2020-02-20 18:07:16,976205;355.9345819950104;355.0067474529999;(0.6915168764949835, -1);25a12511-0ab8-48b4-ad49-317604cf3a1b;GradientBoostingClassifier(data, GradientBoostingClassifier.learning_rate=0.001, GradientBoostingClassifier.max_depth=6, GradientBoostingClassifier.max_features=0.6000000000000001, GradientBoostingClassifier.min_samples_leaf=5, GradientBoostingClassifier.min_samples_split=14, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.4);2020-02-20 18:13:13,211291;END!
PLE;RMV_IND;Individual be82ecb3-fe7a-46aa-bffa-6cc6a6f6564e
Pipeline: ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='gini', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=8, min_samples_split=20, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(-inf, -1), start_time=datetime.datetime(2020, 2, 20, 18, 7, 1, 946456), wallclock_time=360.60006046295166, process_time=359.7123034919998);2020-02-20 18:13:13,212860;END!
PLE;IND_MUT;16283a8d-443e-4c16-ae4b-15e3f78204fe;5ff40483-c908-4fb1-9c8d-4b526e09c5cb;mut_replace_primitive;2020-02-20 18:13:13,214851;END!
PLE;EVAL;2020-02-20 18:13:13,097232;11.248655319213867;11.219591778999984;(0.6957465952157804, -1);313f768e-52b0-4948-baa9-764681ce3214;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=10, min_samples_leaf=13, min_samples_split=9);2020-02-20 18:13:24,575711;END!
PLE;RMV_IND;Individual 4a3aa338-76b5-4dff-8e22-f341c0f6bb5a
Pipeline: MultinomialNB(data, alpha=0.01, fit_prior=True)
Fitness: Fitness(values=(0.5551549160502819, -1), start_time=datetime.datetime(2020, 2, 20, 17, 45, 13, 140009), wallclock_time=4.960796356201172, process_time=4.947638703000052);2020-02-20 18:13:24,577316;END!
PLE;IND_MUT;4c24339f-88bd-46af-b3eb-3e600b27a39b;deab9f35-c164-4531-aff1-1673f03a98d7;mut_insert;2020-02-20 18:13:24,579299;END!
PLE;EVAL;2020-02-20 18:13:24,511165;4.734809398651123;4.723141585999656;(0.662709306943867, -1);ff7d7702-c5ac-493e-9a52-6b8d9af3cf7c;GaussianNB(data);2020-02-20 18:13:29,483776;END!
PLE;RMV_IND;Individual 0bd5b044-9209-413b-adb3-f988747f099b
Pipeline: MultinomialNB(data, alpha=0.01, fit_prior=True)
Fitness: Fitness(values=(0.5551549160502819, -1), start_time=datetime.datetime(2020, 2, 20, 17, 51, 16, 577770), wallclock_time=5.128674507141113, process_time=5.115596224000001);2020-02-20 18:13:29,485641;END!
PLE;IND_MUT;223b33ea-e5a3-4f45-b8c5-186ad01fb1ef;fdc8c0fe-40d7-4694-9ae6-67bf13a0337b;mut_insert;2020-02-20 18:13:29,487697;END!
PLE;EVAL;2020-02-20 18:06:57,875078;435.19657731056213;434.061120629;(-inf, -2);e6a6e9e9-650a-4aac-8cac-95659d5a9ac4;KNeighborsClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='chi2', Nystroem.n_components=10), KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance');2020-02-20 18:14:13,365612;END!
PLE;EVAL_TO;2020-02-20 18:06:57,875307;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 Nystroem(coef0=None, degree=None, gamma=1.0, kernel='chi2',                          kernel_params=None, n_components=10,                          random_state=None)),                ('0',                 KNeighborsClassifier(algorithm='auto', leaf_size=30,                                      metric='minkowski', metric_params=None,                                      n_jobs=None, n_neighbors=29, p=2,                                      weights='distance'))],         verbose=False);2020-02-20 18:14:13,067176;END!
PLE;RMV_IND;Individual e6a6e9e9-650a-4aac-8cac-95659d5a9ac4
Pipeline: KNeighborsClassifier(Nystroem(data, Nystroem.gamma=1.0, Nystroem.kernel='chi2', Nystroem.n_components=10), KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=2, KNeighborsClassifier.weights='distance')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 18, 6, 57, 875078), wallclock_time=435.19657731056213, process_time=434.061120629);2020-02-20 18:14:13,366660;END!
PLE;IND_MUT;82df00d2-e405-4f44-acca-f81783aea2ca;62e49cca-96e1-4a11-a931-a00acd5d57e8;mut_replace_primitive;2020-02-20 18:14:13,368767;END!
PLE;EVAL;2020-02-20 18:14:13,342288;6.043516159057617;6.028306409999914;(0.6523725451542948, -2);f5220ec2-569e-417e-87f6-f88eb0505515;BernoulliNB(RobustScaler(data), alpha=0.01, fit_prior=False);2020-02-20 18:14:19,660378;END!
PLE;RMV_IND;Individual 829232c5-938f-4039-81b8-6e36a6d0333f
Pipeline: LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.5655802071893128, -1), start_time=datetime.datetime(2020, 2, 20, 17, 52, 34, 453761), wallclock_time=8.63874363899231, process_time=8.617291402999967);2020-02-20 18:14:19,661968;END!
PLE;IND_MUT;d9c216ec-a561-4902-94f3-8273dc725be9;7fd81b21-89d4-4446-93ab-bac0cd9beffc;mut_insert;2020-02-20 18:14:19,663941;END!
PLE;EVAL;2020-02-20 18:13:29,409731;78.39620900154114;78.19880652600023;(0.5388731421341206, -2);d6a20251-d85a-436d-8223-0c29c48d7972;GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002);2020-02-20 18:14:48,109425;END!
PLE;RMV_IND;Individual d6a20251-d85a-436d-8223-0c29c48d7972
Pipeline: GradientBoostingClassifier(Binarizer(data, Binarizer.threshold=0.7000000000000001), GradientBoostingClassifier.learning_rate=0.5, GradientBoostingClassifier.max_depth=8, GradientBoostingClassifier.max_features=0.3, GradientBoostingClassifier.min_samples_leaf=6, GradientBoostingClassifier.min_samples_split=15, GradientBoostingClassifier.n_estimators=100, GradientBoostingClassifier.subsample=0.15000000000000002)
Fitness: Fitness(values=(0.5388731421341206, -2), start_time=datetime.datetime(2020, 2, 20, 18, 13, 29, 409731), wallclock_time=78.39620900154114, process_time=78.19880652600023);2020-02-20 18:14:48,111459;END!
PLE;IND_MUT;71f60ce5-a7a0-428d-858f-d4ab7f69a423;fdc8c0fe-40d7-4694-9ae6-67bf13a0337b;mut_insert;2020-02-20 18:14:48,113572;END!
PLE;EVAL;2020-02-20 18:14:19,694655;31.422861576080322;31.344305764000183;(0.6703567856637997, -1);c187f66d-e23f-4b70-bca6-071caf6b97d0;KNeighborsClassifier(data, KNeighborsClassifier.n_neighbors=29, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='uniform');2020-02-20 18:14:54,220266;END!
PLE;RMV_IND;Individual f5220ec2-569e-417e-87f6-f88eb0505515
Pipeline: BernoulliNB(RobustScaler(data), alpha=0.01, fit_prior=False)
Fitness: Fitness(values=(0.6523725451542948, -2), start_time=datetime.datetime(2020, 2, 20, 18, 14, 13, 342288), wallclock_time=6.043516159057617, process_time=6.028306409999914);2020-02-20 18:14:54,222167;END!
PLE;IND_MUT;69a8f35b-293a-449e-8306-f72ceb7edc4d;ad9fcc16-3a17-405e-a01d-9977b37019ed;mut_replace_terminal;2020-02-20 18:14:54,224223;END!
PLE;EVAL;2020-02-20 18:14:52,889268;9.865432024002075;9.84074094100015;(0.6873854959080492, -1);d4766b48-cd0c-4aea-ac62-da7c29cca437;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=8);2020-02-20 18:15:03,069886;END!
PLE;RMV_IND;Individual 9cff1e45-c0ed-437a-9f11-906b86f0ac17
Pipeline: KNeighborsClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')
Fitness: Fitness(values=(0.697665134748136, -2), start_time=datetime.datetime(2020, 2, 20, 17, 47, 31, 780521), wallclock_time=23.940343618392944, process_time=23.876613907000092);2020-02-20 18:15:03,071406;END!
PLE;IND_CX;be1a96a0-dbbf-4502-aa38-6b744afcef70;67e46f00-5021-41ac-a177-27b63f111f07;375b4e99-7679-40bc-b4d7-8e6b15418b00;2020-02-20 18:15:03,073515;END!
PLE;EVAL;2020-02-20 18:10:35,265911;267.6046223640442;266.91547562200003;(0.7168536194761428, -1);d5709c1a-423e-4e31-904a-22f3ef259766;ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.55, min_samples_leaf=16, min_samples_split=7, ExtraTreesClassifier.n_estimators=100);2020-02-20 18:15:08,661066;END!
PLE;EVAL_ERR;2020-02-20 18:15:07,151521;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 Nystroem(coef0=None, degree=None, gamma=0.9, kernel='cosine',                          kernel_params=None, n_components=4,                          random_state=None)),                ('0',                 MultinomialNB(alpha=0.01, class_prior=None, fit_prior=True))],         verbose=False);<class 'ValueError'>;Input X must be non-negative;2020-02-20 18:15:08,103949;END!
PLE;RMV_IND;Individual 83e06266-92b7-448c-b624-022f6af11ea7
Pipeline: LogisticRegression(data, LogisticRegression.C=0.0001, LogisticRegression.dual=False, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(0.5655802071893128, -1), start_time=datetime.datetime(2020, 2, 20, 17, 57, 10, 402900), wallclock_time=8.262201070785522, process_time=8.240487795000035);2020-02-20 18:15:08,663056;END!
PLE;IND_MUT;5e1f1b73-ce28-48da-bfe6-6998709bfaf6;5458d2b9-46ee-49a5-98dc-1272e1f8583c;mut_replace_primitive;2020-02-20 18:15:08,665093;END!
PLE;EVAL;2020-02-20 18:15:07,151317;0.9527814388275146;0.9498944029996892;(-inf, -2);27ec99e9-e05a-4bbf-b2dd-0c56584b6643;MultinomialNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=4), alpha=0.01, fit_prior=True);2020-02-20 18:15:08,859143;END!
PLE;RMV_IND;Individual 27ec99e9-e05a-4bbf-b2dd-0c56584b6643
Pipeline: MultinomialNB(Nystroem(data, Nystroem.gamma=0.9, Nystroem.kernel='cosine', Nystroem.n_components=4), alpha=0.01, fit_prior=True)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 18, 15, 7, 151317), wallclock_time=0.9527814388275146, process_time=0.9498944029996892);2020-02-20 18:15:08,860096;END!
PLE;IND_MUT;a8e231df-6d49-47e4-baf5-f384a694ef6d;67e46f00-5021-41ac-a177-27b63f111f07;mut_replace_primitive;2020-02-20 18:15:08,862250;END!
PLE;EVAL;2020-02-20 18:13:02,755986;245.64149045944214;244.9998120109999;(0.5043463829485798, -2);25fd3e00-98d2-44b2-8658-d44ef89d90a7;DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=15, min_samples_split=16);2020-02-20 18:17:08,678784;END!
PLE;RMV_IND;Individual 25fd3e00-98d2-44b2-8658-d44ef89d90a7
Pipeline: DecisionTreeClassifier(RBFSampler(data, RBFSampler.gamma=0.7000000000000001), DecisionTreeClassifier.criterion='entropy', DecisionTreeClassifier.max_depth=7, min_samples_leaf=15, min_samples_split=16)
Fitness: Fitness(values=(0.5043463829485798, -2), start_time=datetime.datetime(2020, 2, 20, 18, 13, 2, 755986), wallclock_time=245.64149045944214, process_time=244.9998120109999);2020-02-20 18:17:08,680395;END!
PLE;IND_MUT;4356830c-87ad-4866-8aab-90c115ed5afb;fdc8c0fe-40d7-4694-9ae6-67bf13a0337b;mut_replace_terminal;2020-02-20 18:17:08,682449;END!
PLE;EVAL;2020-02-20 18:17:08,610992;9.55039095878601;9.525452087000303;(0.6873854959080492, -1);38ac8510-79f2-4964-ac72-52aac5abebe4;DecisionTreeClassifier(data, DecisionTreeClassifier.criterion='gini', DecisionTreeClassifier.max_depth=7, min_samples_leaf=1, min_samples_split=8);2020-02-20 18:17:18,438492;END!
PLE;RMV_IND;Individual 0e772a37-4c26-47c3-ba21-9b40c176ffc7
Pipeline: ExtraTreesClassifier(VarianceThreshold(data, VarianceThreshold.threshold=0.55), ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.35000000000000003, min_samples_leaf=9, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(0.6997962353028082, -2), start_time=datetime.datetime(2020, 2, 20, 18, 0, 18, 401636), wallclock_time=77.95542979240417, process_time=77.75448926900003);2020-02-20 18:17:18,439959;END!
PLE;IND_MUT;ab628366-4f2e-40b8-b770-6dc0da74002c;9d05f04e-1c82-4408-871f-5c68a08daf41;mut_insert;2020-02-20 18:17:18,442032;END!
PLE;EVAL;2020-02-20 18:08:53,035501;548.6427495479584;547.2164552429997;(-inf, -3);54f1461a-e374-437a-a951-675dea0fe32d;KNeighborsClassifier(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), Binarizer.threshold=0.8500000000000001), KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance');2020-02-20 18:18:01,908727;END!
PLE;EVAL_TO;2020-02-20 18:08:53,035721;Pipeline(memory=None,         steps=[('4',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('3',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('2',                 FeatureAgglome...                                      compute_full_tree='auto',                                      connectivity=None,                                      distance_threshold=None,                                      linkage='complete', memory=None,                                      n_clusters=2,                                      pooling_func=<function mean at 0x2b53e3cd1840>)),                ('1', Binarizer(copy=True, threshold=0.8500000000000001)),                ('0',                 KNeighborsClassifier(algorithm='auto', leaf_size=30,                                      metric='minkowski', metric_params=None,                                      n_jobs=None, n_neighbors=42, p=1,                                      weights='distance'))],         verbose=False);2020-02-20 18:18:01,673110;END!
PLE;RMV_IND;Individual 54f1461a-e374-437a-a951-675dea0fe32d
Pipeline: KNeighborsClassifier(Binarizer(FeatureAgglomeration(data, FeatureAgglomeration.affinity='manhattan', FeatureAgglomeration.linkage='complete'), Binarizer.threshold=0.8500000000000001), KNeighborsClassifier.n_neighbors=42, KNeighborsClassifier.p=1, KNeighborsClassifier.weights='distance')
Fitness: Fitness(values=(-inf, -3), start_time=datetime.datetime(2020, 2, 20, 18, 8, 53, 35501), wallclock_time=548.6427495479584, process_time=547.2164552429997);2020-02-20 18:18:01,909801;END!
PLE;IND_MUT;2da0941c-9c54-43f3-af41-7cb4b9d93833;ff7d7702-c5ac-493e-9a52-6b8d9af3cf7c;mut_insert;2020-02-20 18:18:01,911914;END!
PLE;EVAL;2020-02-20 18:18:01,857543;0.8770709037780762;0.8744830069999807;(-inf, -2);abf6feea-bbea-4b4f-8fee-4f7f05324908;LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs');2020-02-20 18:18:02,981959;END!
PLE;EVAL_ERR;2020-02-20 18:18:01,857726;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1', MaxAbsScaler(copy=True)),                ('0',                 LogisticRegression(C=15.0, class_weight=None, dual=True,                                    fit_intercept=True, intercept_scaling=1,                                    l1_ratio=None, max_iter=100,                                    multi_class='warn', n_jobs=None,                                    penalty='l2', random_state=None,                                    solver='lbfgs', tol=0.0001, verbose=0,                                    warm_start=False))],         verbose=False);<class 'ValueError'>;Solver lbfgs supports only dual=False, got dual=True;2020-02-20 18:18:02,734491;END!
PLE;RMV_IND;Individual abf6feea-bbea-4b4f-8fee-4f7f05324908
Pipeline: LogisticRegression(MaxAbsScaler(data), LogisticRegression.C=15.0, LogisticRegression.dual=True, LogisticRegression.penalty='l2', LogisticRegression.solver='lbfgs')
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 18, 18, 1, 857543), wallclock_time=0.8770709037780762, process_time=0.8744830069999807);2020-02-20 18:18:02,983066;END!
PLE;IND_MUT;a6f38a9b-d678-4c76-b81b-e7efd1e71d95;8a612021-4080-42f7-a5dc-02cd95a3e751;mut_replace_primitive;2020-02-20 18:18:02,985223;END!
PLE;EVAL;2020-02-20 18:18:02,933033;0.966076135635376;0.9624120899998161;(-inf, -2);05981a76-a2e1-420b-890a-2841bf21c9fc;MultinomialNB(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='poly', Nystroem.n_components=7), alpha=0.01, fit_prior=False);2020-02-20 18:18:04,143248;END!
PLE;EVAL_ERR;2020-02-20 18:18:02,933215;Pipeline(memory=None,         steps=[('3',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('2',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('1',                 Nystroem(coef0=None, degree=None, gamma=0.05, kernel='poly',                          kernel_params=None, n_components=7,                          random_state=None)),                ('0',                 MultinomialNB(alpha=0.01, class_prior=None, fit_prior=False))],         verbose=False);<class 'ValueError'>;Input X must be non-negative;2020-02-20 18:18:03,898940;END!
PLE;RMV_IND;Individual 05981a76-a2e1-420b-890a-2841bf21c9fc
Pipeline: MultinomialNB(Nystroem(data, Nystroem.gamma=0.05, Nystroem.kernel='poly', Nystroem.n_components=7), alpha=0.01, fit_prior=False)
Fitness: Fitness(values=(-inf, -2), start_time=datetime.datetime(2020, 2, 20, 18, 18, 2, 933033), wallclock_time=0.966076135635376, process_time=0.9624120899998161);2020-02-20 18:18:04,144289;END!
PLE;IND_MUT;cda84c80-6ce3-437e-a018-b93f12d39689;deb8893e-fb47-4a79-8eca-08f42b43cb86;mut_replace_primitive;2020-02-20 18:18:04,151790;END!
PLE;EVAL;2020-02-20 18:12:14,652066;360.2308568954468;359.3534023970001;(-inf, -1);32702e6a-35ae-4482-8724-94fe15eca6b8;ExtraTreesClassifier(data, ExtraTreesClassifier.bootstrap=False, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.8500000000000001, min_samples_leaf=14, min_samples_split=11, ExtraTreesClassifier.n_estimators=100);2020-02-20 18:18:15,137005;END!
PLE;EVAL_TO;2020-02-20 18:12:14,652289;Pipeline(memory=None,         steps=[('2',                 TargetEncoder(cols=['Airline', 'AirportFrom', 'AirportTo'],                               drop_invariant=False, handle_missing='value',                               handle_unknown='value', min_samples_leaf=1,                               return_df=True, smoothing=1.0, verbose=0)),                ('1',                 SimpleImputer(add_indicator=False, copy=True, fill_value=None,                               missing_values=nan, strategy='median',                               verbose=0)),                ('0',                 ExtraTreesClas...r(bootstrap=False, class_weight=None,                                      criterion='entropy', max_depth=None,                                      max_features=0.8500000000000001,                                      max_leaf_nodes=None,                                      min_impurity_decrease=0.0,                                      min_impurity_split=None,                                      min_samples_leaf=14, min_samples_split=11,                                      min_weight_fraction_leaf=0.0,                                      n_estimators=100, n_jobs=None,                                      oob_score=False, random_state=None,                                      verbose=0, warm_start=False))],         verbose=False);2020-02-20 18:18:14,878471;END!
PLE;RMV_IND;Individual 8a612021-4080-42f7-a5dc-02cd95a3e751
Pipeline: ExtraTreesClassifier(FeatureAgglomeration(data, FeatureAgglomeration.affinity='euclidean', FeatureAgglomeration.linkage='ward'), ExtraTreesClassifier.bootstrap=True, ExtraTreesClassifier.criterion='entropy', ExtraTreesClassifier.max_features=0.9000000000000001, min_samples_leaf=2, min_samples_split=12, ExtraTreesClassifier.n_estimators=100)
Fitness: Fitness(values=(0.7075157991932209, -2), start_time=datetime.datetime(2020, 2, 20, 17, 49, 26, 281193), wallclock_time=91.73429799079895, process_time=91.49690133999991);2020-02-20 18:18:15,138533;END!
PLE;IND_MUT;791b6bd9-1f00-464c-a458-4b17837ac705;f9b59f79-13fd-419b-a8ca-de5f71bc98df;mut_insert;2020-02-20 18:18:15,140579;END!
PLE;PE;search;AsyncEA;2020-02-20 18:18:29,946219;END!
PLE;PS;postprocess;EnsemblePostProcessing;2020-02-20 18:18:29,946413;END!
PLE;PE;postprocess;EnsemblePostProcessing;2020-02-20 18:18:41,290412;END!
Ensemble was tuned with a class-probabilities metric. Using argmax of probabilities, which may not give optimal predictions.
